panel.grid.minor = element_blank()) +
scale_x_discrete(limits = as.character(2014:2022)) +
coord_cartesian(ylim = c(0, 2))
# print(gg_grafico_primeira_ocorrencia_norte)
# Salvar o gráfico em formato PNG
#ggsave("indice_abundancia_norte.png",
#      gg_grafico_primeira_ocorrencia_norte,
#     width = 12,
#    height = 10,
#   units = "in")
##############################################
#### Gráficos combinados
#############################################
library(gridExtra)
indice_abu_amazonia <- grid.arrange(
gg_grafico_primeira_ocorrencia_central + theme(legend.position = "none",
axis.text.x = element_blank(),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
panel.spacing = unit(0.5, "lines"),
panel.grid.major = element_line(color = "gray80", size = 0.4),
axis.ticks.y = element_line(color = "black", size = 0.4)),
gg_grafico_primeira_ocorrencia_sudoeste + theme(legend.position = "none",
axis.text.x = element_blank(),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
panel.spacing = unit(0.5, "lines"),
panel.grid.major = element_line(color = "gray80", size = 0.4),
axis.ticks.y = element_line(color = "black", size = 0.4)),
gg_grafico_primeira_ocorrencia_leste + theme(legend.position = "none",
axis.text.x = element_blank(),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
panel.spacing = unit(0.5, "lines"),
panel.grid.major = element_line(color = "gray80", size = 0.4),
axis.ticks.y = element_line(color = "black", size = 0.4)),
gg_grafico_primeira_ocorrencia_sudeste + theme(legend.position = "none",
axis.text.x = element_blank(),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
panel.grid.major = element_line(color = "gray80", size = 0.4),
axis.ticks.y = element_line(color = "black", size = 0.4)),
gg_grafico_primeira_ocorrencia_norte + theme(legend.position = "bottom",
axis.text.x = element_text(size = 20),
axis.title = element_text(size = 14),
plot.title = element_text(size = 18),
panel.spacing = unit(0.5, "lines"),
panel.grid.major = element_line(color = "gray80", size = 0.4),
axis.ticks.y = element_line(color = "black", size = 0.4),
legend.text = element_text(size = 20)),
nrow = 5,  heights = c(10, 10, 10, 10, 13)
)
# Remover os painéis menores
indice_abu_amazonia$grobs[[1]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL
indice_abu_amazonia$grobs[[2]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL
indice_abu_amazonia$grobs[[3]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL
indice_abu_amazonia$grobs[[4]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL
indice_abu_amazonia$grobs[[5]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL
# Exibir a imagem
print(indice_abu_amazonia)
# Salvar o gráfico em formato PNG
# ggsave("indice_abundancia_combinado_amazonia.png",
#        indice_abu_amazonia,
#        width = 16,
#        height = 16,
#        units = "in")
ggsave("indice_abundancia_combinado_amazonia.png",
indice_abu_amazonia,
width = 16,
height = 16,
units = "in")
# Exibir a imagem
print(indice_abu_amazonia)
ggsave("imagens/cap04/indice_abundancia_combinado_amazonia2.png",
indice_abu_amazonia,
width = 16,
height = 16,
units = "in")
#| label: ind-abund-regioes-climaticas-combinado
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '70%'
#| tab-cap: "Variação no índice de abundância das tribos de borboletas frugívoras do bioma Amazônico em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada marrom."
knitr::include_graphics("imagens/cap04/indice_abundancia_combinado_amazonia.png")
#| label: ind-abund-cerrado-calculos
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '70%'
#| tab-cap: "Variação no índice de abundância das tribos de borboletas frugívoras do bioma Amazônico em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada marrom."
##### Índices de abundância de tribos ao longo dos anos - Cerrado
##Script: Isabela Freitas Oliveira
library(dplyr)
library(tidyr)
# Definir o diretório de trabalho
# setwd("~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela")
df_indice<-read.csv("dados/borboletas/resultado_final_com_esforco.csv", header=T, sep = ';')
df_indice <- df_indice[!is.na(df_indice$tribo), ]
dados_regiao_especifica <- df_indice %>%
filter(bioma == "Cerrado")
# Agregar soma_individuos por tribo e ano
soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%
group_by(tribo, ano) %>%
summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%
ungroup()
# Verificar o esforço individual por uc_ea e expedicao
esforco_individual <- dados_regiao_especifica %>%
group_by(uc, uc_ea, ano, expedicao) %>%
summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%
ungroup()
# Somar os esforços por expedicao
esforco_por_expedicao <- esforco_individual %>%
group_by(uc, ano, expedicao) %>%
summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%
ungroup()
# Calcular o esforço total anual para cada ano
esforco_total_anual <- esforco_por_expedicao %>%
group_by(ano) %>%
summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%
ungroup()
# Juntar com soma_individuos_por_tribo_ano
df_agregado <- soma_individuos_por_tribo_ano %>%
left_join(esforco_total_anual, by = "ano") %>%
ungroup()
# Somando os grupos de borboletas_fechadas
borboletas_fechadas <- df_agregado %>%
filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%
group_by(ano) %>%
summarise(soma_individuos = sum(soma_individuos)) %>%
ungroup() %>%
mutate(tribo = 'Borboletas_fechadas') %>%
left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = "ano")
# Somando os grupos de borboletas_abertas
borboletas_abertas <- df_agregado %>%
filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%
group_by(ano) %>%
summarise(soma_individuos = sum(soma_individuos)) %>%
ungroup() %>%
mutate(tribo = 'Borboletas_abertas') %>%
left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = "ano")
# Adicionando as linhas de Borboletas_fechadas ao dataframe original
df_agregado <- bind_rows(df_agregado, borboletas_fechadas)
# Adicionando as linhas de Borboletas_abertas ao dataframe original
df_agregado <- bind_rows(df_agregado, borboletas_abertas)
#######################
# Calcular o índice de abundância referente ao ano anterior
df_agregado_1 <- df_agregado %>%
group_by(tribo) %>%
arrange(tribo, ano) %>%
mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,
# log_frequencia_corrigida = log10(frequencia_corrigida),
primeira_ocorrencia = which(soma_individuos >= 20)[1],
indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,
if_else(row_number() < primeira_ocorrencia, NA_real_,
log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%
ungroup() %>%
select(-primeira_ocorrencia)
#Tabela completa
#write.table(df_agregado_1, "df_completo_cerrado_ano_anterior.txt", sep = "\t", row.names = FALSE)
# Reestruturar para visualização
df_tribo_ano_largo <- df_agregado_1 %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
# Reestruturar o dataframe para o formato largo
df_tribo_ano_largo <- df_agregado_1 %>%
select(tribo, ano, indice_abundancia) %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
# Limitar os valores a 3 casas decimais
df_tribo_ano_largo <- df_tribo_ano_largo %>%
mutate_if(is.numeric, ~ round(., 3))
#Tabela de índices de abundancia para o relatório
tab_boneco_cerrado <- df_agregado_1 %>%
filter(!(row_number() %in% 28:45))
df_tribo_ano_largo_tab <- tab_boneco_cerrado %>%
select(tribo, ano, indice_abundancia) %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%
mutate_if(is.numeric, ~ round(., 3))
#Salvar
#write.table(df_tribo_ano_largo_tab, "indice_abundancia_cerrado_ano_anterior.txt", sep = "\t", row.names = FALSE)
# Filtrar as linhas desejadas
df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%
filter(row_number() %in% c(4, 5))
df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%
mutate(tribo = ifelse(row_number() == 1, "Borboletas de florestas abertas/perturbadas",
ifelse(row_number() == 2, "Borboletas de florestas fechadas/preservadas", tribo)))
## Tabela para colocar no relatório (índice referente aos valores do ano anterior)
#write.table(df_tribo_ano_largo_filtrado, "indice_abundancia_cerrado_tab_indicadoras_ano_anterior.txt", sep = "\t", row.names = FALSE)
######################
# Calcular o índice de abundância referente ao ano de primeira ocorrencia
df_agregado_2 <- df_agregado %>%
group_by(tribo) %>%
arrange(tribo, ano) %>%
mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,
#log_frequencia_corrigida = log10(frequencia_corrigida),
primeira_ocorrencia = which(soma_individuos >= 20)[1],
indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,
if_else(row_number() < primeira_ocorrencia, NA_real_,
log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%
ungroup() %>%
select(-primeira_ocorrencia)
#Tabela completa
#write.table(df_agregado_2, "df_completo_cerrado_primeiro_ano.txt", sep = "\t", row.names = FALSE)
# Reestruturar para visualização
df_tribo_ano_largo <- df_agregado_2 %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
# Reestruturar o dataframe para o formato largo
df_tribo_ano_largo <- df_agregado_2 %>%
select(tribo, ano, indice_abundancia) %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
# Limitar os valores a 3 casas decimais
df_tribo_ano_largo <- df_tribo_ano_largo %>%
mutate_if(is.numeric, ~ round(., 3))
# Salvar
#write.table(df_tribo_ano_largo, "indice_abundancia_cerrado_primeiro_ano.txt", sep = "\t", row.names = FALSE)
############
#Gráfico
library(ggplot2)
# Definir as cores e tipos de linha para cada tribo
cores_linhas <- c("Borboletas_fechadas" = "#23867E", "Borboletas_abertas" = "#CFA154")
tipos_linhas <- c("Borboletas_fechadas" = "solid","Borboletas_abertas" = "dashed")
dados_longos <- df_agregado_2 %>%
filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))
# Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)
anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))
dados_longos <- dados_longos %>%
bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 1),
ano = 2020, each = length(unique(dados_longos$tribo)),
indice_abundancia = NA))
# Criar uma sequência completa de anos
anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))
# Grafico - referente ao primeiro ano de ocorrencia
gg_grafico_primeira_ocorrencia_cerrado <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +
geom_line(aes(group = tribo), size = 1) +
geom_hline(yintercept = 1, linetype = "dashed", color = "black", size = 0.5) +
scale_color_manual(values = cores_linhas, labels = c("Borboletas_fechadas" = "Borboletas de áreas florestais fechadas/preservadas",
"Borboletas_abertas" = "Borboletas de áreas florestais abertas/perturbadas")) +
scale_linetype_manual(values = tipos_linhas, labels = c("Borboletas_fechadas" = "Borboletas de áreas florestais fechadas/preservadas",
"Borboletas_abertas" = "Borboletas de áreas florestais abertas/perturbadas")) +
theme_minimal() +
labs(title = "Cerrado",
x = "",
y = expression("Índice de Abundância (" * italic("i") * ")"),
color = NULL,
linetype = NULL) +
theme(plot.title = element_text(hjust = 0.5, size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12),
axis.line = element_line(color = "black"),
axis.line.x = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(hjust = 0.5)) +
scale_x_discrete(labels = as.character(anos_completos))+
coord_cartesian(ylim = c(0, 2))
# Exibir o gráfico
print(gg_grafico_primeira_ocorrencia_cerrado)
# Salvar o gráfico em formato PNG
ggsave("indice_abundancia_cerrado.png",
gg_grafico_primeira_ocorrencia_cerrado,
width = 10,
height = 5,
units = "in")
# Salvar o gráfico em formato PNG
ggsave("imagens/cap04/indice_abundancia_cerrado.png",
gg_grafico_primeira_ocorrencia_cerrado,
width = 10,
height = 5,
units = "in")
# Salvar o gráfico em formato PNG
ggsave("imagens/cap04/bo-indice-abundancia-cerrado.png",
gg_grafico_primeira_ocorrencia_cerrado,
width = 10,
height = 5,
units = "in")
#| label: ind-abund-cerrado
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '70%'
#| tab-cap: "Variação no índice de abundância das tribos de borboletas frugívoras do bioma Amazônico em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada marrom."
knitr::include_graphics("imagens/cap04/indice-abundancia-cerrado.png")
knitr::include_graphics("imagens/cap04/bo-indice-abundancia-cerrado.png")
#| label: ind-abund-mata-atlantica
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '70%'
##### Índices de abundância de tribos ao longo dos anos - Central Amazônico
##Script: Isabela Freitas Oliveira
library(dplyr)
library(tidyr)
# Definir o diretório de trabalho
#setwd("~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela")
df_indice<-read.csv("dados/borboletas/resultado_final_com_esforco.csv", header=T, sep = ';')
df_indice <- df_indice[!is.na(df_indice$tribo), ]
dados_regiao_especifica <- df_indice %>%
filter(bioma == "Mata_Atlantica")
# Agregar soma_individuos por tribo e ano
soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%
group_by(tribo, ano) %>%
summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%
ungroup()
# Verificar o esforço individual por uc_ea e expedicao
esforco_individual <- dados_regiao_especifica %>%
group_by(uc, uc_ea, ano, expedicao) %>%
summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%
ungroup()
# Somar os esforços por expedicao
esforco_por_expedicao <- esforco_individual %>%
group_by(uc, ano, expedicao) %>%
summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%
ungroup()
# Calcular o esforço total anual para cada ano
esforco_total_anual <- esforco_por_expedicao %>%
group_by(ano) %>%
summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%
ungroup()
# Juntar com soma_individuos_por_tribo_ano
df_agregado <- soma_individuos_por_tribo_ano %>%
left_join(esforco_total_anual, by = "ano") %>%
ungroup()
# Somando os grupos de borboletas_fechadas
borboletas_fechadas <- df_agregado %>%
filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%
group_by(ano) %>%
summarise(soma_individuos = sum(soma_individuos)) %>%
ungroup() %>%
mutate(tribo = 'Borboletas_fechadas') %>%
left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = "ano")
# Somando os grupos de borboletas_abertas
borboletas_abertas <- df_agregado %>%
filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%
group_by(ano) %>%
summarise(soma_individuos = sum(soma_individuos)) %>%
ungroup() %>%
mutate(tribo = 'Borboletas_abertas') %>%
left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = "ano")
# Adicionando as linhas de Borboletas_fechadas ao dataframe original
df_agregado <- bind_rows(df_agregado, borboletas_fechadas)
# Adicionando as linhas de Borboletas_abertas ao dataframe original
df_agregado <- bind_rows(df_agregado, borboletas_abertas)
#######################
# Calcular o índice de abundância referente ao ano anterior
df_agregado_1 <- df_agregado %>%
group_by(tribo) %>%
arrange(tribo, ano) %>%
mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,
# log_frequencia_corrigida = log10(frequencia_corrigida),
primeira_ocorrencia = which(soma_individuos >= 20)[1],
indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,
if_else(row_number() < primeira_ocorrencia, NA_real_,
log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%
ungroup() %>%
select(-primeira_ocorrencia)
#Tabela completa
#write.table(df_agregado_1, "df_completo_mata_atlantica_ano_anterior.txt", sep = "\t", row.names = FALSE)
# Reestruturar para visualização
df_tribo_ano_largo <- df_agregado_1 %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
# Reestruturar o dataframe para o formato largo
df_tribo_ano_largo <- df_agregado_1 %>%
select(tribo, ano, indice_abundancia) %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
# Limitar os valores a 3 casas decimais
df_tribo_ano_largo <- df_tribo_ano_largo %>%
mutate_if(is.numeric, ~ round(., 3))
#Tabela de índices de abundancia para o relatório
tab_boneco_mata_atlantica <- df_agregado_1 %>%
filter(!(row_number() %in% 28:45))
df_tribo_ano_largo_tab <- tab_boneco_mata_atlantica %>%
select(tribo, ano, indice_abundancia) %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%
mutate_if(is.numeric, ~ round(., 3))
#Salvar
#write.table(df_tribo_ano_largo_tab, "indice_abundancia_mata_atlantica_ano_anterior.txt", sep = "\t", row.names = FALSE)
# Filtrar as linhas desejadas
df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%
filter(row_number() %in% c(4, 5))
df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%
mutate(tribo = ifelse(row_number() == 1, "Borboletas de florestas abertas/perturbadas",
ifelse(row_number() == 2, "Borboletas de florestas fechadas/preservadas", tribo)))
## Tabela para colocar no relatório (índice referente aos valores do ano anterior)
#write.table(df_tribo_ano_largo_filtrado, "indice_abundancia_mata_atlantica_tab_indicadoras_ano_anterior.txt", sep = "\t", row.names = FALSE)
######################
# Calcular o índice de abundância referente ao ano de primeira ocorrencia
df_agregado_2 <- df_agregado %>%
group_by(tribo) %>%
arrange(tribo, ano) %>%
mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,
#log_frequencia_corrigida = log10(frequencia_corrigida),
primeira_ocorrencia = which(soma_individuos >= 20)[1],
indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,
if_else(row_number() < primeira_ocorrencia, NA_real_,
log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%
ungroup() %>%
select(-primeira_ocorrencia)
#Tabela completa
#write.table(df_agregado_2, "df_completo_mata_atlantica_primeiro_ano.txt", sep = "\t", row.names = FALSE)
# Reestruturar para visualização
df_tribo_ano_largo <- df_agregado_2 %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
# Reestruturar o dataframe para o formato largo
df_tribo_ano_largo <- df_agregado_2 %>%
select(tribo, ano, indice_abundancia) %>%
pivot_wider(names_from = ano, values_from = indice_abundancia)
# Limitar os valores a 3 casas decimais
df_tribo_ano_largo <- df_tribo_ano_largo %>%
mutate_if(is.numeric, ~ round(., 3))
# Salvar
#write.table(df_tribo_ano_largo, "indice_abundancia_mata_atlantica_primeiro_ano.txt", sep = "\t", row.names = FALSE)
############
#Gráfico
library(ggplot2)
# Definir as cores e tipos de linha para cada tribo
cores_linhas <- c("Borboletas_fechadas" = "#23867E", "Borboletas_abertas" = "#CFA154")
tipos_linhas <- c("Borboletas_fechadas" = "solid","Borboletas_abertas" = "dashed")
dados_longos <- df_agregado_2 %>%
filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))
# Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)
anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))
dados_longos <- dados_longos %>%
bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 1),
ano = 2020, each = length(unique(dados_longos$tribo)),
indice_abundancia = NA))
# Criar uma sequência completa de anos
anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))
# Grafico - referente ao primeiro ano de ocorrencia
gg_grafico_primeira_ocorrencia_mata_atlantica <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +
geom_line(aes(group = tribo), size = 1) +
geom_hline(yintercept = 1, linetype = "dashed", color = "black", size = 0.5) +
scale_color_manual(values = cores_linhas, labels = c("Borboletas_fechadas" = "Borboletas de áreas florestais fechadas/preservadas",
"Borboletas_abertas" = "Borboletas de áreas florestais abertas/perturbadas")) +
scale_linetype_manual(values = tipos_linhas, labels = c("Borboletas_fechadas" = "Borboletas de áreas florestais fechadas/preservadas",
"Borboletas_abertas" = "Borboletas de áreas florestais abertas/perturbadas")) +
theme_minimal() +
labs(title = "Mata Atlântica",
x = "",
y = expression("Índice de Abundância (" * italic("i") * ")"),
color = NULL,
linetype = NULL) +
theme(plot.title = element_text(hjust = 0.5, size = 20),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12),
axis.line = element_line(color = "black"),
axis.line.x = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(hjust = 0.5)) +
scale_x_discrete(labels = as.character(anos_completos))+
coord_cartesian(ylim = c(-0.5, 2))
# Exibir o gráfico
print(gg_grafico_primeira_ocorrencia_mata_atlantica)
# Salvar o gráfico em formato PNG
ggsave("imagens/cap04/bo-indice-abundancia-mata-atlantica.png",
gg_grafico_primeira_ocorrencia_mata_atlantica,
width = 10,
height = 5,
units = "in")
#| label: ind-abund-mata-atlantica
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '70%'
#| tab-cap: "Variação no índice de abundância das tribos de borboletas frugívoras do bioma Mata Atlântica em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada marrom."
knitr::include_graphics("imagens/cap04/bo-indice-abundancia-mata-atlantica.png")
#| label: tbl-ind_abund_mata_atlantica
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| fig.align: "center"
#| out.width: '70%'
#| tab-cap: "Índice de abundância das tribos indicadoras de cada ano na Mata Atlântica."
# tab_ind_abund_mata_atlantica <- read_csv2("dados/tabelas/borboletas/tab_ind_abund_mata_atlantica.csv")
#
# tabela_indice_abund_mata_atlantica <- kbl(tab_ind_abund_mata_atlantica,
#              booktabs = TRUE,
#              longtable = TRUE,
#              caption = "Índice de abundância das tribos indicadoras de cada ano da Mata Atlântica. Os valores dos índices estão em referência ao ano anterior. Nos anos em negrito, o esforço amostral foi menor que 1.728 armadilhas/dia e os dados devem ser interpretados com cautela. Nos anos sublinhados nenhuma UC da região foi amostrada. 'NA' indica que a primeira ocorrência apresentou uma abundância < 20 indivíduos e não foi considerada na análise.",
#              col.names = c(" ", "(2014)", "[2015]", "[2016]", "[2017]", "[2018]", "[2019]", "(2020)", "[2021]", "[2022]"), align = c("l", "l", "l", "l", "l", "l", "l", "l", "l", "l")) %>%
#   #row_spec(0, bold = F) |>
#     # column_spec(3, italic = TRUE) %>%
# kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"), latex_options = c("repeat_header"), repeat_header_text = "\\textit{(continuação)}")
#
#
# tabela_indice_abund_mata_atlantica
knitr::include_graphics("imagens/cap04/tbl-IA-mata-atlantica.png")
#| label: fig-numero-ucs-eas-amostradas
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '75%'
#| fig-cap: "Número de unidades de conservação (UCs) e estações amostrais (EAs) do Programa Monitora na região amazônica por região climática com amostragem de borboletas frugívoras implementadas de 2014 a 2022."
knitr::include_graphics("imagens/cap04/bo_ucs-eas-combinados.png")
knitr::include_graphics("imagens/cap04/bo-ucs-eas-combinados.png")
