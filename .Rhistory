panel.grid.minor.y = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.text = element_text(size = 10),
legend.title = element_blank(),
legend.position = c(0.75, 0.8),
axis.text=element_text(size=13),
axis.title.y = element_text(size = 13, margin = margin(r = 20))) +
scale_x_discrete(name = " ") +
scale_y_continuous(limits = c(0, 15)) +
labs(title = " ", x = " ", y = "Avistamentos/10 km")
G_taxa_avistamento_geral_bioma_emparelhado_media_IC
# Salvando o gráfico
ggsave("imagens/cap05/ma_taxa_avistamento_media_bioma.jpg",
height = 4.5, width = 6, units = "in", dpi = 300)
#| echo: false
#| include: false
#| message: false
#| warning: false
#| cache: true
# Taxa de avistamento geral mamíferos e aves emparelhado - 2014-2022
G_taxa_avistamento_geral_periodo_emparelhado_media_IC <- taxa_avistamento_total_classe_ano |>
group_by(ano, classe) |>
summarise(
n = n(),
taxa_avist_media = mean(taxa_avistamento),
dp = sd(taxa_avistamento, na.rm = TRUE),
ep = dp / sqrt(n),
IC_95 = qnorm(.975) * ep) |>
ggplot(aes(
x = ano,
y = taxa_avist_media), color = classe) +
geom_pointrange(
aes(color = classe, ymin = taxa_avist_media - IC_95, ymax = taxa_avist_media + IC_95),
position = position_dodge2(width = 0.5),
width = 0.5,
#size = 1.5,
linewidth = 0.7) +
scale_color_manual(values = c("#359780", "#BF8120")) +
geom_point(aes(color = classe), width = 0.5, size = 1.5, position = position_dodge2(width = 0.5)) +
geom_hline(aes(yintercept = 8.20), colour = "#BF8120", show.legend = FALSE, linewidth = 0.5) +
geom_abline(aes(slope = 0, intercept = 4.71), colour = "#359780", show.legend = FALSE, linewidth = 0.5) +
scale_color_manual(values = c("#359780", "#BF8120", "#359780", "#BF8120")) +
theme_minimal() +
theme(axis.line.x=element_blank(),
axis.line.y=element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
#legend.title = element_blank(),
#legend.title = element_text(size = 9),
#legend.position = c(0.87, 0.80),
legend.position = "none",
plot.title = element_text(size = 10),
axis.text=element_text(size=8),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 9, margin = margin(r = 10))) +
#scale_x_discrete(name = " ") +
scale_y_continuous(limits = c(0, 20)) +
labs(title = "Geral", colour = "Geral", x = NULL, y = "Avistamentos/10 km")
print(G_taxa_avistamento_geral_periodo_emparelhado_media_IC)
# ggsave("imagens/cap05/G_taxa_avistamento_geral_periodo_emparelhado_media_IC.png", height = 4.5, width = 6, units = "in", dpi = 300)
# Cálculo das médias gerais (valores dos interceptos)
# media_geral_mamiferos <- G_taxa_avistamento_geral_periodo_emparelhado_media_IC %>%
#   filter(classe == "Mammalia")
#
# media_geral_mamiferos <- mean(media_geral_mamiferos$taxa_avist_media)
#
# media_geral_aves <- G_taxa_avistamento_geral_periodo_emparelhado_media_IC %>%
#   filter(classe == "Aves")
#
# media_geral_aves <- mean(media_geral_aves$taxa_avist_media)
#| echo: false
#| include: false
#| message: false
#| warning: false
#| cache: true
# Taxa de avistamento geral mamíferos e aves emparelhado - 2014-2022
G_taxa_avistamento_amazonia_periodo_emparelhado_media_IC <- taxa_avistamento_total_classe_ano |>
filter(bioma == "Amazônia") |>
group_by(ano, classe) |>
summarise(
n = n(),
taxa_avist_media = mean(taxa_avistamento),
dp = sd(taxa_avistamento, na.rm = TRUE),
ep = dp / sqrt(n),
IC_95 = qnorm(.975) * ep) |>
ggplot(aes(
x = ano,
y = taxa_avist_media)) +
geom_pointrange(
aes(color = classe, ymin = taxa_avist_media - IC_95, ymax = taxa_avist_media + IC_95),
#position = "dodge2",
position = position_dodge2(width = 0.5),
width = 0.5,
#size = 0.6,
linewidth = 0.7) +
#scale_color_manual(values = c("#359780", "#BF8120", "red", "blue")) +
geom_point(aes(colour = classe), size = 1.5, position = position_dodge2(width = 0.5)) +
geom_hline(aes(yintercept = 9.45), colour = "#BF8120", show.legend = FALSE, linewidth = 0.5) +
geom_abline(aes(slope = 0, intercept = 5.32), colour = "#359780", show.legend = FALSE, linewidth = 0.5) +
scale_color_manual(values = c("#359780", "#BF8120", "#359780", "#BF8120"), labels = c("Aves", "Mamíferos")) +
theme_minimal() +
theme(axis.line.x=element_blank(),
axis.line.y=element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.title = element_blank(),
#legend.title = element_text(size = 9),
legend.position = c(0.75, 0.87),
legend.text = element_text(size = 9),
#legend.position = "none",
plot.title = element_text(size = 10),
axis.text=element_text(size=8),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 9, margin = margin(r = 10))) +
#scale_x_discrete(name = " ") +
scale_y_continuous(limits = c(0, 20)) +
labs(title = "Amazônia", colour = "Amazônia", x = NULL, y = NULL)
print(G_taxa_avistamento_amazonia_periodo_emparelhado_media_IC)
# ggsave("imagens/cap05/G_taxa_avistamento_amazonia_periodo_emparelhado_media_IC.png", height = 4.5, width = 6, units = "in", dpi = 300)
# Cálculo das médias gerais (valores dos interceptos)
# media_amazonia_mamiferos <- G_taxa_avistamento_amazonia_periodo_emparelhado_media_IC %>%
#   filter(classe == "Mammalia")
#
# media_amazonia_mamiferos <- mean(media_amazonia_mamiferos$taxa_avist_media)
#
# media_amazonia_aves <- G_taxa_avistamento_amazonia_periodo_emparelhado_media_IC %>%
#   filter(classe == "Aves")
#
# media_amazonia_aves <- mean(media_amazonia_aves$taxa_avist_media)
#| echo: false
#| include: false
#| message: false
#| warning: false
#| cache: true
# Taxa de avistamento geral mamíferos e aves emparelhado - 2014-2022
G_taxa_avistamento_mata_atlantica_periodo_emparelhado_media_IC <- taxa_avistamento_total_classe_ano |>
filter(bioma == "Mata Atlântica") |>
group_by(ano, classe) |>
summarise(
n = n(),
taxa_avist_media = mean(taxa_avistamento),
dp = sd(taxa_avistamento, na.rm = TRUE),
ep = dp / sqrt(n),
IC_95 = qnorm(.975) * ep) |>
ggplot(aes(
x = ano,
y = taxa_avist_media)) +
geom_pointrange(
aes(color = classe, ymin = taxa_avist_media - IC_95, ymax = taxa_avist_media + IC_95),
#position = "dodge2",
position = position_dodge2(width = 0.5),
width = 0.5,
#size = 0.6,
linewidth = 0.7) +
scale_color_manual(values = c("#359780", "#BF8120")) +
geom_point(aes(colour = classe), size = 1.5, position = position_dodge2(width = 0.5)) +
geom_hline(aes(yintercept = 2.91), colour = "#BF8120", show.legend = FALSE, linewidth = 0.5) +
geom_abline(aes(slope = 0, intercept = 1.77), colour = "#359780", show.legend = FALSE, linewidth = 0.5) +
scale_color_manual(values = c("#359780", "#BF8120", "#359780", "#BF8120")) +
theme_minimal() +
theme(axis.line.x=element_blank(),
axis.line.y=element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
#legend.title = element_blank(),
#legend.title = element_text(size = 9),
#legend.position = c(0.77, 0.80),
legend.position = "none",
plot.title = element_text(size = 10),
axis.text=element_text(size=8),
axis.title.y = element_text(size = 9, margin = margin(r = 10))) +
#scale_x_discrete(name = " ") +
scale_y_continuous(limits = c(-5, 15)) +
scale_x_continuous(breaks = taxa_avistamento_trilha_classe$ano) +
labs(title = "Mata Atlântica", colour = "Mata Atlântica", x = "Ano", y = "Avistamentos/10 km")
print(G_taxa_avistamento_mata_atlantica_periodo_emparelhado_media_IC)
# ggsave("imagens/cap05/G_taxa_avistamento_mata_atlantica_periodo_emparelhado_media_IC.png", height = 4.5, width = 6, units = "in", dpi = 300)
# # Cálculo das médias gerais (valores dos interceptos)
#
# # media_mata_atlantica_mamiferos <- G_taxa_avistamento_mata_atlantica_periodo_emparelhado_media_IC %>%
# #   filter(classe == "Mammalia")
# #
# # media_mata_atlantica_mamiferos <- mean(media_mata_atlantica_mamiferos$taxa_avist_media)
# #
# # media_mata_atlantica_aves <- G_taxa_avistamento_mata_atlantica_periodo_emparelhado_media_IC %>%
# #   filter(classe == "Aves")
# #
# # media_mata_atlantica_aves <- mean(media_mata_atlantica_aves$taxa_avist_media)
#| echo: false
#| include: false
#| message: false
#| warning: false
#| cache: true
# Taxa de encontro geral mamíferos e aves emparelhado - 2014-2022
G_taxa_avistamento_cerrado_periodo_emparelhado_media_IC <- taxa_avistamento_total_classe_ano |>
filter(bioma == "Cerrado") |>
group_by(ano, classe) |>
summarise(
n = n(),
taxa_avist_media = mean(taxa_avistamento),
dp = sd(taxa_avistamento, na.rm = TRUE),
ep = dp / sqrt(n),
IC_95 = qnorm(.975) * ep) |>
ggplot(aes(
x = ano,
y = taxa_avist_media)) +
geom_pointrange(
aes(color = classe, ymin = taxa_avist_media - IC_95, ymax = taxa_avist_media + IC_95),
#position = "dodge2",
position = position_dodge2(width = 0.5),
width = 0.5,
#size = 0.6,
linewidth = 0.7) +
scale_color_manual(values = c("#359780", "#BF8120")) +
geom_point(aes(colour = classe), size = 1.5, position = position_dodge2(width = 0.5)) +
geom_hline(aes(yintercept = 3.20), colour = "#BF8120", show.legend = FALSE, linewidth = 0.5) +
geom_abline(aes(slope = 0, intercept = 2.77), colour = "#359780", show.legend = FALSE, linewidth = 0.5) +
scale_color_manual(values = c("#359780", "#BF8120", "#359780", "#BF8120")) +
theme_minimal() +
theme(axis.line.x=element_blank(),
axis.line.y=element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
#legend.title = element_blank(),
#legend.title = element_text(size = 9),
#legend.position = c(0.75, 0.84),
legend.position = "none",
plot.title = element_text(size = 10),
axis.text=element_text(size=8),
axis.title.y = element_text(size = 9, margin = margin(r = 10))) +
#scale_x_discrete(name = " ") +
scale_y_continuous(limits = c(-5, 15)) +
scale_x_continuous(breaks = taxa_avistamento_trilha_classe$ano) +
labs(title = "Cerrado", colour = "Cerrado", x = "Ano", y = NULL)
print(G_taxa_avistamento_cerrado_periodo_emparelhado_media_IC)
# ggsave("imagens/cap05/G_taxa_avistamento_cerrado_periodo_emparelhado_media_IC.png", height = 4.5, width = 6, units = "in", dpi = 300)
# Cálculo das médias gerais (valores dos interceptos)
# media_cerrado_mamiferos <- G_taxa_avistamento_cerrado_periodo_emparelhado_media_IC %>%
#   filter(classe == "Mammalia")
#
# media_cerrado_mamiferos <- mean(media_cerrado_mamiferos$taxa_avist_media)
#
# media_cerrado_aves <- G_taxa_avistamento_cerrado_periodo_emparelhado_media_IC %>%
#   filter(classe == "Aves")
#
# media_cerrado_aves <- mean(media_cerrado_aves$taxa_avist_media)
#| label: fig-taxa-avistamento-tempo
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '85%'
#| fig-cap: "Variação anual na taxa de avistamento média de mamíferos e aves de 2014 a 2022 (geral e por bioma). As linhas verticais indicam o intervalo de confiança de 95% e as linhas horizontais representam a taxa de avistamento média para cada grupo considerando todo o período amostral."
grafico_taxas_biomas_tempo <- grid.arrange(G_taxa_avistamento_geral_periodo_emparelhado_media_IC, G_taxa_avistamento_amazonia_periodo_emparelhado_media_IC, G_taxa_avistamento_mata_atlantica_periodo_emparelhado_media_IC, G_taxa_avistamento_cerrado_periodo_emparelhado_media_IC,
layout_matrix = matrix(c(1, 2, 3, 4),
byrow = TRUE, nrow = 2, ncol = 2))
# Salvando o gráfico
ggsave("imagens/cap05/ma_taxas_biomas_tempo.jpg", plot = grafico_taxas_biomas_tempo, height = 4.5, width = 6, units = "in", dpi = 300)
#| label: fig-taxa-avistamento-geral-mamiferos
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '70%'
#| fig-cap: "Taxa média de avistamento de mamíferos por unidade de conservação de 2014 a 2022. As linhas verticais indicam o intervalo de confiança de 95%."
# Gráfico da taxa de avistamento total de mamíferos - média e IC
cores_biomas <- c("cyan4", "#BF8120", "#95D8D8")
G_taxa_avistamento_geral_mamiferos_media_IC <- taxa_avistamento_total_classe_uc |>
filter(classe == "Mammalia") |>
ggplot(aes(
x = fct_reorder(uc, taxa_avist_media, .desc = F),
y = taxa_avist_media)) +
geom_point(size = 1) +
geom_pointrange(
aes(color = bioma, ymin = taxa_avist_media - IC_95, ymax = taxa_avist_media + IC_95),
size = 0.3,
linewidth = 0.4) +
#colour = "#BF8120") +
coord_flip() +
scale_x_discrete(name = " ") +
scale_y_continuous(name = "Avistamentos/10 km") +
scale_color_manual(values = cores_biomas) +
theme_minimal() +
theme(#panel.grid.minor.y = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.x = element_blank(),
#axis.text=element_text(size=10),
axis.text.y = element_text(size = 5.5, face = "bold"),
axis.title.x = element_text(size = 10, margin = unit(c(3, 0, 0, 0), "mm"))) +
labs(title = "Mamíferos", col = NULL)
G_taxa_avistamento_geral_mamiferos_media_IC
# Salvando o gráfico
ggsave("imagens/cap05/ma_taxa_avistamento_mamiferos.jpg", plot =  G_taxa_avistamento_geral_mamiferos_media_IC, height = 4.5, width = 6, units = "in", dpi = 300)
#| label: fig-taxa-avistamento-geral-aves
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '70%'
#| fig-cap: "Taxa média de avistamento de aves por unidade de conservação de 2014 a 2022. As linhas verticais indicam o intervalo de confiança de 95%."
# Gráfico da taxa de avistamento total de aves - média e IC
G_taxa_avistamento_geral_aves_media_IC <- taxa_avistamento_total_classe_uc |>
filter(classe == "Aves") |>
ggplot(aes(
x = fct_reorder(uc, taxa_avist_media, .desc = F),
y = taxa_avist_media
)) +
geom_point(size = 1) +
geom_pointrange(
aes(color = bioma, ymin = taxa_avist_media - IC_95, ymax = taxa_avist_media + IC_95),
size = 0.3,
linewidth = 0.4) +
coord_flip() +
scale_x_discrete(name = " ") +
scale_y_continuous(limits = c(0, 15), name = "Avistamentos/10 km") +
scale_color_manual(values = cores_biomas) +
theme_minimal() +
theme(#panel.grid.minor.y = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.x = element_blank(),
#axis.text=element_text(size=10),
axis.text.y = element_text(size = 5.5, face = "bold"),
axis.title.x = element_text(size = 10, margin = unit(c(3, 0, 0, 0), "mm"))) +
labs(title = "Aves", col = NULL)
G_taxa_avistamento_geral_aves_media_IC
# Salvando o gráfico
ggsave("imagens/cap05/ma_taxa_avistamento_aves.jpg", plot = G_taxa_avistamento_geral_aves_media_IC, height = 4.5, width = 6, units = "in", dpi = 300)
#| echo: false
#| message: false
#| include: false
#| warning: false
#| cache: true
correlacao_taxas_avistamento_mamiferos_aves <- taxa_avistamento_total_classe_uc %>%
select(uc, classe, taxa_avist_media) %>%
spread(key = classe, value = taxa_avist_media)
# Teste de correlação
cor_test <- cor.test(correlacao_taxas_avistamento_mamiferos_aves$Mammalia, correlacao_taxas_avistamento_mamiferos_aves$Aves, method = "pearson")
# Ver resultado do teste de correlação
print(cor_test)
# Extrair coeficiente de correlação e valor p
cor_value <- cor_test$estimate
p_value <- cor_test$p.value
p_value_1 <- 0.001
#| label: fig-correlacao-taxas-avistamento
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '70%'
#| fig-cap: "Correlação positiva entre as taxas de avistamento médias de aves e mamíferos das unidades de conservação amostradas."
# Criar o gráfico
G_correlacao_taxas_avistamento_mamiferos_aves <- correlacao_taxas_avistamento_mamiferos_aves %>%
ggplot(aes(x = Mammalia, y = Aves)) +
geom_point(color = "cyan4", size = 2) +
geom_smooth(method = "lm", col = "darkgrey") +
labs(
#title = "Correlação taxas de avistamento de mamíferos e aves",
x = "Taxa média de avistamentos (mamíferos)",
y = "Taxa média de avistamentos (aves)"
) +
annotate(
"text", x = 2.3, y = 9.5, label = paste("r = 0.75"), color = "black"
) +
annotate(
"text", x = 2.5, y = 9.0, label = paste("p <", round(p_value_1, 4)), color = "black"
) +
theme_minimal() +
theme(
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
)
G_correlacao_taxas_avistamento_mamiferos_aves
# Salvando o gráfico
ggsave("imagens/cap05/ma_correlacao_aves_mamiferos.jpg", plot =  G_correlacao_taxas_avistamento_mamiferos_aves, height = 4.5, width = 4.5, units = "in", dpi = 300)
#| label: fig-variacao-populacional
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| fig-align: center
#| out.width: '70%'
#| fig-cap: "Taxas de crescimento estimadas para 166 populações analisadas. Os pontos representam a mediana e as barras o intervalo de confiança de 95%. Populações em verde e marrom apresentaram tendência significativa de aumento e de declínio respectivamente."
#----- carregar pacotes
library(tidyverse)
#----- ler dados
ssm_results <- readRDS("dados/mastoaves/ssm_results.rds")
#----- grafico taxas de crescimento todas as populacoes
ssm_results %>%
arrange(desc(r_mean50)) %>%
mutate(populacao = factor(populacao, levels=populacao)) %>%   # This trick update the factor levels
mutate(trend = as.factor(case_when(r_mean975 < 0 ~ "decrease",
r_mean025 > 0 ~ "increase",
.default = "stable"))
) %>%
rowid_to_column() %>%
ggplot(aes(x = rowid, y = r_mean50, color=trend)) +
geom_hline(yintercept = 0, alpha=.5) +
geom_point(size = 0.8, fill = "white", alpha = 0.8) +
geom_errorbar(aes(ymin = r_mean025, ymax = r_mean975), width=.2,
position=position_dodge(0.05)) +
ylab("Taxa de crescimento (r)") +
xlab("População (ranking da taxa de crescimento)") +
theme(axis.title.y = element_text(size = 16))  +
theme(axis.text.y = element_text(size = 16)) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()#,element_text(size = 14)
) +
ylim(-1.5, 1.5) +
theme_classic() +
scale_color_manual(values = c("#BF8120", "cyan4", "lightgrey")) +
theme(legend.position="none")
#| label: tbl-tendencias-populacionais
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| out.width: '70%'
#| tab-cap: "Populações com tendências populacionais significativas de declínio ou aumento no período de monitoramento."
tabela_tendencias_populacionais <- read.csv2("dados/tabelas/mastoaves/tabela_tendencias_populacionais.csv")
# Colorindo as célula na coluna Tendência
tabela_tendencias_populacionais$Tendencia <- ifelse((tabela_tendencias_populacionais$UC == "PARNA do Juruena" & tabela_tendencias_populacionais$Taxon == "Tinamus spp.") |
(tabela_tendencias_populacionais$UC == "RESEX Alto Tarauacá" & tabela_tendencias_populacionais$Taxon == "Myoprocta pratti"),
cell_spec(tabela_tendencias_populacionais$Tendencia, "html", color = "white", background = "#008B8B"),
cell_spec(tabela_tendencias_populacionais$Tendencia, "html", color = "white", background = "#BF8120"))
tab_tendencias_populacionais <- kbl(tabela_tendencias_populacionais,
escape = FALSE,
booktabs = TRUE,
longtable = TRUE,
caption = "Populações com tendências populacionais significativas de declínio ou aumento no período de monitoramento.",
col.names = c("Unidade de Conservação", "Táxon", "Tendência"), align = c("l", "l", "c")) %>%
column_spec(1, italic = TRUE) %>%
column_spec(3, bold = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"), latex_options = c("repeat_header"), repeat_header_text = "\\textit{(continuação)}")
tab_tendencias_populacionais
#| label: fig-taxa-avistamento-mapa
#| echo: false
#| message: false
#| warning: false
#| cache: true
#| fig.pos: 'H'
#| fig-align: center
#| out.width: '70%'
#| layout-nrow: 1
#| fig-cap: "Distribuição espacial das taxas médias de avistamento de mamíferos e aves (taxa geral, considerando conjuntamente os dois grupos) registradas nas unidades de conservação do Programa Monitora de 2014 a 2022."
backg <- htmltools::tags$style(".leaflet-container { background: white; }" )
colours_red <- colorNumeric(palette = "Reds", domain = NULL)
mapa <- leaflet(ucs_comp_florestal_unido) |>
#Base groups
setView(lng = -58, lat = -14,
zoom = 4) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Stamen Toner Lite") %>%
# addProviderTiles(providers$OpenStreetMap.Mapnik, group = "Open Street Map") %>%
addProviderTiles(providers$Esri.WorldImagery, group = "Imágenes de ESRI") %>%
# addProviderTiles(providers$Esri.NatGeoWorldMap, group = "Esri.NatGeoWorldMap") %>%
# addPolygons(data = brasil, weight = 0.3,
#             color = "black",
#             fillColor = "white") |>
addPolygons(data = brasil_regioes, weight = 0.3,
color = "black",
fillColor = "white") |>
addPolygons(data = ucs_comp_florestal_unido,
fillColor = ~ colours_red(ucs_comp_florestal_unido$taxa_avist_media),
fillOpacity = 1,
weight = 0.3,
color = "black",
popup = paste("Nome: ", ucs_comp_florestal_unido$uc, "<br>",
"Bioma: ", ucs_comp_florestal_unido$BiomaCRL, "<br>",
"Taxa de avistamento: ", ucs_comp_florestal_unido$taxa_avist_media, "avistamentos/10 km", "<br>")) |>
htmlwidgets::prependContent(backg) |>
addLegend(
pal = colours_red,
values = ~ ucs_comp_florestal_unido$taxa_avist_media,
title = "Taxa de avistamento",
position = "bottomleft"
) |>
# Layers Control
addLayersControl(
baseGroups = c(#"StamenTonerLite",
"Imágenes de ESRI",
"Open Street Map"),
position = "topright")
