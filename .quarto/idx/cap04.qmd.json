{"title":"Borboletas frugívoras","markdown":{"yaml":{"title":"Borboletas frugívoras","bibliography":["referencias_cap04.bib"]},"headingText":"Métodos, implementação e validação protocolar","containsRefs":false,"markdown":"\n\n\n```{r library, echo=FALSE, message=FALSE, warning=FALSE}\n\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(descr)\nlibrary(RColorBrewer)\nlibrary(kableExtra)\nlibrary(knitr)\nlibrary(DT)\nlibrary(plotly)\nlibrary(ggthemes)\nlibrary(forcats)\nlibrary(leaflet)\nlibrary(sf)\nlibrary(rgdal)\nlibrary(treemapify)\nlibrary(reshape2)\nlibrary(randomcoloR)\nlibrary(gridExtra)\n```\n\n\n\n</br>\n\n**Isabela Freitas Oliveira**^1-2^, **Arlindo Gomes Filho**^3^ & **Onildo João Marini Filho**^1^\n\n\n1. Centro Nacional de Pesquisa e Conservação da Biodiversidade do Cerrado e Restauração Ecológica - CBC  \n*Instituto Chico Mendes de Conservação da Biodiversidade – ICMBio*  \n*Parque Nacional de Brasília*  \n*Via Epia, BR-450, Km 8,5*  \n*70635-800 Brasília, DF*  \n\n2. Coordenação de Monitoramento da Biodiversidade - COMOB  \n*Instituto Chico Mendes de Conservação da Biodiversidade – ICMBio*  \n*Complexo Administrativo EQSW 103/104 s/n*  \n*70670-350 Brasília, DF*  \n\n3. Centro Nacional de Pesquisa e Conservação de Aves Silvestres – CEMAVE\\\n*Instituto Chico Mendes de Conservação da Biodiversidade – ICMBio*\\\n*BR-230 Km 10*\\\n*Floresta Nacional da Restinga de Cabedelo*\\\n*58108-012 Cabedelo, PB*\n\n\n\n<p><font size=\"2\">\n\n<b>Como citar</b>: Oliveira, I. F.; Gomes-Filho, A. G.; Marini-Filho, O. J. Borboletas frugívoras. In:  Programa Nacional de Monitoramento da Biodiversidade – Programa Monitora, Subprograma Terrestre, componente Florestal. Relatório 2014-2022. Instituto Chico Mendes de Conservação da Biodiversidade, Brasília, 2024.\n\n</font></p>\n\n</br>\n\nOs insetos estão entre os organismos mais diversos e ameaçados do mundo (@Cardoso_2020; @Wagner_2020; @Janzen_2021). Entender como essa diversidade está distribuída no tempo e no espaço é crucial, visto que muitas espécies estão sendo extintas antes mesmo de serem descobertas pela ciência (@Eggleton_2020; @Liu_2022). O Brasil, um país extenso e megadiverso, conta com poucos projetos de longo prazo (mais de cinco anos) voltados a investigar padrões de diversidade locais e regionais,  especialmente em grupos de invertebrados como insetos (@Costa_2020). A maioria das pesquisas abrange escalas locais e curtos períodos de tempo (@Ribeiro_2010; @Graca_2016; @Beirao_2017; @Araujo_2020;  @Oliveira_2021; @Bellaver_2023; @Brito_Freire_2022), contribuindo significativamente para a compreensão de padrões de diversidade específicos, mas ressaltando a importância da implementação de projetos de longa duração em diversas áreas do país. \n\nNas últimas décadas, as borboletas frugívoras têm sido utilizadas como organismos modelo em monitoramentos de fauna em diversos países da região tropical (@Hughes_1998; @Molleman_2006; @DeVries_2012; @Aduse-Poku_2012; @Nyafwono_2014; @VanSwaay_2015; @Freitas_2024). A seleção deste grupo se deve à sua grande diversidade e significância ecológica, aliada à facilidade de amostragem por meio de armadilhas atrativas (@DeVries_Walla_2001; @Freitas_2014). O uso dessas armadilhas possibilita a amostragem simultânea em várias áreas, padronizando o esforço amostral e reduzindo a chance de viés nos dados. Além disso, as borboletas frugívoras são altamente sensíveis a alterações ambientais, o que as torna indicadoras valiosas de perturbações nos *habitat* (@Bonebrake_2010; @Oliveira_2018). Essas transformações ambientais em escala local ou regional podem influenciar nas variações no número de espécies e indivíduos das borboletas, bem como nas mudanças de composição da comunidade (@Oliveira_2023). Assim, devido ao seu curto ciclo de vida, estas mudanças na comunidade de borboletas são observadas relativamente rápido. Outros fatores determinantes para a escolha de borboletas frugívoras em estudos de monitoramento são a relativa facilidade na identificação e sua boa resolução taxônomica, quando comparadas a outros grupos de insetos. \n\nNeste capítulo, serão apresentados os resultados gerais da aplicação do protocolo básico de borboletas frugívoras em unidades de conservação (UCs) federais do Programa Monitora.  \n\n\n</br>\n\n\n</br>\n\n\n\nOs métodos de amostragem das borboletas frugívoras seguiram o Roteiro Metodológico do Programa Monitora (@Nobre_2014) e uma breve descrição geral dos procedimentos adotados em campo é apresentada no Capítulo 2 deste relatório.  \n\n</br>\n\n\n## Resultados\n\n</br>  \n\n\nO protocolo básico de amostragem de borboletas frugívoras, com identificação taxonômica no nível de tribo, foi aplicado em 51 UCs^[Neste relatório os dados da ESEC da Terra do Meio e da RESEX do Rio Iriri foram agrupados e tratados conjuntamente, como uma única unidade de análise (um bloco).], durante o período de 2014 a 2022, Dessas, 31 (62%) já estão consolidadas, isto é, com três ou mais EAs em operação. O protocolo avançado de borboletas frugívoras foi aplicado, em algum momento, em 31 UCs, embora parte dos dados ainda aguarde validação  (@fig-mapa-distribuicao-ucs-borboletas).  \n\n</br>\n\n\n```{r figura - distribuição ucs borboletas}\n#| label: fig-mapa-distribuicao-ucs-borboletas\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '95%'\n#| fig-cap: \"Distribuição das unidades de conservação com amostragem de borboletas frugívoras no Componente Florestal do Programa Monitora – 2014 a 2022.\"\n\nknitr::include_graphics(\"imagens/cap04/bo_mapa_distribuicao-ucs-borboletas.jpeg\")\n\n```\n\n\n</br>\n\n\nApós a correção, limpeza e verificação dos dados foram contabilizadas 85.386 borboletas frugívoras capturadas de 2014 a 2022. Desse total, 915 indivíduos (1%) foram registrados como ‘NA’ em sua tribo. Assim, 84.471 indivíduos foram identificados no nível de tribo pelos monitores. Na Amazônia, foram capturados 76.308 indivíduos, no Cerrado 6.378 e na Mata Atlântica 2.700 indivíduos.  \n\nO esforço amostral de borboletas frugívoras vem aumentando desde o início da implementação do Programa Monitora (exceto em 2020). Entre 2014 e 2019, o esforço amostral aumentou linearmente, tendo atingido um total de cerca de 17.152 armadilhas-dia em 2019. Em 2020, ano com maior impacto da pandemia de Covid-19, houve uma queda de 74% em relação ao ano anterior. Em 2021, o esforço amostral ainda não havia se recuperado totalmente, tendo voltado a crescer apenas em 2022, com um aumento de 15% em relação a 2019 (@fig-esforco-amostral).  \n\nDe maneira geral, observou-se que o número de indivíduos amostrados acompanhou o esforço amostral, havendo um aumento na abundância de borboletas com o aumento do esforço amostral. Porém, os últimos anos apresentaram uma abundância menor em relação ao esforço (Figura 4.2). Ao todo, foram capturados 85.386 indivíduos de borboletas, com um esforço amostral de 90.320 armadilhas/dia no período de 2014 a 2022 (@fig-esforco-amostral). \n\n\n</br>\n\n \n```{r grafico ucs_ativas_taxa_acumulado}\n#| label: fig-esforco-amostral\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '80%'\n#| fig-cap: \"Variação no número de registros de borboletas frugívoras e esforço amostral (número de armadilhas * número de dias de amostragem) acumulados por ano do Programa Monitora.\"\n\n\n# #Script: Isabela Freitas Oliveira\n# \n# library(dplyr)\n# \n# # Ler e limpar dados_borboletas\n# dados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas <- dados_borboletas %>%\n#   filter(ano != \"2023\", !is.na(tribo))\n# \n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_borboletas %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# \n# # Agregação para obter o esforço total por ano por uc\n# esforco_por_ano_uc <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_borboletas %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# \n# # Juntar as duas tabelas agregadas\n# tabela_final_esfoco <- left_join(esforco_por_ano, num_ind_por_ano, by = \"ano\")\n# #write.csv(tabela_final_esfoco, \"tabela_final_esfoco.csv\", row.names = FALSE)\n# \n# \n# #####Fazer o gráfico de Abundancia e esforço\n# # Definindo os dados para cada série separadamente\n# dados_esforco <- tabela_final_esfoco[, c(\"ano\", \"esforco\")]\n# names(dados_esforco)[2] <- \"valor\"\n# dados_esforco$tipo <- \"Esforço\"\n# \n# dados_abundancia <- tabela_final_esfoco[, c(\"ano\", \"num_ind\")]\n# names(dados_abundancia)[2] <- \"valor\"\n# dados_abundancia$tipo <- \"Abundância\"\n# \n# # Juntando os dados\n# dados_plot <- rbind(dados_esforco, dados_abundancia)\n# \n# # Criando o gráfico\n# grafico <- ggplot(data = dados_plot, aes(x = ano, y = valor, colour = tipo, linetype = tipo, shape = tipo)) +\n#   geom_line(size = 1.0) +\n#   geom_point(size = 3) +\n#   scale_colour_manual(values = c(\"Esforço\" = \"#35978f\", \"Abundância\" = \"#dfc27d\")) +\n#   scale_linetype_manual(values = c(\"Esforço\" = \"solid\", \"Abundância\" = \"solid\")) +\n#   scale_shape_manual(values = c(\"Esforço\" = 16, \"Abundância\" = 17)) +\n#   scale_y_continuous(\n#     \"Esforço Amostral e Abundância\",\n#     labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n#     limits = c(0, 25000)\n#   ) +\n#   scale_x_continuous(breaks = tabela_final_esfoco$ano) +\n#   labs(\n#     title = \"\",\n#     x = \" \",\n#     y = \"Esforço Amostral e Abundância\",\n#     colour = \"\",\n#     shape = \"\", # Isso ajuda a garantir que as formas correspondam na legenda\n#     linetype = \"\" # Isso ajuda a garantir que os tipos de linha correspondam na legenda\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     plot.title = element_text(hjust = -0.5, size = 18, lineheight = 1.5), # Ajuste o lineheight conforme necessário\n#     legend.position = c(0.10, 0.93), # Define a posição da legenda no canto superior esquerdo\n#     legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n#     legend.box.just = \"left\", # Alinha a legenda à esquerda\n#     legend.box.background = element_rect(fill = \"white\", color = \"white\"),\n#     axis.ticks.y = element_line(color = \"black\"),\n#     axis.text.y = element_text(margin = margin(r = 5)),\n#     axis.text.x = element_text(margin = margin(r = 12)),\n#     axis.title.y = element_text(size = 10, margin = margin(r = 10)),\n#     axis.title.x = element_text(size = 10, margin = margin(t = 10)),\n#     axis.text = element_text(size = 10),\n#     axis.line = element_line(colour = \"gray40\"),\n#     legend.text = element_text(size = 10),\n#     axis.line.x = element_blank(),\n#     panel.grid.minor = element_blank()\n#   )\n# \n# grafico\n# \n# ggsave(\"imagens/cap04/bo_esforco.JPG\",\n#        #plot = last_plot(),\n#        device =  \"jpeg\",\n#        scale=0.6,\n#        width = 300,\n#        height = 240,\n#        units = \"mm\",\n#        dpi = 120)\n\nknitr::include_graphics(\"imagens/cap04/bo_esforco.JPG\")\n\n```\n\n</br>\n\n\n### Regiões climáticas\n\n</br>\n\n\nOs períodos de amostragem propostos no protocolo do Programa Monitora para borboletas frugívoras na Amazônia seguem a mesma lógica aplicada para as regiões Central e Sudeste do Brasil, onde há alta abundância populacional e maior diversidade de espécies de borboletas frugívoras no final do período de chuvas intensas e no período seco (@Barlow_2007; @Checa_2009; @Ribeiro_2010). No entanto, há algumas exceções que precisam ser avaliadas caso a caso. Os períodos de amostragem para as regiões amazônicas apresentados a seguir baseiam-se na caracterização climática associada ao padrão de chuvas em toda a Amazônia (@Marengo_2001; @Sampaio_2021). Com base na identificação dos padrões de chuva em cada região, foram definidas seis regiões climáticas que englobam as unidades de conservação participantes do Programa Monitora (@fig-regioes-climaticas). As regiões climáticas são: Sudoeste, Central, Leste, Sudeste, Norte e Noroeste. Isso permite determinar o período mais adequado para a amostragem (@tbl-periodos-amostragem), considerando que o regime de chuvas é uma característica regional relevante para as borboletas frugívoras (@Barlow_2007; @Checa_2009). A definição deste período e sua manutenção ao longo do tempo possibilitam que as comparações interanuais sejam feitas considerando as populações mais abundantes daquele período. \n\n\n</br>\n\n```{r tabela periodos de amostragem amazonia}\n#| label: tbl-periodos-amostragem\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| tab-cap: \"Unidades de conservação por região climática da Amazônia e períodos indicados para amostragens de borboletas (final das chuvas). UCs com * situam-se em duas ou mais regiões climáticas (q. = quinzena).\"\n\ntabela_periodos_amostragem <- read.csv2(\"dados/tabelas/borboletas/tab_periodos_amostragem.csv\", fileEncoding='UTF-8', check.names=F)\n\ntab_periodos_amostragem <- kbl(tabela_periodos_amostragem,\n             booktabs = TRUE,\n             longtable = TRUE,\n             caption = \"Unidades de conservação por região climática da Amazônia e períodos indicados para amostragens de borboletas (final das chuvas). UCs com * situam-se em duas ou mais regiões climáticas (q. = quinzena).\",\n            col.names = c(\"Unidade de Conservação\", \"Região\", \"Período de Amostragem\"), align = c(\"l\", \"c\", \"c\")) %>%\n    #column_spec(3, italic = TRUE) %>%\nkable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\")\n\n\ntab_periodos_amostragem\n\n```\n\n\n</br>\n\n\nO número de UCs amostradas varia bastante entre as regiões (@fig-regioes-climaticas). Atualmente, nenhuma UC da região Noroeste da Amazônia participa do Programa Monitora aplicando o protocolo de borboletas frugívoras. Seria de extrema importância implementar esse protocolo em pelo menos três UCs nessa região: ESEC Juami-Japurá, PARNA do Pico da Neblina e RESEX Auatí-Paraná. Outra região climática em que se faz necessária a inclusão de mais UCs para o protocolo de borboletas frugívoras é a sudeste amazônica. Esta região é de extrema importância por abrigar uma rica diversidade de espécies e estar constantemente ameaçada pelo agronegócio e mineração. Assim sugerimos a inclusão da ESEC Iquê, REBIO Nascentes da Serra do Cachimbo, FLONA Jamanxim, PARNA Rio Novo e FLONA de Carajás. Além dessas regiões, é importante também a inclusão de UCs mais ao norte da região climática sudoeste. Assim, sugere-se a inclusão de UCs no médio e baixo rio Juruá, como as RESEX Médio Juruá, Baixo Juruá e FLONA de Tefé. \n\n\n</br>\n\n\n```{r figura - mapa das regiões climáticas}\n#| label: fig-regioes-climaticas\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '85%'\n#| fig-cap: \"Distribuição das UCs do Programa Monitora com amostragens de borboletas frugívoras nos polígonos das regiões climáticas da Amazônia definidos em função do regime de chuvas. Note as regiões com maiores lacunas de UCs participantes do Programa Monitora: Noroeste, Sudeste e porção norte da região Sudoeste. Cada UC está indicada pelo seu código no Cadastro Nacional de Unidades de Conservação - CNUC.\"\n\nknitr::include_graphics(\"imagens/cap04/bo_mapa_ucs.jpeg\")\n\n```\n\n\n</br>\n\n\nA região Sudoeste amazônica foi a que teve o maior número de UCs aplicando o protocolo de borboletas no período de 2014 a 2022, com 15 UCs amostradas: ESEC Rio Acre, FLONA do Jamari, PARNA da Serra da Cutia, PARNA da Serra do Divisor, PARNA de Pacaás Novos, PARNA Mapinguari, REBIO do Jaru, RESEX Arapixi, RESEX Barreiro das Antas, RESEX Chico Mendes, RESEX do Alto Tarauacá, RESEX do Cazumbá-Iracema, RESEX do Rio do Cautário, RESEX Rio Ouro Preto e RESEX Riozinho da Liberdade. Nesta região, as coletas foram realizadas em 48 EAs, contando com a colaboração de diversos monitores comunitários, beneficiários das Reservas Extrativistas (@fig-ucs-eas-combinado).  \n\n\nDe 2014 a 2022 as amostragens de borboletas frugívoras na região climática central amazônica foram realizadas em 37 EAs em 11 UCs (@fig-ucs-eas-combinado): ESEC da Terra do Meio, FLONA do Tapajós, PARNA da Amazônia, PARNA dos Campos Amazônicos, PARNA do Jaú, PARNA Nascentes do Lago Jari, REBIO do Uatumã, RESEX do Lago do Capanã Grande, RESEX Riozinho do Anfrísio, RESEX Tapajós-Arapiuns e RESEX Verde para Sempre.  \n\nNa região Leste amazônica, as amostragens se iniciaram em 2016. Até 2022, seis UCs e 17 EAs foram amostradas (@fig-ucs-eas-combinado): ESEC do Jari, PARNA do Cabo Orange, PARNA Montanhas do Tumucumaque, REBIO do Gurupi, RESEX Ipaú-Anilzinho e RESEX Renascer.  \n\nNa região Sudeste amazônica, as amostragens de borboletas frugívoras também se iniciaram em 2016 e ocorreram em seis EAs, contemplando apenas duas UCs: PARNA do Juruena e REBIO do Tapirapé.  \n\nFinalmente, na região Norte da Amazônia, a aplicação do protocolo de borboletas frugívoras se iniciou em 2017, com cinco UCs e nove EAs amostradas até 2022 (@fig-ucs-eas-combinado): ESEC de Maracá, ESEC de Niquiá, PARNA da Serra da Mocidade, PARNA do Monte Roraima e PARNA do Viruá. \n\n\n</br>\n\n\n```{r numero-ucs-amostradas}\n#| label: fig-numero-ucs-amostradas\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '60%'\n\n\n\n# library(tidyverse)\n# library(ggplot2)\n# library(stringr)\n\n# # Carregar os dados\n# dados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# \n# # Converter o ano para fator\n# dados_borboletas$ano <- factor(dados_borboletas$ano)\n# \n# # Filtrar os dados para incluir apenas regiões da Amazônia\n# dados_amazonia <- dados_borboletas %>%\n#   filter(regiao %in% c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n# \n# # Preparar os dados para o gráfico\n# contagem_uc_amazonia <- dados_amazonia %>%\n#   group_by(ano, regiao) %>%\n#   summarise(num_uc = n_distinct(uc))\n# \n# # Definir a ordem dos níveis da variável regiao\n# contagem_uc_amazonia$regiao <- factor(contagem_uc_amazonia$regiao, levels = c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n# \n# \n# # Cores para cada região da Amazônia\n# cores_amazonia <- c(\n#   \"#003c30\",\n#   \"#01665e\",\n#   \"#35978f\",\n#   \"#80cdc1\",\n#   \"#c7eae5\"\n# )\n# \n# # Gráfico\n# grafico_uc_amazonia <- ggplot(contagem_uc_amazonia, aes(x = ano, y = num_uc, fill = regiao)) +\n#   geom_bar(stat = \"identity\", position = \"dodge\") +\n#   scale_fill_manual(values = cores_amazonia) + # Definindo as cores manualmente\n#   labs(\n#     x = \"\",\n#     y = \"\",\n#     fill = \"\",\n#     title = \"\"\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     plot.title = element_text(size = 26, hjust = 0, lineheight = 1.3),\n#     legend.position = c(0, 1.15), # Define a posição da legenda no canto superior esquerdo\n#     legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n#     legend.box.just = \"left\", # Alinha a legenda à esquerda\n#     legend.title = element_text(size = 20),\n#     legend.text = element_text(size = 20),\n#     axis.title.x = element_text(size = 20), \n#     axis.text.x = element_text(size = 18),  \n#     #axis.line = element_line(colour = \"gray40\"),\n#     axis.line.x = element_blank(),\n#     axis.text.y = element_blank(),\n#     panel.grid.minor = element_blank() \n#   ) \n# \n# # Exibir o gráfico\n# print(grafico_uc_amazonia)\n# \n# ##f1\n# grafico_uc_amazonia <- ggplot(contagem_uc_amazonia, aes(x = ano, y = num_uc, fill = regiao)) +\n#   geom_bar(stat = \"identity\", position = \"dodge\") +\n#   geom_text(aes(label = num_uc), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) + # Adicionando os valores\n#   scale_fill_manual(values = cores_amazonia) + # Definindo as cores manualmente\n#   labs(\n#     x = \"\",\n#     y = \"\",\n#     fill = \"\",\n#     title = \"Número de UCs\"\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     plot.title = element_text(size = 14, hjust = 0.3, lineheight = 1.3),\n#     legend.position = c(0, 1.15), # Define a posição da legenda no canto superior esquerdo\n#     legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n#     legend.box.just = \"left\", # Alinha a legenda à esquerda\n#     legend.title = element_text(size = 10),\n#     legend.text = element_text(size = 8),\n#     axis.title.x = element_text(size = 12), \n#     axis.text.x = element_text(size = 10),  \n#     #axis.line = element_line(colour = \"gray40\"),\n#     axis.line.x = element_blank(),\n#     axis.text.y = element_blank(),\n#     panel.grid.major = element_blank(),\n#     panel.grid.minor = element_blank() \n#   ) \n# \n# # Exibir o gráfico\n# print(grafico_uc_amazonia)\n\n\n# Salvar a imagem usando ggsave()\n\n# ggsave(\n#   filename = \"grafico_numeros_de_uc_amazonia_f1.png\",\n#   plot = grafico_uc_amazonia,\n#   device = \"png\",\n#   path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\",\n#   dpi = 300,\n#   width = 12,\n#   height = 8,\n#   units = \"in\"\n# )\n\n\n```\n\n\n</br>\n\n```{r numero-eas-amostradas}\n#| label: fig-numero-eas-amostradas\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '60%'\n\n\n# library(tidyverse)\n# library(ggplot2)\n# library(stringr)\n\n# # Carregar os dados\n# dados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# \n# # Converter o ano para fator\n# dados_borboletas$ano <- factor(dados_borboletas$ano)\n# \n# # Filtrar os dados para incluir apenas regiões da Amazônia\n# dados_amazonia <- dados_borboletas %>%\n#   filter(regiao %in% c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n# \n# # Preparar os dados para o gráfico\n# contagem_ea_amazonia <- dados_amazonia %>%\n#   group_by(ano, regiao) %>%\n#   summarise(num_ea = n_distinct(uc_ea))\n# \n# # Definir a ordem dos níveis da variável regiao\n# contagem_ea_amazonia$regiao <- factor(contagem_ea_amazonia$regiao, levels = c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n# \n# \n# # Cores para cada região da Amazônia\n# cores_amazonia <- c(\n#   \"#543005\",\n#   \"#8c510a\",\n#   \"#bf812d\",\n#   \"#dfc27d\",\n#   \"#f6e8c3\"\n# )\n# \n# \n# # Gráfico\n# grafico_ea_amazonia<-ggplot(contagem_ea_amazonia, aes(x = ano, y = num_ea, fill = regiao)) +\n#   geom_bar(stat = \"identity\", position = \"dodge\") +\n#   geom_text(aes(label = num_ea), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) + # Adicionando os valores\n#   scale_fill_manual(values = cores_amazonia) + # Definindo as cores manualmente\n#   labs(\n#     x = \"\",\n#     y = \"\",\n#     fill = \"\",\n#     title = \"Número de EAs\"\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     plot.title = element_text(size = 14, hjust = 0.3, lineheight = 1.3),\n#     legend.position = c(0, 1.15), # Define a posição da legenda no canto superior esquerdo\n#     legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n#     legend.box.just = \"left\", # Alinha a legenda à esquerda\n#     legend.title = element_text(size = 10),\n#     legend.text = element_text(size = 8),\n#     axis.title.x = element_text(size = 12), \n#     axis.text.x = element_text(size = 10),  \n#     #axis.line = element_line(colour = \"gray40\"),\n#     axis.line.x = element_blank(),\n#     axis.text.y = element_blank(),\n#     panel.grid.major = element_blank(),\n#     panel.grid.minor = element_blank() \n#   ) \n# \n# # Exibir o gráfico\n# print(grafico_ea_amazonia)\n\n\n# Salvar a imagem usando ggsave()\n\n# ggsave(\n#   filename = \"grafico_numeros_de_ea_amazonia_f1.png\",\n#   plot = grafico_ea_amazonia,\n#   device = \"png\",\n#   path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\",\n#   dpi = 300,\n#   width = 12,\n#   height = 8,\n#   units = \"in\"\n# )\n\n```\n</br>\n\n```{r ucs-eas-amostradas}\n#| label: fig-ucs-eas-amostradas\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Número de unidades de conservação (UCs) e estações amostrais (EAs) amostradas por região climática na Amazônica por ano. A região climática Noroeste não teve UCs com amostragens no período de 2014-2022.\"\n\n\n\n# library(gridExtra)\n# combinado <- grid.arrange(grafico_uc_amazonia, grafico_ea_amazonia, ncol=1)\n\n# ggsave(\n#   filename = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/ucs_eas_combinados.png\",\n#   plot = combinado,\n#   device = \"png\",\n#   dpi = 300,\n#   width = 14,\n#   height = 12,\n#   units = \"in\"\n# )\n\n``` \n\n```{r grafico ucs-eas-combinado}\n#| label: fig-ucs-eas-combinado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Número de UCs e EAs amostradas por região climática na Amazônia por ano. A região climática Noroeste não teve UCs com amostragens no período de 2014-2022.\"\n\nknitr::include_graphics(\"imagens/cap04/bo-ucs-eas-combinados.png\")\n\n```\n\n\n\n</br>\n\n\nPara maior confiabilidade das informações apresentadas neste relatório, foi estabelecido um esforço amostral mínimo por ano para os biomas. Para cada região Amazônica foram consideradas amostragens suficientes aquelas com esforço amostral de pelo menos 1.728 armadilhas*dia, equivalendo a nove EAs amostradas no ano, considerando duas campanhas amostrais por EA/ano.   \n\n\n</br>\n\n\n## Assinatura das tribos de borboletas ao longo dos anos  \n\n</br>\n\nO Programa Monitora convencionou chamar a distribuição acumulada de frequências relativas da abundância de espécies identificadas ao nível de tribos de “assinatura de tribos” (ver relatórios do Programa Monitora 2014-2016 e 2014-2018). Essa assinatura de tribos de borboletas é uma forma gráfica de representar as proporções das tribos de borboletas de uma determinada comunidade presente naquele ano ou local. A adoção da assinatura no nível de tribo levou em consideração que este é o nível taxonômico que permite fazer generalizações sobre as tendências observadas na comunidade de borboletas frugívoras (@Freitas_2024). Ela se torna efetiva quando comparada em longo prazo ou entre locais. Com a assinatura de borboletas, detectam-se variações nas tribos mais representativas daquela comunidade amostrada, sendo possível assim, realizar diagnósticos ambientais mais informativos para aquela região ou ano.  \n\nA abordagem que vem sendo utilizada no Programa Monitora considera a existência de diferentes níveis de associação entre as tribos de borboletas frugívoras e a estrutura das formações florestais, variando das florestas mais alteradas ou abertas até florestas mais adensadas e fechadas. O protocolo adotado pelo grupo de especialistas em borboletas consultado pelo ICMBio considerou que as tribos registradas estão relacionadas aos seguintes tipos de ambientes: \n\n- Florestas fechadas/preservadas: Brassolini, Haeterini e Morphini. Em situações de perturbação da floresta, a abundância relativa dessas tribos diminui consistentemente; \n\n- Florestas abertas/perturbadas (com abertura significativa no dossel): Ageroniini, Callicorini e Biblidini. As espécies dessas tribos são favorecidas por alterações na estrutura da floresta e suas abundâncias aumentam consistentemente com perturbações locais. \n\nAs tribos Preponini, Melanitini, Anaeini, Epicaliini, Epiphilini, Coeini e Satyrini não apresentam associação clara com ambientes florestais ou não demonstram tendência definida. A abundância dessas tribos pode aumentar ou diminuir em resposta a perturbações da floresta, como abertura de clareiras ou eventuais alterações no dossel. \n\nEmbora ainda pouco disseminada em trabalhos acadêmicos, a assinatura de tribos de borboletas é uma métrica versátil e biologicamente fundamentada que tem um papel importante no monitoramento de fauna. Esta é uma maneira viável de analisar e apresentar dados de um grupo com grande riqueza de espécies de uma região megadiversa, amostrado em uma escala tão ampla como a região Amazônica, ou pequenas como uma determinada UC. \n\n\n```{r preparação gráficos assinaturas2}\n#| label: prep-graficos-assinaturas2\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n# \n# # Gráficos de dados Borboletas - Protocolo básico - Amazônia regional - individual\n# ### Tribos com asterisco estão ausentes nos dados\n# ## Script: Isabela Freitas Oliveira\n# \n# library(ggplot2)\n# library(dplyr)\n# library(scales)\n# library(tools)\n# \n# # Função auxiliar para ajustar o título\n# ajustar_titulo <- function(titulo) {\n#   palavras <- strsplit(titulo, \" \")[[1]]\n#   \n#   # Palavras que necessitam de correção de acentuação\n#   correcoes <- list(\n#     \"leste\" = \"Região climática Leste Amazônica\", \"sudoeste\" = \"Região climática Sudoeste Amazônica\", \"central\" = \"Região climática Central Amazônica\",\n#     \"norte\" = \"Região climática Norte Amazônica\", \"sudeste\" = \"Região climática Sudeste Amazônica\"\n#   )\n#   \n#   palavras <- sapply(palavras, function(palavra) {\n#     # Aplicar regras específicas para certas palavras\n#     if (tolower(palavra) %in% c(\"esec\", \"flona\", \"rebio\", \"resex\", \"parna\")) {\n#       return(toupper(palavra))\n#     } else if (tolower(palavra) %in% c(\"de\", \"da\", \"do\", \"dos\", \"das\")) {\n#       return(tolower(palavra))\n#     } else {\n#       # Corrigir acentuação, se necessário\n#       palavra_corrigida <- tolower(palavra)\n#       if (palavra_corrigida %in% names(correcoes)) {\n#         return(correcoes[[palavra_corrigida]])\n#       } else {\n#         return(tools::toTitleCase(palavra))\n#       }\n#     }\n#   })\n#   \n#   return(paste(palavras, collapse = \" \"))\n# }\n# \n# \n# # Função para gerar o gráfico para cada região\n# gerar_grafico_por_regiao <- function(dados, nome_regiao) {\n#   # Preparar o título\n#   titulo <- ajustar_titulo(nome_regiao)  # Utilizando a função de ajuste de título aqui\n#   \n#   # Filtrar os dados para a região atual\n#   dados_regiao <- subset(dados, regiao == nome_regiao & bioma == \"Amazonia\")\n#   dados_regiao <- dados_regiao[!is.na(dados_regiao$tribo), ] #tirar os dados 'NA' que estão na tribo\n#   \n#   # Calcular o total de indivíduos por ano para a região atual\n#   total_individuos_por_ano <- dados_regiao %>%\n#     group_by(ano) %>%\n#     summarise(total = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Agregar dados por ano e tribo\n#   dados_agregados <- dados_regiao %>%\n#     group_by(ano, tribo) %>%\n#     summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Calcular totais e proporções\n#   total_por_ano <- dados_agregados %>%\n#     group_by(ano) %>%\n#     summarize(total = sum(frequencia), .groups = 'drop')\n#   \n#   dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n#     mutate(proporcao = frequencia / total * 100)\n#   \n#   # Ajustar proporções\n#   dados_agregados <- dados_agregados %>%\n#     group_by(ano) %>%\n#     mutate(diferenca = 100 - sum(proporcao),\n#            proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n#     ungroup() %>%\n#     dplyr::select(-diferenca, -proporcao) %>%\n#     rename(proporcao = proporcao_ajustada)\n#   \n#   # Ordem específica das tribos\n#   ordem_tribos <- c(\n#     \"Brassolini\", \"Morphini\", \"Haeterini\", \n#     \"Preponini\", \"Melanitini\", \"Anaeini\", \n#     \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n#     \"Satyrini\",\n#     \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n#   )\n#   \n#   # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n#   cores_tribos <- c(\n#     \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n#     \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n#     \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n#     \"Satyrini\" = \"gray95\",\n#     \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n#   )\n#   \n#   # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n#   cores_tribos <- cores_tribos[ordem_tribos]\n#   \n#   # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n#   dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n#   \n#   # Criar um data frame com a frequência agregada por tribo\n#   frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n#   \n#   # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n#   adicionar_asterisco <- function(nome_tribo) {\n#     # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n#     if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n#       return(paste0(nome_tribo, \"*\"))\n#     } else {\n#       return(nome_tribo)\n#     }\n#   }\n#   \n#   # Aplicar a função a cada tribo para criar o vetor de rótulos\n#   labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n#   \n#   # Criar um data frame com o número único de 'uc_ea' por ano\n#   numero_ea_por_ano <- dados_regiao %>%\n#     distinct(ano, uc_ea) %>%\n#     group_by(ano) %>%\n#     summarize(num_ea = n_distinct(uc_ea))\n#   \n#   # Construir o gráfico\n#   gg <- ggplot() +\n#     geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n#     geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n#     geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n#     scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n#     scale_x_discrete(expand = c(0, 0)) +\n#     scale_fill_manual(values = cores_tribos, \n#                       labels = labels_tribos,\n#                       breaks = ordem_tribos) +\n#     labs(title = titulo,\n#          x = \"\",\n#          y = \"Frequência relativa de ocorrência (%)\",\n#          fill = \"Tribo\") +\n#     theme_minimal() +\n#     theme(legend.position = \"right\", \n#           legend.title = element_text(size = 12), \n#           legend.text = element_text(size = 10), \n#           plot.title = element_text(hjust = 0.5, size = 16), \n#           plot.subtitle = element_text(hjust = 0.5, size = 14),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           axis.text = element_text(size = 10), \n#           axis.title = element_text(size = 10),\n#           axis.line = element_line(colour = \"gray40\"),\n#           axis.line.x = element_blank()) +\n#     guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n#   \n#   # Exibir o gráfico\n#   print(gg)\n# }\n# \n# # Carregar e preparar os dados\n# resultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\n# resultado_final$ano <- factor(resultado_final$ano)\n# resultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n\n\n\n```\n\n\n\n\n### Amazônia \n\n\n</br>\n\n\nNa região climática Sudoeste amazônica foram amostradas 36.918 borboletas frugívoras, sendo 354 delas não identificadas e desconsideradas nas análises. Assim, 36.564 indivíduos foram identificados em nível de tribo, sendo as mais abundantes: Satyrini (48%), Brassolini (11%), Epicaliini (9%) e Ageroniiini (9%). A região Sudoeste apresentou a maior proporção de tribos indicadoras de florestas abertas/perturbadas dentre as regiões da Amazônia. No caso, a tribo Ageroniini a foi responsável por esse padrão, especialmente em 2019. É importante salientar que, apesar da tribo Ageroniini ser classificada como uma tribo indicadora de florestas abertas/perturbadas, algumas espécies do gênero *Hamadryas* (e.g., *Hamadryas alicia*, *H. belladonna*, *H. velutina*) e do gênero Batesia estão geralmente presentes em florestas maduras e bem conservadas, como ocorre na RESEX Arapixi e UCs da região. Dessa forma, torna-se ainda mais necessária a aplicação do protocolo avançado nas UCs para que, com as fotografias dos indivíduos, seja possível separar espécies nas tribos que utilizam regularmente florestas abertas/perturbadas, como por exemplo *Hamadryas februa*, *H. feronia*, *H. amphinome*, *H. arinome* e *Ectima iona*, das espécies anteriormente citadas, habitantes de florestas fechadas/preservadas (@Jenkins_1983). \n\nSeguindo os padrões de diversidade da fauna e flora amazônicas (@Ribas_2019; @Luize_2024), a região Sudoeste apresentou os maiores valores de números de indivíduos por esforço amostral. Apesar de tratar-se de contagem de indivíduos, é de se esperar que a riqueza e diversidade de espécies acompanhem este padrão (@DeVries_2016). O esforço realizado de 2014 a 2016 nesta região foi inferior ao considerado adequado para caracterizar a abundância relativa de tribos (i.e., menor que 18 campanhas = 1.728 armadilhas-dia), sendo a suficiência amostral atingida somente a partir de 2017 (@fig-regiao-climatica-sudoeste-amazonica). \n\n</br>\n\n```{r grafico regiao-climatica-sudoeste-amazonica}\n#| label: fig-regiao-climatica-sudoeste-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Sudoeste. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"sudoeste\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# # Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_regional_sudoeste.jpg\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_sudoeste.png\")\n\n```\n\n\n\n</br>\n\nNa região climática Central amazônica 23.088 borboletas frugívoras foram amostradas de 2014 a 2022. Visto que 174 não foram identificadas em nível de tribo, 22.914 indivíduos foram considerados nas análises. Desses, 41% pertencem à tribo Satyrini, a mais abundante da região, seguidos por 16% de Brassolini e 10% de Coeini. Os anos 2014 e 2020 tiveram um esforço amostral inferior àquele definido como mínimo aceitável para a região (i.e., menor que 18 campanhas = 1.728 armadilhas-dia). Assim, a interpretação dos resultados nesses anos deve ser feita com cautela.  \n\nAs tribos Satyrini e Brassolini foram predominantes em praticamente todos os anos amostrados na região climática central amazônica. No entanto, em 2017 houve um aumento no número de Coeini, que foi a segunda tribo mais abundante (@fig-regiao-climatica-central-amazonica). As tribos indicadoras de áreas abertas/perturbadas tiveram baixíssima representação (@fig-regiao-climatica-central-amazonica). \n\n\n\n</br>\n\n\n```{r grafico regiao-climatica-central-amazonica}\n#| label: fig-regiao-climatica-central-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Central. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"central\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# \n# #Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_regional_central.jpg\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_central.png\")\n\n```\n\n</br>\n\n\n\nNa região climática Leste amazônica foram amostradas 7.969 borboletas frugívoras, com 67 indivíduos não identificados em nível de tribo. Assim, dos 7.902 indivíduos de borboletas frugívoras identificados na região leste da Amazônia, 46% corresponderam à tribo Satyrini, a mais representativa, seguida por Brassolini (15%) e Morphini (11%). Os anos 2016, 2017 e 2020 tiveram amostragens abaixo do esforço adequado para representar a região (i.e., menor que 18 campanhas = 1.728 armadilhas-dia) (@fig-regiao-climatica-leste-amazonica).  Apesar disso, o padrão da proporção da abundância das tribos foi bastante estável, com pouca variação entre anos.\n\n\n\n```{r grafico regiao-climatica-leste-amazonica}\n#| label: fig-regiao-climatica-leste-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Leste. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"leste\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# # Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_regional_leste.png\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_leste.png\")\n\n```\n\n</br>\n\n\n\nNa região climática Sudeste amazônica a amostragem não atingiu o valor mínimo do esforço amostral estabelecido para as análises. Esta é uma região com somente duas UCs, PARNA do Juruena e REBIO do Tapirapé, aplicando o protocolo de borboletas frugívoras e se faz necessário o aumento no número de UCs participantes.  \n\n\nAo todo, foram amostrados 5.042 indivíduos de borboletas frugívoras na região sudeste amazônica. Desses, 48 indivíduos foram descartados na análise por não terem sido identificados. Assim, 4.994 borboletas frugívoras foram identificadas em nível de tribo. Dentre as mais abundantes destacaram-se Satyrini (58%), Epicaliini (11%) e Morphini (11%). O padrão da proporção das tribos ao longo dos anos variou pouco de 2017 a 2022 (@fig-regiao-climatica-sudeste-amazonica), provavelmente pelo baixo número de UCs, visto que amostragens em diferentes UCs tendem a capturar diferentes padrões, mesmo numa mesma região (e.g., região Sudoeste).  \n\n\n</br>\n\n```{r grafico regiao-climatica-sudeste-amazonica}\n#| label: fig-regiao-climatica-sudeste-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Sudeste. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"sudeste\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# # Salvar a imagem usando ggsave()\n# ggsave(filename = \"regional_sudeste.png\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_sudeste.png\")\n\n```\n\n</br>\n\n\nNa região climática Norte amazônica, o esforço mínimo para a representação da comunidade de borboletas frugívoras (i.e., 18 campanhas = 1.728 armadilhas-dia) não foi atingido em nenhum ano. Uma das razões é a complexidade logística para a amostragem em algumas UCs do norte da Amazônia. Por exemplo, as amostragens no PARNA do Monte Roraima precisam ser feitas na forma de expedições, devido às dificuldades de acesso através da Terra indígena Raposa Serra do Sol, levando dias por terra ou com um alto custo utilizando aviões monomotores. Outro fator que influenciou a diminuição do número de EAs amostradas foi a invasão da ESEC Maracá por garimpeiros em 2019, com ameaças e roubo de equipamentos da UC. A ESEC Maracá era a única UC consolidada nao região Norte. Assim, é necessário se reestabelecer a amostragem na ESEC Maracá e aumentar o número de EAs implementadas no PARNA da Serra da Mocidade, na ESEC de Niquiá e no PARNA do Viruá. \n\nAo todo, foram amostradas 3.303 borboletas frugívoras nessa região. Dessas, 190 não foram identificadas em nível de tribo, tendo sido descartadas, de forma que 3.113 indivíduos identificados foram considerados na análise. Dentre as tribos mais abundantes destacam-se Satyrini, Brassolini e Preponini, com 55%, 15% e 6%, respectivamente. \n\nO padrão da assinatura das tribos variou de 2017 a 2019, tendo se estabilizado de 2020 a 2022. Porém, a abundância de borboletas foi bastante influenciada pelo número insuficiente de estações amostrais, o que limita potenciais conclusões  (@fig-regiao-climatica-norte-amazonica). \n\n</br>\n\n```{r grafico regiao-climatica-norte-amazonica}\n#| label: fig-regiao-climatica-norte-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Norte. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano. O asterisco indica tribo ausente na amostragem.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"norte\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# # Salvar a imagem usando ggsave()\n# ggsave(filename = \"regional_norte.png\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_norte.png\")\n\n```\n\n</br>\n\n\n### Cerrado e Mata Atlântica  \n\n</br>\n\nAté o momento, poucas UCs dos biomas Cerrado e Mata Atlântica aplicaram o protocolo de amostragem de borboletas frugívoras. Dessa forma, os resultados apresentados aqui requerem cautela na interpretação. \n\nNo Cerrado foram amostrados 6.378 indivíduos (67 deles não identificados em nível de tribo), sendo 6.311 considerados nas análises. As tribos mais representativas no Cerrado foram Satyrini, Ageroniini e Biblidini com 40%, 14% e 8%, respectivamente. É importante ressaltar que as amostragens no Cerrado foram feitas em ambientes mésicos, ou seja, em ambientes florestais úmidos imersos no ambiente savânico. Estes ambientes podem ser capões de mata ou matas ripárias. Dessa forma, é de se esperar que tribos indicadoras tanto de florestas fechadas quanto de florestas abertas sejam representadas.\n\nOs padrões anuais apresentaram grandes variações na proporção das tribos indicadoras, especialmente de Brassolini, Morphini, Biblidini e Ageroniini (@fig-regiao-cerrado). \n\n \n\n</br>\n\n```{r assinatura cerrado}\n#| label: fig-regiao-cerrado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 no Cerrado. Não houve amostragem em 2020. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de estações amostrais inspecionadas naquele ano. O asterisco indica tribo ausente na amostragem.\"\n\n# Gráficos de dados Borboletas - Protocolo básico - Cerrado -\n### Tribos com asterisco estão ausentes nos dados\n## Script: Isabela Freitas Oliveira\n\n# library(ggplot2)\n# library(dplyr)\n# library(scales)\n# library(tools)\n# \n# \n# # Função auxiliar para ajustar o título\n# ajustar_titulo <- function(titulo) {\n#   palavras <- strsplit(titulo, \" \")[[1]]\n#   \n#   # Palavras que necessitam de correção de acentuação\n#   #correcoes <- list(\n#    # \"Cerrado\" = \"Cerrado\")\n#   \n# }\n# \n# # Função para gerar o gráfico para cada unidade de conservação\n# gerar_grafico_por_bioma <- function(dados, nome_bioma) {\n#   # Preparar o título com as novas regras\n#   titulo <- gsub(\"_\", \" \", nome_bioma)\n#   titulo <- ajustar_titulo(titulo)  # Utilizando a função de ajuste de título aqui\n#   \n#   # Filtrar os dados para a unidade de conservação atual\n#   dados_bioma <- subset(dados, bioma == nome_bioma & bioma == \"Cerrado\")\n#   dados_bioma <- dados_bioma[!is.na(dados_bioma$tribo), ] #tirar os dados 'NA' que estão na tribo\n#   \n#   # Calcular o total de indivíduos por ano para a região atual\n#   total_individuos_por_ano <- dados_bioma %>%\n#     group_by(ano) %>%\n#     summarise(total = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Agregar dados por ano e tribo\n#   dados_agregados <- dados_bioma %>%\n#     group_by(ano, tribo) %>%\n#     summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Calcular totais e proporções\n#   total_por_ano <- dados_agregados %>%\n#     group_by(ano) %>%\n#     summarize(total = sum(frequencia), .groups = 'drop')\n#   \n#   dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n#     mutate(proporcao = frequencia / total * 100)\n#   \n#   # Ajustar proporções\n#   dados_agregados <- dados_agregados %>%\n#     group_by(ano) %>%\n#     mutate(diferenca = 100 - sum(proporcao),\n#            proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n#     ungroup() %>%\n#     dplyr::select(-diferenca, -proporcao) %>%\n#     rename(proporcao = proporcao_ajustada)\n#   \n#   # Ordem específica das tribos\n#   ordem_tribos <- c(\n#     \"Brassolini\", \"Morphini\", \"Haeterini\", \n#     \"Preponini\", \"Melanitini\", \"Anaeini\", \n#     \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n#     \"Satyrini\",\n#     \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n#   )\n#   \n#   # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n#   cores_tribos <- c(\n#     \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n#     \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n#     \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n#     \"Satyrini\" = \"gray95\",\n#     \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n#   )\n#   \n#   # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n#   cores_tribos <- cores_tribos[ordem_tribos]\n#   \n#   # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n#   dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n#   \n#   # Criar um data frame com a frequência agregada por tribo\n#   frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n#   \n#   # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n#   adicionar_asterisco <- function(nome_tribo) {\n#     # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n#     if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n#       return(paste0(nome_tribo, \"*\"))\n#     } else {\n#       return(nome_tribo)\n#     }\n#   }\n#   \n#   # Aplicar a função a cada tribo para criar o vetor de rótulos\n#   labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n#   \n#   # Criar um data frame com o número único de 'uc_ea' por ano\n#   numero_ea_por_ano <- dados_bioma %>%\n#     distinct(ano, uc_ea) %>%\n#     group_by(ano) %>%\n#     summarize(num_ea = n_distinct(uc_ea))\n#   \n#   # Construir o gráfico\n#   gg <- ggplot() +\n#     geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n#     geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n#     geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n#     scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n#     scale_x_discrete(expand = c(0, 0)) +\n#     scale_fill_manual(values = cores_tribos, \n#                       labels = labels_tribos,\n#                       breaks = ordem_tribos) +\n#     labs(title = titulo,\n#          x = \" \",\n#          y = \"Frequência relativa de ocorrência (%)\",\n#          fill = \"Tribo\") +\n#     theme_minimal() +\n#     theme(legend.position = \"right\", \n#           legend.title = element_text(size = 12), \n#           legend.text = element_text(size = 10), \n#           plot.title = element_text(hjust = 0.5, size = 16), \n#           plot.subtitle = element_text(hjust = 0.5, size = 14),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           axis.text = element_text(size = 10), \n#           axis.title = element_text(size = 10),\n#           axis.line = element_line(colour = \"gray40\"),\n#           axis.line.x = element_blank()) +\n#     guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n#   \n#   \n#   # Exibir o gráfico\n#   print(gg)\n#   \n#   # Retorna o gráfico para que possa ser salvo externamente\n#   return(gg)\n#   \n# }\n# \n# # Carregar e preparar os dados\n# resultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\n# resultado_final$ano <- factor(resultado_final$ano)\n# resultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n# \n# # Obter todas as UC's do bioma Cerrado\n# biomas <- unique(resultado_final$bioma[resultado_final$bioma == \"Cerrado\"])\n# \n# # Aplicar a função\n# graficos <- lapply(biomas, function(bioma) gerar_grafico_por_bioma(resultado_final, bioma))\n\n# Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_cerrado.png\",  # Escolha um nome adequado para o arquivo\n#        plot = graficos[[1]],  # Especifique qual gráfico da lista deseja salvar\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height = 8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_cerrado.png\")\n\n\n```\n\n</br>\n\nNa Mata Atlântica 2.700 borboletas frugívoras foram amostradas. Dessas, 16 não foram identificadaos no nível de tribo, de modo que 2.684 indivíduos amostrados foram considerados na análise. A tribo Satyrini foi a mais representativa, com 27% dos indivíduos, seguida por Anaeini, com 24% e Epicaliini, com 14%. \n\nHouve uma grande variação das tribos entre anos, especialmente de Brassolini, Anaeini, Coeini e Satyrini (@fig-regiao-mata-atlantica). Verificou-se também grande variação no número de indivíduos, mesmo quando com um mesmo esforço amostral, indicando haver de fato diferenças na abundância entre regiões no bioma. O padrão das tribos do bioma reflete, principalmente, o padrão registrado no Parque Nacional do Iguaçu. Assim, é de extrema importância que as amostragens sejam feitas continuamente nas mesmas UCs e que, com a adesão de novas unidades de conservação da região ao Programa de monitoramento, as amostragens nas UCs com protocolo de borboletas frugívoras já implementado sejam mantidas. \n\n\n\n</br>\n\n\n```{r assinatura mata atlântica}\n#| label: fig-regiao-mata-atlantica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2015 a 2022 na Mata Atlântica. Não houve amostragem em 2020. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de estações amostrais inspecionadas naquele ano. O asterisco indica tribo ausente na amostragem.\"\n\n\n##### Gráficos de dados Borboletas - Protocolo básico - Mata Atlantica\n### Tribos com asterisco estão ausentes no gráfico\n## Script: Isabela Freitas Oliveira\n\n# # Carregar bibliotecas\n# library(ggplot2)\n# library(dplyr)\n# library(scales)\n# library(tools)\n# \n# \n# \n# # Função auxiliar para ajustar o título\n# ajustar_titulo <- function(titulo) {\n#   palavras <- strsplit(titulo, \" \")[[1]]\n#   \n#   # Palavras que necessitam de correção de acentuação\n#   correcoes <- list(\n#     \"Mata_Atlantica\" = \"Mata Atlântica\")\n#   \n# }\n# \n# # Função para gerar o gráfico para cada unidade de conservação\n# gerar_grafico_por_bioma <- function(dados, nome_bioma) {\n#   # Preparar o título com as novas regras\n#   titulo <- gsub(\"_\", \" \", nome_bioma)\n#   titulo <- ajustar_titulo(titulo)  # Utilizando a função de ajuste de título aqui\n#   \n#   # Filtrar os dados para a unidade de conservação atual\n#   dados_bioma <- subset(dados, bioma == nome_bioma & bioma == \"Mata_Atlantica\")\n#   dados_bioma <- dados_bioma[!is.na(dados_bioma$tribo), ] #tirar os dados 'NA' que estão na tribo\n#   \n#   # Calcular o total de indivíduos por ano para a região atual\n#   total_individuos_por_ano <- dados_bioma %>%\n#     group_by(ano) %>%\n#     summarise(total = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Agregar dados por ano e tribo\n#   dados_agregados <- dados_bioma %>%\n#     group_by(ano, tribo) %>%\n#     summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Calcular totais e proporções\n#   total_por_ano <- dados_agregados %>%\n#     group_by(ano) %>%\n#     summarize(total = sum(frequencia), .groups = 'drop')\n#   \n#   dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n#     mutate(proporcao = frequencia / total * 100)\n#   \n#   # Ajustar proporções\n#   dados_agregados <- dados_agregados %>%\n#     group_by(ano) %>%\n#     mutate(diferenca = 100 - sum(proporcao),\n#            proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n#     ungroup() %>%\n#     dplyr::select(-diferenca, -proporcao) %>%\n#     rename(proporcao = proporcao_ajustada)\n#   \n#   # Ordem específica das tribos\n#   ordem_tribos <- c(\n#     \"Brassolini\", \"Morphini\", \"Haeterini\", \n#     \"Preponini\", \"Melanitini\", \"Anaeini\", \n#     \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n#     \"Satyrini\",\n#     \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n#   )\n#   \n#   # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n#   cores_tribos <- c(\n#     \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n#     \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n#     \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n#     \"Satyrini\" = \"gray95\",\n#     \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n#   )\n#   \n#   # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n#   cores_tribos <- cores_tribos[ordem_tribos]\n#   \n#   # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n#   dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n#   \n#   # Criar um data frame com a frequência agregada por tribo\n#   frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n#   \n#   # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n#   adicionar_asterisco <- function(nome_tribo) {\n#     # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n#     if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n#       return(paste0(nome_tribo, \"*\"))\n#     } else {\n#       return(nome_tribo)\n#     }\n#   }\n#   \n#   # Aplicar a função a cada tribo para criar o vetor de rótulos\n#   labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n#   \n#   # Criar um data frame com o número único de 'uc_ea' por ano\n#   numero_ea_por_ano <- dados_bioma %>%\n#     distinct(ano, uc_ea) %>%\n#     group_by(ano) %>%\n#     summarize(num_ea = n_distinct(uc_ea))\n#   \n#   # Construir o gráfico\n#   gg <- ggplot() +\n#     geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n#     geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n#     geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n#     scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n#     scale_x_discrete(expand = c(0, 0)) +\n#     scale_fill_manual(values = cores_tribos, \n#                       labels = labels_tribos,\n#                       breaks = ordem_tribos) +\n#     labs(title = titulo,\n#          x = \" \",\n#          y = \"Frequência relativa de ocorrência (%)\",\n#          fill = \"Tribo\") +\n#     theme_minimal() +\n#     theme(legend.position = \"right\", \n#           legend.title = element_text(size = 12), \n#           legend.text = element_text(size = 10), \n#           plot.title = element_text(hjust = 0.5, size = 16), \n#           plot.subtitle = element_text(hjust = 0.5, size = 14),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           axis.text = element_text(size = 10), \n#           axis.title = element_text(size = 10),\n#           axis.line = element_line(colour = \"gray40\"),\n#           axis.line.x = element_blank()) +\n#     guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n#   \n#   # Exibir o gráfico\n#   print(gg)\n# }\n# \n# # Carregar e preparar os dados\n# resultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\n# resultado_final$ano <- factor(resultado_final$ano)\n# resultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n# \n# # Obter todas as UC's do bioma Mata Atlântica\n# biomas <- unique(resultado_final$bioma[resultado_final$bioma == \"Mata_Atlantica\"])\n# \n# # Aplicar a função\n# graficos <- lapply(biomas, function(bioma) gerar_grafico_por_bioma(resultado_final, bioma))\n\n# Salvar a imagem usando ggsave()\n# ggsave(filename = \"mata_atlantica.png\",  # Escolha um nome adequado para o arquivo\n#        plot = graficos[[1]],  # Especifique qual gráfico da lista deseja salvar\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height = 8, units = \"in\")  # Define o tamanho da imagem\n\n\n\nknitr::include_graphics(\"imagens/cap04/bo_mata_atlantica.png\")\n\n\n```\n\n</br>\n\n\n#### Abundância relativa por região  \n\n\nCada região amostrada apresentou um padrão de assinatura de tribos de borboletas. De maneira geral, dentre as tribos indicadoras, o Cerrado apresentou uma proporção maior de borboletas indicadoras de florestas abertas/perturbadas, seguido por Mata Atlântica, sudoeste e norte da Amazônia (Figura 4.12). Como esperado, todas as regiões climáticas da Amazônia tiveram uma proporção maior de borboletas indicadoras de florestas fechadas/preservadas em relação às indicadoras de florestas abertas/perturbadas (Figura 4.12).  \n\n</br>\n\n\n```{r grafico da abundância relativa por região - total}\n#| label: fig-abundancia-regiao-total\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Abundância relativa das tribos de borboletas frugívoras agrupadas por bioma ou, no caso da Amazônia, por região climática. Os números sobre as barras indicam o total de indivíduos amostrados em cada região de 2014 a 2022.\"\n\nknitr::include_graphics(\"imagens/cap04/bo_regioes_totais.png\")\n\n```\n\n\n\n</br>\n\n\n\n### Índices de abundância de tribos  \n\n</br>\n\nO uso de índices de abundância em ecologia e conservação visa gerar medidas que possam ser utilizadas na ausência de estimativas populacionais mais precisas.  Geralmente, usam informações quantitativas derivadas de amostragens por área, transecções lineares ou por um certo esforço de captura, sendo uma poderosa ferramenta para se verificar o estado de conservação e acompanhar mudanças populacionais de espécies.  \n\nO programa de inventário e monitoramento de borboletas do Reino Unido, por exemplo, utiliza uma ficha de registros de ocorrências de borboletas focada nas espécies ameaçadas ou raras em sua área de ocorrência. Um objetivo chave deste programa é servir como sistema de alerta precoce, ao nível local, sobre as ameaças aos sítios importantes de ocorrência de populações de borboletas (@Harding_1995). A proposta original, iniciada em 1976, deveria durar cinco anos, porém, permanece ativa ainda hoje (@Middlebrook_2023).  \n\nO tradicional método conhecido como “Caminhada de Pollard” faz uso de transectos lineares para amostrar borboletas. O protocolo original consiste na caminhada ao longo de trilhas para a contagem padronizada de borboletas e cálculo de um índice simples, equivalente à soma da média das contagens semanais das espécies ao longo da estação de voo (@Pollard_1975; @Pollard_1977). Esse método é adotado em monitoramentos de borboletas em vários países europeus (Van_Swaay_2022) e em projetos específicos nos EUA (@Mattoni_2001).  \n\nNo Programa Monitora, para avaliar flutuações na abundância das tribos de borboletas ao longo dos anos, foi usado um índice considerando somente as tribos indicadoras de florestas fechadas/preservadas e abertas/perturbadas. Para isso, os indivíduos das tribos Brassolini, Morphini e Haeterini registrados em cada ano foram somados, com os totais resultantes representando conjuntamente as borboletas de florestas fechadas/preservadas. O mesmo procedimento foi feito para as borboletas de florestas abertas/perturbadas: Callicorini, Biblidini e Ageroniini.   \n\n\n</br>\n\n#### Cálculo dos índices \n\n</br>\n\nNeste relatório, foram adotadas duas abordagens no cálculo dos índices de abundância. Na primeira, o índice de tendência populacional segue o princípio do Living Planet Index (LPI), no qual oscilações “populacionais” podem ser detectadas comparando-se o valor do índice de um dado ano ao valor do primeiro ano de ocorrência da “população” sob análise. Na segunda, o índice de variação populacional instantânea possibilita a detecção de flutuações de abundância de um ano em relação ao ano anterior.  \n\n\nO índice de abundância *(i)* tem como base o número acumulado de indivíduos (*n*) de cada tribo em cada ano *(t)* numa dada área. A partir do número de indivíduos registrados por ano *(n~t~)* para cada grupo de borboletas indicadoras, é feita uma correção, somando-se um valor muito pequeno para evitar a presença de zeros na matriz. Desta forma, é obtida a frequência absoluta corrigida *(f~t~)* = *n~t~* + 0,00001. Em seguida, para obtenção de um valor padronizado *(fe)*, a frequência absoluta corrigida é dividida pelo esforço amostral (número de armadilhas * número de dias de amostragem). O índice de abundância *(i~t~)* é calculado por meio da divisão da fe do ano específico *(fe~t~)* pelo valor da *fe* do primeiro ano em que a \"população\" sob análise foi registrada ou primeira ocorrência *(fe~0~)*. Considerando que a frequência corrigida apresenta grandes variações de abundância e esforço amostral entre anos, aplicou-se uma transformação logarítmica (log~10~ + 1).  \n\n\n**Índice de tendência populacional** - Considerou-se primeira ocorrência quando a abundância da “população” no ano foi ≥ 20 indivíduos. O índice de abundância da primeira ocorrência *(i~0~)* é padronizado como 1,0. Dessa forma, valores acima de 1,0 indicam um aumento e abaixo de 1,0 uma redução \"populacional” em relação ao primeiro ano de ocorrência.  \n\nA seguir, um exemplo do cálculo desse índice de abundância para o terceiro ano de amostragem: \n\n\n$$f_{3} = n_{3} + 0,00001$$ \n\n\n$$fe_{3} = f_{3} / \\text{esforço} \\, \\text{anual}$$ \n\n$$i_{3} = log_{10} (fe_{3} / fe_{0}) + 1$$  \n\n\nFlutuações \"populacionais\" detectadas por meio dessa abordagem são apresentadas na @fig-ind-abund-regioes-climaticas-combinado a @fig-ind-abund-cerrado. \n\n\n\n**Índice de variação populacional instantânea** - Na segunda abordagem, o índice de abundância de um dado ano *(i~t~)* é calculado por meio da divisão da *fe* do ano específico *(fe~t~)* pelo valor da *fe* do ano anterior *(fe~t-1~)*, seguida também de uma transformação logarítmica (log10 + 1).  \n\nExemplo da aplicação desse índice de abundância para o terceiro ano de amostragem: \n\n\n$$f_{3} = n_{3} + 0,00001$$ \n$$fe_{3} = f_{3} / \\text{esforço} \\, \\text{anual}$$ \n$$i_{3} = log_{10} (fe_{3} / fe_{2}) + 1$$ \n\n\nEsta abordagem pode revelar, por exemplo, o quanto uma \"população\" está se 'recuperando' de um declínio no ano anterior (@fig-IA2-regioes-amazonia a @fig-IA2-mata-atlantica).  \n\nPortanto, os resultados apresentados a seguir expressam a variação da abundância das borboletas frugívoras considerada de forma combinada, com algumas tribos sendo tratadas em conjunto, como um grupo indicador de cada tipo de ambiente: florestas preservadas e alteradas. Valores dos índices de abundância específicos para cada tribo por ano são apresentados no Apêndice G.  \n\n\n</br>\n\n\n#### Região Amazônica \n\n</br>\n\nNa primeira abordagem utilizada, os resultados obtidos para os grupos de borboletas indicadoras não foram uniformes nas diferentes regiões climáticas da Amazônia ao longo dos anos (@fig-ind-abund-regioes-climaticas-combinado). Os resultados obtidos para os grupos de borboletas indicadoras não foram uniformes nas diferentes regiões climáticas da Amazônia ao longo dos anos. Enquanto nas regiões central, sudoeste e norte o índice de abundância indicou um aumento ou estabilidade na abundância das borboletas de florestas fechadas/preservadas, uma diminuição \"populacional\" foi indicada nas regiões leste e sudeste. Este é um resultado interessante, visto que as regiões sudeste e leste da Amazônia fazem parte do chamado \"arco do desmatamento\" e sofrem com os avanços de intervenções humanas como a pecuária, plantações de soja, construções de barragens, hidrelétricas e estradas (@Fearnside_2022; @Nickerson_2022; @Jakimow_2023; @Levy_2023). Dessa forma, a diminuição de borboletas indicadoras de florestas fechadas/preservadas nessas regiões pode ser um indicativo da diminuição da cobertura florestal em  nível regional, visto que as amostragens são executadas em UCs que não sofrem diretamente com estas ameaças. Porém, para que esta hipótese seja avaliada adequadamente faz-se necessário obter e incluir em futuras análises dados ambientais e climáticos na escala da região.  \n\n\nAs tribos indicadoras de florestas abertas/perturbadas apresentaram, em sua maioria, redução \"populacional\", especialmente após de 2020. Os únicos picos de aumento \"populacional\" deste grupo ocorreram em 2019, na região sudoeste da Amazônia, e em 2021, na região central. As regiões norte, leste e sudoeste (a partir de 2020) se destacaram pelas reduções e na região sudeste não foi obtido o número mínimo de 20 indivíduos para o cálculo do índice. Para entender este resultado serão necessárias análises mais refinadas utilizando imagens de satélite, dados climáticos e ambientais. No entanto, a diminuição populacional desse grupo deve, idealmente, ser avaliada num nível taxonômico mais fino, preferencialmente de espécie, para que a interpretação seja mais adequada, especialmente em relação à tribo Ageroniini.  \n\n \n\n</br>\n\n\n```{r graficos IA-regiões_climaticas_amazonia_calculos}\n#| label: fig-regioes-amazonia\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n\n\n##### Índices de abundância de tribos ao longo dos anos - Cinco regiões Amazônicas \n##Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# \n# #########################################################\n# ######### Região Central Amazônica\n# #########################################################\n# \n# # # Definir o diretório de trabalho\n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice <-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"central\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_1 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_1, \"df_completo_central_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_central <- df_agregado_1 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_central %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_central_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas - borboletas indicadoras\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_central_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ##################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_2 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n# ungroup() %>%\n# select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_2, \"df_completo_central_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_central_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_2 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos\n# anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_central <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Central Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2))\n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_central)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_central.png\",\n#  #      gg_grafico_primeira_ocorrencia_central,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# \n# #########################################################\n# ######### Região Sudoeste Amazônica\n# #########################################################\n# \n# # Definir o diretório de trabalho\n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"sudoeste\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_3 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_3, \"df_completo_sudoeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_3 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo # tabela geral dos índices\n# df_tribo_ano_largo <- df_agregado_3 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_sudoeste <- df_agregado_3 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_sudoeste %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_sudoeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas - borboletas indicadoras\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# # Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_sudoeste_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_4 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_4, \"df_completo_sudoeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_4 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_4 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_sudoeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_4 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos\n# anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n# \n# # Criar o gráfico com duas linhas\n# gg_grafico_primeira_ocorrencia_sudoeste <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Sudoeste Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2))\n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_sudoeste)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_sudoeste.png\",\n#  #      gg_grafico_primeira_ocorrencia_sudoeste,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# #########################################################\n# ######### Região Leste Amazônica\n# #########################################################\n# \n# # Definir o diretório de trabalho\n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"leste\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_5 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_5, \"df_completo_leste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_5 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo # tabela geral dos índices\n# df_tribo_ano_largo <- df_agregado_5 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_leste <- df_agregado_5 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_leste %>%\n#   select(tribo, ano, indice_abundancia) %>% # Selecionar as colunas relevantes\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_leste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_leste_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_6 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_6, \"df_completo_leste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_6 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_6 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_leste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_6 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\n# anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 2),\n#                        ano = rep(c(2014, 2015), each = length(unique(dados_longos$tribo))),\n#                        indice_abundancia = NA))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_leste <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Leste Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2))\n# \n# print(gg_grafico_primeira_ocorrencia_leste)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_leste.png\",\n#  #      gg_grafico_primeira_ocorrencia_leste,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# #########################################################\n# ######### Região Sudeste Amazônica\n# #########################################################\n# \n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"sudeste\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #####################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_7 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_7, \"df_completo_sudeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_7 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_7 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_sudeste <- df_agregado_7 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_sudeste %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_sudeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_sudeste_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_8 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_8, \"df_completo_sudeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_8 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_8 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_sudeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_8 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\n# anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 3),\n#                        ano = rep(c(2014, 2015, 2020), each = length(unique(dados_longos$tribo))),\n#                        indice_abundancia = NA))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_sudeste <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   geom_point(data = filter(dados_longos, tribo == \"Borboletas_abertas\" & ano == 2019), aes(x = as.factor(ano), y = indice_abundancia), color = \"#CFA154\", size = 3) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Sudeste Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2))\n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_sudeste)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_sudeste.png\",\n#  #      gg_grafico_primeira_ocorrencia_sudeste,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# #########################################################\n# ######### Região Norte Amazônica\n# #########################################################\n# \n# # Definir o diretório de trabalho\n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"norte\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_9 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_9, \"df_completo_norte_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_9 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo # tabela geral dos índices\n# df_tribo_ano_largo <- df_agregado_9 %>%\n#   select(tribo, ano, indice_abundancia) %>% # Selecionar as colunas relevantes\n#   pivot_wider(names_from = ano, values_from = indice_abundancia) # Transformar para o formato largo\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_norte <- df_agregado_9 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_norte %>%\n#   select(tribo, ano, indice_abundancia) %>% # Selecionar as colunas relevantes\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_norte_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_norte_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_10 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_10, \"df_completo_norte_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_10 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_10 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar o dataframe em um arquivo de texto\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_norte_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_10 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015)\n# anos_completos <- factor(c(2014:2022))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 2),\n#                        ano = rep(c(2014, 2015), each = length(unique(dados_longos$tribo))),\n#                        indice_abundancia = NA))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_norte <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(data = subset(dados_longos, ano >= 2018), aes(group = tribo), size = 1) +  #tava dando erro, pois os dados tavam comecando em 2017,mas é para começar em 2018\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Norte Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5),\n#         panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#         panel.grid.minor = element_blank()) +\n#   scale_x_discrete(limits = as.character(2014:2022)) +\n#   coord_cartesian(ylim = c(0, 2))\n# \n# # print(gg_grafico_primeira_ocorrencia_norte)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_norte.png\",\n#  #      gg_grafico_primeira_ocorrencia_norte,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# ##############################################\n# #### Gráficos combinados\n# #############################################\n# \n# library(gridExtra)\n# indice_abu_amazonia <- grid.arrange(\n#   gg_grafico_primeira_ocorrencia_central + theme(legend.position = \"none\",\n#                                                  axis.text.x = element_blank(),\n#                                                  axis.title = element_text(size = 14),\n#                                                  plot.title = element_text(size = 18),\n#                                                  panel.spacing = unit(0.5, \"lines\"),\n#                                                  panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                  axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n#   gg_grafico_primeira_ocorrencia_sudoeste + theme(legend.position = \"none\",\n#                                                   axis.text.x = element_blank(),\n#                                                   axis.title = element_text(size = 14),\n#                                                   plot.title = element_text(size = 18),\n#                                                   panel.spacing = unit(0.5, \"lines\"),\n#                                                   panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                   axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n#   gg_grafico_primeira_ocorrencia_leste + theme(legend.position = \"none\",\n#                                                axis.text.x = element_blank(),\n#                                                axis.title = element_text(size = 14),\n#                                                plot.title = element_text(size = 18),\n#                                                panel.spacing = unit(0.5, \"lines\"),\n#                                                panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n#   gg_grafico_primeira_ocorrencia_sudeste + theme(legend.position = \"none\",\n#                                                  axis.text.x = element_blank(),\n#                                                  axis.title = element_text(size = 14),\n#                                                  plot.title = element_text(size = 18),\n#                                                  panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                  axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n#   gg_grafico_primeira_ocorrencia_norte + theme(legend.position = \"bottom\",\n#                                                axis.text.x = element_text(size = 20),\n#                                                axis.title = element_text(size = 14),\n#                                                plot.title = element_text(size = 18),\n#                                                panel.spacing = unit(0.5, \"lines\"),\n#                                                panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                axis.ticks.y = element_line(color = \"black\", size = 0.4),\n#                                                legend.text = element_text(size = 20)),\n#   nrow = 5,  heights = c(10, 10, 10, 10, 13)\n# )\n# \n# # Remover os painéis menores\n# indice_abu_amazonia$grobs[[1]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# indice_abu_amazonia$grobs[[2]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# indice_abu_amazonia$grobs[[3]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# indice_abu_amazonia$grobs[[4]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# indice_abu_amazonia$grobs[[5]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# \n# # Exibir a imagem\n# print(indice_abu_amazonia)\n# \n# # Salvar o gráfico em formato PNG\n# \n# ggsave(\"imagens/cap04/indice_abundancia_combinado_amazonia.png\",\n#        indice_abu_amazonia,\n#        width = 16,\n#        height = 16,\n#        units = \"in\")\n\n\n```\n\n</br>\n\n\n```{r grafico IA-regiões_climaticas_amazonia}\n#| label: fig-ind-abund-regioes-climaticas-combinado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação no índice de tendência populacional analisando a abundância das tribos de borboletas frugívoras do bioma Amazônico em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/indice_abundancia_combinado_amazonia.png\")\n\n```\n\n\n</br>\n\n\n#### Cerrado \n\n \n\nO Cerrado apresenta uma composição de tribos muito distinta dos biomas mais florestais, como Amazônia e Mata Atlântica (@fig-abundancia-regiao-total). Os dados obtidos para este bioma apresentaram grandes variações entre anos (@fig-regiao-cerrado) causados pela grande variação nas unidades de conservação amostradas a cada ano. Isto dificulta a determinação de padrões claros para o bioma.  \n\nO grande aumento observado em todas as populações de borboletas de florestas abertas e fechadas indica que o primeiro ano da série (2014) deve ter sido atípico, com abundâncias abaixo da média, dado que todas as populações aumentaram nos anos seguintes (fig-ind-abund-cerrado). Alternativamente, é possível que os ciclos observados no Cerrado tenham um pulso mais longo, o que somente poderá ser comprovado com uma série histórica mais extensa do que a atual. No entanto, ressaltamos que a bioindicação obtida pela abundância dos grupos associados a florestas fechadas pode não ser a melhor para este bioma, dado que a tribo Haeterini não ocorreu nas amostragens e que as tribos Brassolini e Morphini são naturalmente pouco abundantes em florestas secas, cerradão e cerrado denso. \n\n \n</br>\n\n\n```{r grafico IA-cerrado-calculos}\n#| label: ind-abund-cerrado-calculos\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n##### Índices de abundância de tribos ao longo dos anos - Cerrado\n##Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# \n# # Definir o diretório de trabalho\n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';') \n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Cerrado\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #######################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_1 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_, \n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_1, \"df_completo_cerrado_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia) \n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_cerrado <- df_agregado_1 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_cerrado %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_cerrado_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\", \n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_cerrado_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ######################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_2 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_, \n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_2, \"df_completo_cerrado_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia) \n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_cerrado_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ############\n# #Gráfico\n# library(ggplot2)\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_2 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\n# anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 1),\n#                        ano = 2020, each = length(unique(dados_longos$tribo)),\n#                        indice_abundancia = NA))\n# \n# # Criar uma sequência completa de anos\n# anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_cerrado <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Cerrado\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 16),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2)) \n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_cerrado)\n# \n# # Salvar o gráfico em formato PNG\n# ggsave(\"imagens/cap04/bo-indice-abundancia-cerrado.png\",\n#       gg_grafico_primeira_ocorrencia_cerrado,\n#      width = 10,\n#     height = 5, \n#    units = \"in\") \n\n\n```\n\n</br>\n\n\n```{r grafico IA-cerrado}\n#| label: fig-ind-abund-cerrado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no índice de tendência populacional analisando a abundância das tribos de borboletas frugívoras do bioma Cerrado em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-indice-abundancia-cerrado.png\")\n\n```\n\n</br>\n\n\n#### Mata Atlântica  \n\n</b>\n\nO padrão de bioindicação para a Mata Atlântica é similar àquele observado para as diferentes regiões amazônicas, apesar de haver maior equitabilidade de distribuição das diversas tribos de borboletas (@fig-abundancia-regiao-total). Não foram registradas espécies da tribo Haeterini nas UCs amostradas.  \n\nOs resultados obtidos para as UCs da Mata Atlântica são muito influenciados pela grande quantidade de capturas no PARNA do Iguaçu, que representa 74% da abundância total observada para o bioma. Unidades de conservação como o PARNA da Serra dos Órgãos, PARNA Serra da Bocaina e PARNA do Superagui têm registrado baixos números de borboletas frugívoras na maior parte dos anos, o que nos alerta para a necessidade de conhecer melhor as variações desta comunidade ao longo do tempo.  \n\nApesar das UCs deste bioma não terem sido suficientemente amostradas, pode-se observar um aparente declínio na abundância das tribos indicadoras de florestas fechadas/preservadas, que se deu de forma contínua ao longo de todo o período de amostragem. Tal conclusão, no entanto, ainda carece de dados para ser confirmada. Já as tribos indicadoras de florestas abertas/perturbadas apresentaram flutuações drásticas, provavelmente devido a estocasticidade relacionada ao baixo número amostral (@fig-ind-abund-mata-atlantica).  \n\n\n</br>\n\n\n```{r IA-mata-atlantica-calculos}\n#| label: ind-abund-mata-atlantica-calculos\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n##### Índices de abundância de tribos ao longo dos anos - Mata Atlântica\n##Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# \n# # Definir o diretório de trabalho\n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';') \n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Mata_Atlantica\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #######################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_1 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_, \n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_1, \"df_completo_mata_atlantica_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia) \n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_mata_atlantica <- df_agregado_1 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_mata_atlantica %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_mata_atlantica_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\", \n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_mata_atlantica_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ######################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_2 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_, \n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_2, \"df_completo_mata_atlantica_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia) \n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_mata_atlantica_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ############\n# #Gráfico\n# library(ggplot2)\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_2 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\n# anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 1),\n#                        ano = 2020, each = length(unique(dados_longos$tribo)),\n#                        indice_abundancia = NA))\n# \n# # Criar uma sequência completa de anos\n# anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_mata_atlantica <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Mata Atlântica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 16),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(-0.5, 2)) \n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_mata_atlantica)\n# \n# # Salvar o gráfico em formato PNG\n# ggsave(\"imagens/cap04/bo-indice-abundancia-mata-atlantica.png\",\n#        gg_grafico_primeira_ocorrencia_mata_atlantica,\n#        width = 10,\n#        height = 5, \n#        units = \"in\") \n\n\n```\n\n</br>\n\n```{r grafico IA-mata-atlantica}\n#| label: fig-ind-abund-mata-atlantica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no índice de tendência populacional analisando a abundância das tribos de borboletas frugívoras do bioma Mata Atlântica em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-indice-abundancia-mata-atlantica.png\")\n\n```\n\n\n\n\nNa segunda abordagem utilizada para o índice de abundância, a análise de variações populacionais instantâneas, os valores de cada ano foram comparados ao valor do ano anterior. Na região climática sudoeste amazônica foi observada uma redução de Ageroniini (a única tribo representante das borboletas indicadoras de florestas abertas/perturbadas observadas na região) nos anos de 2017 e 2018, mas um aumento considerável da tribo em 2019. Devido a este grande crescimento populacional de Ageroniini e do esforço amostral na região em 2019 (2.122 indivíduos amostrados em 76 campanhas realizadas, com 38 EAs), o ano de 2020 apresentou uma redução drástica no índice, tanto devido ao baixo número de indivíduos de Ageroniini (n = 42), quanto à redução do esforço amostral para 26 campanhas (com 13 EAs). No ano de 2021 houve um aumento do índice em relação ao ano anterior, e uma pequena redução em 2022 (@fig-IA2-regioes-amazonia).   \n\n\nAs borboletas indicadoras de florestas fechadas/preservadas apresentaram estabilidade, com leves variações em sentido inverso às borboletas indicadoras de florestas abertas/perturbadas, exceto em 2018, quando nos dois grupos verificou-se leve redução no valor do índice  (@fig-IA2-regioes-amazonia). Esta é uma dinâmica populacional esperada, visto que as borboletas indicadoras de florestas fechadas e florestas abertas possuem requerimentos ambientais e climáticos contrastantes. \n\nNa região climática Central amazônica, as tribos indicadoras de florestas abertas/perturbadas, representadas somente por Ageroniini, tiveram um aumento populacional em 2017 em relação a 2016, com uma subsequente redução nos anos de 2018 e 2019 (@fig-IA2-regioes-amazonia). A partir de 2020, houve um pequeno aumento em relação ao ano anterior e em 2021 esta tribo apresentou um grande aumento populacional. Porém, no ano seguinte, houve uma grande redução populacional desse grupo de borboletas (@fig-IA2-regioes-amazonia). No caso das borboletas de florestas fechadas/preservadas, notou-se uma oscilação de crescimento e redução populacional ao longo dos anos, com crescimento nos anos de 2020 e 2021 (@fig-IA2-regioes-amazonia). Os grupos indicadores tiveram o mesmo padrão de crescimento populacional em relação ao ano anterior em 2019, 2020 e 2021, ambos com diminuição populacional em 2022 (@fig-IA2-regioes-amazonia).  \n\nNa região climática Leste amazônica as tribos indicadoras de florestas fechadas e abertas apresentaram padrões de crescimento e diminuição populacional similares ao longo dos anos, com exceção de 2022, quando borboletas indicadoras de florestas abertas tiveram um aumento populacional em relação ao ano anterior, enquanto as borboletas indicadoras de florestas fechadas apresentaram uma redução (@fig-IA2-regioes-amazonia). Apesar dos mesmos padrões, as proporções das mudanças populacionais de um ano para o outro entre os dois grupos indicadores foram diferentes.  \n\nA região climática Sudeste amazônica não apresentou, em nenhum ano amostrado, o número mínimo de borboletas indicadoras de florestas abertas/perturbadas para que o índice fosse calculado (@fig-IA2-regioes-amazonia). No entanto, as borboletas indicadoras de florestas fechadas/preservadas mostraram uma oscilação populacional entre os anos (@fig-IA2-regioes-amazonia).  \n\nNa região climática Norte amazônica os grupos indicadores apresentaram um número mínimo de indivíduos para o cálculo do índice apenas a partir de 2018. Os padrões dos dois grupos foram congruentes em todos os anos, exceto em 2022, quando a abundância de borboletas indicadoras de florestas abertas/perturbadas aumentou em relação ao ano anterior, e as borboletas indicadoras de florestas fechadas/preservadas mostraram uma pequena redução (@fig-IA2-regioes-amazonia).  \n\n</br>\n\n\n```{r grafico IA2 regiões amazônia}\n#| label: fig-IA2-regioes-amazonia\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação no Índice de variação instantânea das tribos de borboletas frugívoras do bioma Amazônico em relação ao ano anterior. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-IA2-regioes-amazonia.png\")\n\n```\n\n</br>\n\nA variação instantânea observada nas populações das tribos de borboletas indicadoras de florestas fechadas e abertas no Cerrado mostram variações grandes entre anos (@fig-IA2-cerrado). No entanto, como os dados se referem a UCs diferentes em anos diferentes, as variações podem estar relacionadas a diferenças existentes entre as comunidades de borboletas nessas áreas, podendo não refletir bem as variações populacionais desses grupos no bioma.  \n\n</br>\n\n\n```{r grafico IA2 Cerrado}\n#| label: fig-IA2-cerrado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no Índice de variação instantânea das tribos de borboletas frugívoras do bioma Cerrado em relação ao ano anterior. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini e Morphini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-IA2-cerrado.png\")\n\n```\n\n</br>\n\n\nAs variações populacionais instantâneas observadas para as tribos de borboletas de florestas abertas nas UCs da Mata Atlântica (@fig-IA2-mata-atlantica) explicam as grandes variações observadas no índice de tendência populacional (@fig-ind-abund-mata-atlantica). Já as variações instantâneas observadas para as borboletas de florestas fechadas confirmam a tendência de redução dessas populações observadas no período, pois foram observadas poucas variações positivas. Apesar desta tendência ser muito influenciada pelo grande volume de informações vindas do PARNA Iguaçu, esse padrão precisa ser monitorado para avaliar se a tendência continua. \n\n</br>\n\n\n```{r grafico IA2 Mata Atlântica}\n#| label: fig-IA2-mata-atlantica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no Índice de variação instantânea das tribos de borboletas frugívoras do bioma Mata Atlântica em relação ao ano anterior. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini e Morphini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-IA2-mata-atlantica.png\")\n\n```\n\n</br>\n\n\n\n### Destaque\n\n</br>\n\n\n#### Efeito da queda dos tabocais na abundância das tribos de borboletas frugívoras no sudoeste da Amazônia  \n\n</br>\n\nNa região sudoeste da Amazônia, especialmente no estado do Acre, encontra-se uma vasta área de florestas de bambuzais do gênero *Guadua*, chamadas localmente de 'tabocal'. Estas florestas se estendem por uma superfície de aproximadamente 162.000 km^2^, na qual uma única população de bambu pode ocupar uma área de 330 km^2^ (@Carvalho_2013). Essas populações de taboca têm um ciclo de vida que varia de 27-28 anos (@Carvalho_2013). A população entra em senescência após sua reprodução sexuada, inicialmente com a perda de folhas dos indivíduos e, no fim, com sua sua morte e queda. As manchas de bambu são densas e altas e, ao morrerem, deixam uma grande porção de floresta aberta. \n\nAlgumas UCs do Acre possuem extensas manchas florestas de tabocal e,  nos últimos anos, foram relatadas mortes de diversas dessas populações (Marcos Silveira, comunicação pessoal, 15 de janeiro de 2024). Porém, essa mortalidade não é imediata e a senescência dessas manchas pode levar mais de um ano. Há relatos da mortalidade de extensas áreas de tabocal de 2017 a 2021 nas seguintes UCs do Programa Monitora: RESEX do Cazumbá-Iracema (2017 e 2018), RESEX do Alto Tarauacá e RESEX Chico Mendes (2018) e RESEX Riozinho da Liberdade (2021). \n\nPara avaliar se a mortalidade das manchas de tabocal influenciou a abundância das tribos de borboletas frugívoras em cada UC, foi feito uma comparação entre anos para cada tribo, por meio do teste de Wilcoxon (ou teste U de Mann-Whitney). Este teste compara as medianas das abundâncias padronizadas pelo esforço amostral dos anos específicos com a mediana geral (a soma das medianas dos anos específicos dividida pelo número de anos). Um valor de *p* ≤ 0.01 indica que houve diferença significativa entre a mediana do ano específico e a mediana geral. Admitindo-se  que um evento de distúrbio na floresta pode influenciar a comunidade de borboletas tanto no mesmo ano quanto no ano seguinte, essas duas possibilidades foram consideradas na interpretação dos resultados. O valor de *p* considerado foi de 0.01, para que apenas efeitos mais fortes fossem detectados nos testes. A sobreposição dos intervalos de confiança de cada ano indica que não houve diferença significativa da abundância. As análises também foram aplicadas às tribos de borboletas do PARNA Serra do Divisor, local considerado \"controle\", por não apresentar florestas de taboca. \n\nNa RESEX do Cazumbá-Iracema, as tribos Brassolini e Morphini, indicadoras de florestas fechadas/preservadas, mostraram um aumento significativo na mediana da abundância no ano seguinte à mortalidade dos tabocais (@fig-abundancia-resex-cazumba-iracema-combinada). Este resultado é oposto ao esperado, pois com a morte dos tabocais a floresta fica mais aberta e menos propícia às espécies das tribos de floresta fechada. No entanto, a tribo Ageroniini, indicadora de florestas abertas/perturbadas, parece ter respondido à esta perturbação ambiental, visto que o aumento da mediana da abundância foi expressivo, resultando num valor quase 20 vezes maior do que o da mediana geral (@fig-abundancia-resex-cazumba-iracema-combinada). Outra tribo que também pode ter respondido à queda dos tabocais foi Coeini (@fig-abundancia-resex-cazumba-iracema-combinada) que, apesar de não ser uma tribo indicadora, têm espécies que são comuns no dossel e florestas abertas. \n\n</br>\n\n\n```{r grafico abundancia-resex-cazumba-iracema}\n#| label: fig-abundancia-resex-cazumba-iracema\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX do Cazumbá-Iracema\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# \n# dados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Resex_do_Cazumba-Iracema')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n# }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = .7) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5.5),\n#           axis.text = element_text(size = 6),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n# #   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n# #          plot = p_tribo,  # O objeto ggplot\n# #          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n# #          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Cazumba-Iracema\",  # Especifique o diretório onde você deseja salvar o gráfico\n# #          dpi = 300,  # Define a resolução (DPI)\n# #          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# # }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5.5),\n#           axis.text = element_text(size = 6),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n\n```\n\n\n```{r grafico abundancia-resex-cazumba-iracema-combinada}\n#| label: fig-abundancia-resex-cazumba-iracema-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na mediana da abundância das tribos de borboletas frugívoras na RESEX do Cazumbá-Iracema de 2016 a 2022. A linha horizontal pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_cazumba_iracema.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Cazumba-Iracema\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-cazumba.png\")\n\n```\n\n\n</br>\n\n\nNa RESEX do Alto Tarauacá, as borboletas parecem ter respondido ao impacto da queda das florestas de tabocal no mesmo ano em que ela ocorreu. Grande parte das tribos que tiveram resultados significativamente diferentes da mediana total foi detectada em 2019. As tribos Brassolini, Coeini e Ageroniini apresentaram um aumento em suas abundâncias, enquanto a tribo Anaeini apresentou uma diminuição (@fig-abundancia-resex-alto-tarauaca-combinada). Devido a pandemia, esta UC não coletou os dados em 2020, o que impossibilitou a avaliação do efeito da queda das tabocas nas borboletas após um ano. No entanto, em 2021, algumas tribos apresentaram uma abundância significativamente menor que a mediana geral. Este foi o caso das tribos Brassolini, Preponini, Anaeini e Epicaliini (@fig-abundancia-resex-alto-tarauaca-combinada). \n\n</br>\n\n\n\n```{r grafico abundancia-resex-alto-tarauaca}\n#| label: fig-abundancia-resex-alto-tarauaca\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX do Alto Taraucá\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# \n# # dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# # dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# # dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# # dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Resex_do_Alto_Tarauaca')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.2\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n#   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n#          plot = p_tribo,  # O objeto ggplot\n#          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Alto Tarauaca\",  # Especifique o diretório onde você deseja salvar o gráfico\n#          dpi = 300,  # Define a resolução (DPI)\n#          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.2\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-alto-tarauca-combinada}\n#| label: fig-abundancia-resex-alto-tarauaca-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na mediana da abundância das tribos de borboletas frugívoras na RESEX do Alto Tarauacá de 2017 a 2022. A linha pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_alto_tarauaca.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Alto Tarauaca\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-alto-tarauaca.png\")\n\n\n```\n\n</br>\n\n\nEm 2018, a RESEX Chico Mendes sofreu quedas de florestas de taboca, mas essa perturbação não pareceu afetar a abundância das tribos de borboletas naquele ano. No entanto, no ano seguinte, foi observada uma redução significativa da abundância da tribo Satyrini (@fig-abundancia-resex-chico-mendes-combinada).  \n\nApesar dos resultados não apresentarem significância, há um padrão de diminuição da mediana da abundância de borboletas de 2018 para 2019. Com exceção das tribos Epiphilini e Anaeini, todas as outras apresentaram uma diminuição nas abundâncias (@fig-abundancia-resex-chico-mendes-combinada). Este é um resultado interessante, pois em 2019, diversas tribos de borboletas tiveram aumento na sua abundância em outras UCs da região Sudoeste da Amazônia (e.g., RESEX do Cazumbá-Iracema, RESEX do Alto do Tarauacá). \n\n \n\n```{r grafico abundancia-resex-chico-mendes}\n#| label: fig-abundancia-resex-chico-mendes\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX Chico Mendes\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# # \n# # dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# # dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# # dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# # dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Resex_Chico_Mendes')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- erros_padrao\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#      theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n#   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n#          plot = p_tribo,  # O objeto ggplot\n#          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Chico Mendes\",  # Especifique o diretório onde você deseja salvar o gráfico\n#          dpi = 300,  # Define a resolução (DPI)\n#          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- erros_padrao\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#      theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-chico-mendes-combinada}\n#| label: fig-abundancia-resex-chico-mendes-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na mediana da abundância das tribos de borboletas frugívoras na RESEX Chico Mendes em 2018 e 2019. A linha pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_chico_mendes.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Chico Mendes\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-chico-mendes.png\")\n\n```\n\n</br>\n\nNa RESEX Riozinho da Liberdade houve quedas das florestas de taboca em 2021, mas esta perturbação parece não ter influenciado significativamente as tribos de borboletas. No entanto, a tribo Morphini apresentou uma diminuição significativa da sua abundância em 2022 (@fig-abundancia-resex-riozinho-da-liberdade-combinada). \n\n</br>\n\n\n\n```{r grafico abundancia-resex-riozinho-da-liberdade}\n#| label: fig-abundancia-resex-riozinho-da-liberdade\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX Riozinho da Liberdade\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# # \n# # dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# # dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# # dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# # dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Resex_Riozinho_da_Liberdade')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- erros_padrao\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n#   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n#          plot = p_tribo,  # O objeto ggplot\n#          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Riozinho da Liberdade\",  # Especifique o diretório onde você deseja salvar o gráfico\n#          dpi = 300,  # Define a resolução (DPI)\n#          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- erros_padrao\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-riozinho-da-liberdade-combinada}\n#| label: fig-abundancia-resex-riozinho-da-liberdade-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na mediana da abundância das tribos de borboletas frugívoras na RESEX do Riozinho da Liberdade de 2020 a 2022. A linha pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_riozinho_da_liberdade.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Riozinho da Liberdade\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-riozinho.png\")\n\n```\n\n</br>\n\nNo PARNA da Serra do Divisor, pela inexistência de florestas de taboca, era esperado que não houvesse grande diferença na abundância das tribos entre anos. Duas tribos, Brassolini e Epicaliini apresentaram diminuições significativas em suas abundâncias em 2021 (@fig-abundancia-parna-serra-divisor-combinada). Foi observado também que os valores de abundâncias foram menores em comparação aos anos anteriores (@fig-abundancia-parna-serra-divisor-combinada). \n\n</br>\n\n```{r grafico abundancia-parna-serra-divisor}\n#| label: fig-abundancia-parna-serra-divisor\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# PARANA Serra do Divisor\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# # \n# # dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# # dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# # dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# # dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Parna_da_Serra_do_Divisor')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.2\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n#   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n#          plot = p_tribo,  # O objeto ggplot\n#          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Serra do Divisor\",  # Especifique o diretório onde você deseja salvar o gráfico\n#          dpi = 300,  # Define a resolução (DPI)\n#          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.2\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-parna-serra-divisor-combinada}\n#| label: fig-abundancia-parna-serra-divisor-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na abundância das tribos de borboletas frugívoras no PARNA da Serra do Divisor de 2018 a 2022. A linha pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_serra_do_divisor.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Serra do Divisor\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-serra-divisor.png\")\n\n```\n\n\n</br>\n\nEsse padrão de diminuição das abundâncias das tribos a partir de 2021 também foi observado nas UCs anteriormente citadas. Dessa forma, sugere-se que algum evento climático/ambiental pode ter afetado as comunidades de borboletas em toda a região do estado do Acre. No entanto, a queda das florestas de taboca parece ter uma grande influência local em alguns grupos de borboletas, principalmente as tribos indicadoras, confirmando que este nível taxonômico responde a esse tipo de distúrbio. \n\n</br>\n\n\n## Discussão\n\n</br>\n\nO Programa Monitora vem se estabelecendo como um dos maiores programas de monitoramento da biodiversidade do mundo. Dada a extensão continental do Brasil e a carência de estudos de longo prazo em diversos biomas, a intensificação do apoio estruturado ao Programa com recursos extraorçamentários por meio de projetos especiais (por exemplo, ARPA, FUNBIO e PNUD) e de ONGs e iniciativas nacionais (por exemplo, IPÊ e ECOPORÉ) e internacionais (por exemplo, USFS, USAID e Gordon and Betty Moore Foundation) é imprescindível para seu fortalecimento e consolidação. Entretanto, apesar de ser pertinente o uso de recursos de projetos na fase de implementação do Programa Monitora nas unidades de conservação, é importante que exista aumento do aporte de fontes constantes de recursos para manutenção do Programa nas unidades, por meio do Orçamento Geral da União e compensação ambiental, por exemplo.  Somente dessa forma, com fontes múltiplas de recursos e parcerias, é possível acumular esforços para que a biodiversidade brasileira seja conhecida, estudada e protegida.  \n\nAlém do monitoramento de diversos grupos ao longo dos anos, o Programa Monitora vem possibilitando a atualização do conhecimento sobre a distribuição geográfica de diversas espécies de borboletas, a exploração científica de novos locais e o registro da ocorrência de novas espécies para o Brasil (i.e., PARNA do Monte Roraima; Oliveira et al. *em revisão*), além da descoberta de novas espécies para a ciência (i.e., novo gênero de borboleta coletado na REBIO do Tapirapé; @Barbosa_2023).  \n\nNas amostragens de borboletas frugívoras do Programa Monitora, o protocolo básico foi, em geral, adequadamente aplicado, com a obtenção de importantes dados para o país. Especialmente na Amazônia, região de grandes dificuldades logísticas, novas áreas têm sido inventariadas, proporcionando, mesmo que em caráter ainda preliminar, um panorama mais amplo da diversidade. No entanto, para que o conhecimento desse grupo continue evoluindo, são funcamentais tanto o compromisso das UCs participantes com sua permanência no Programa, quanto a adesão de novas áreas, como ressaltado ao longo do capítulo. O ano de 2022 (ano limite das análises desse relatório) apresentou a maior quantidade de UCs do Programa aplicando o protocolo básico de borboletas frugívoras, destacando não somente a recuperação em relação à redução no esforço amostral causada pela baixa amostragem nos anos da pandemia de Covid-19, mas também a superação do maior esforço até então registrado, em período imediatamente anterior à pandemia. É de se esperar que o número de UCs consolidadas cresça, não somente na Amazônia, mas também nos outros biomas, Cerrado e Mata Atlântica. Esta ampliação espacial do esforço amostral se faz necessária devido à grande relação entre esforço e número de capturas. Sendo assim, quanto maior o número de locais amostrados, maior a abundância, riqueza e diversidade de borboletas conhecidas (@Freitas_2024).  \n\nUm fator indispensável para um programa de monitoramento é a sua amostragem temporal (@Middlebrook_2023). As amostragens ao longo do tempo (anos) possibilitam detectar variações ou estabilidade na abundância, riqueza e composição de espécies em uma determinado local ou região (@Mattoni_2001; @VanSwaay_2015; @Middlebrook_2023; @Freitas_2024). Portanto, além da ampliação da amostragem em termos espaciais, deve-se, principalmente, priorizar a continuidade das amostragens ao longo dos anos, pois somente desta forma análises temporais robustas poderão ser realizadas para a detecção consistente de eventuais flutuações temporais dos indicadores escolhidos. A interpretação dos dados é dificultada pelos acréscimos, decréscimos ou substituições de UCs ao longo dos anos. Com as diferenças ambientais de cada UC, a eventual falta de constância nas amostragens das UCs analisadas resulta em dados muitas vezes inconsistentes e dispersos, dificultando a obtenção de resultados sólidos para a região. Portanto, torna-se importante analisar a comunidade de borboletas frugívoras  de cada UC separadamente para evitar a influência dos dados de outras UCs na interpretação dos dados regionais. É importante ressaltar que o Programa Monitora ainda está na fase de estruturação, crescimento e consolidação. Os programas de monitoramento de borboletas em países temperados estão estabelecidos há décadas, como por exemplo o [The United Kingdom Butterfly Monitoring Scheme (UKBMS)](https://ukbms.org/), iniciado em 1976, e coletando dados anualmente em mais de 3.000 locais na Grã-Bretanha.  \n\nA tribo Satyrini tem sido a mais representativa em todas as localidades amostradas, um resultado comum, dado que é a tribo de borboletas frugívoras com mais espécies (Espeland et al. 2023). Devido à sua grande diversidade, não é considerada uma tribo indicadora de um determinado tipo florestal, pois inclui várias espécies que habitam diversos ambientes, desde florestas fechadas até florestas abertas e perturbadas. Em contraste, as borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) e as indicadoras de florestas abertas/perturbadas (Ageroniini, Callicorini e Biblidini), parecem representar bem seus respectivos ambientes. Um resultado interessante observado foi que as borboletas indicadoras de florestas fechadas tendem a apresentar uma abundância mais constante ao longo dos anos do que as borboletas de florestas abertas/perturbadas. Esse padrão está intimamente ligado à história natural desses organismos, frequentemente relacionada ao ambiente amostrado. Como as amostragens são realizadas predominantemente em áreas protegidas florestais, espera-se que as borboletas indicadoras de florestas fechadas/preservadas sejam mais representativas do que as de florestas abertas/perturbadas. Portanto, a representatividade de borboletas de florestas abertas na Amazônia, por exemplo, indica uma mudança local importante, como a queda de uma floresta de taboca, ou uma alteração climática intensa na região. Assim, as flutuações intensas de borboletas de florestas abertas ao longo dos anos refletem mudanças, enquanto as pequenas flutuações de borboletas indicadoras de florestas fechadas indicam estabilidade. Com base nessas observações, esses grupos se mostram ótimos modelos para a interpretação ambiental. No entanto, para avaliação de eventuais relações causais são necessárias pesquisas mais detalhadas focadas nas questões climáticas e ambientais, como alteração de uso da terra, degradação das florestas e deriva de agrotóxicos.  \n\nAs borboletas são amplamente utilizadas como indicadores de mudanças climáticas e ambientais em vários locais do mundo (@VanSwaay_2008; @Staats_2014; @Roy_2015; @VanSwaay_2015; @Sanderson_2021). Os monitoramentos com séries temporais mais longas vêm sendo realizados em países do norte global, especialmente na Europa. Esses monitoramentos, frequentemente, utilizam a abordagem de ciência cidadã, envolvendo a população local no registro de espécies de borboletas. Esses países têm uma diversidade de espécies muito menor que o Brasil, o que torna relativamente mais fácil a obtenção de dados no nível de espécies. O Programa Monitora utiliza o protocolo básico de borboletas (i.e., tribo como nível taxonômico) por ser mais simples de replicar, considerando que algumas áreas podem ter mais de 100 espécies de borboletas frugívoras. Além disso, essas áreas abrigam muitas espécies crípticas, tornando a identificação a nível específico muitas vezes bastante difícil ou mesmo inviável. Assim, ressaltamos a importância de iniciativas como o Programa Monitora para avaliar a eficácia do uso de tribos de borboletas em monitoramentos e diagnósticos ambientais. Conforme citado ao longo do relatório, é importante que os indivíduos amostrados nas UCs sejam fotografados para que especialistas possam identificá-los no nível de espécie ou morfoespécie, aumentando a assertividade e a confiabilidade dos resultados do monitoramento.  \n\n\n\n## Recomendações\n\n\n</br>\n\n\n::: callout-tip\n\n## Boas práticas para aprimorar o Programa\n\n</br>\n\n- Ampliar o número de unidades de conservação com aplicação do protocolo de borboletas frugívoras (Básico e Avançado) nos biomas Mata Atlântica e Cerrado, dado que esses biomas não chegaram a atingir a suficiência amostral em nenhum ano desde o início do Programa; \n\n- Na Região Climática Noroeste da Amazônia, implementar o protocolo de borboletas frugívoras em pelo menos três UCs (nove EAs), preferencialmente na ESEC Juami-Japurá, no PARNA do Pico da Neblina e na RESEX Auatí-Paraná;  \n\n- Ampliar o número de UCs com aplicação do protocolo de borboletas frugívoras nas regiões do médio e baixo rio Juruá, regiões carentes de amostragem de borboletas e de extrema importância biológica. É sugerida a implementação nas RESEX Médio e Baixo Juruá e na FLONA de Tefé;  \n\n- Ampliar o número de UCs com aplicação do protocolo de borboletas frugívoras na Região Climática Sudeste Amazônica de forma que seja alcançada a suficiência amostral de 18 EAs no ano. Sugere-se a implementação na FLONA de Carajás, na REBIO Nascentes da Serra do Cachimbo e na ESEC Iquê;  \n\n- Consolidar a implantação do protocolo de borboletas frugívoras naquelas unidades de conservação ainda não consolidadas, de forma que as UCs contem com pelo menos três estações amostrais implantadas e em operação; \n\n- Assegurar que durante as campanhas de campo as amostragens sejam realizadas de acordo com as diretrizes estabelecidas no protocolo amostral, em especial quanto ao respeito aos períodos de coleta definidos para cada região e em relação ao esforço amostral (número de dias de amostragens em cada EA); \n\n- Assegurar que os dados coletados sejam repassados à COMOB de acordo com as orientações definidas e em prazo razoável após a realização da campanha de campo;  \n\n- Informar novamente às UCs os períodos indicados para amostragem nas diferentes regiões, dado que ainda há várias unidades amostrando fora desse período. \n\n::: \n\n</br>\n\n## Referências\n\n","srcMarkdownNoYaml":"\n\n\n```{r library, echo=FALSE, message=FALSE, warning=FALSE}\n\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(descr)\nlibrary(RColorBrewer)\nlibrary(kableExtra)\nlibrary(knitr)\nlibrary(DT)\nlibrary(plotly)\nlibrary(ggthemes)\nlibrary(forcats)\nlibrary(leaflet)\nlibrary(sf)\nlibrary(rgdal)\nlibrary(treemapify)\nlibrary(reshape2)\nlibrary(randomcoloR)\nlibrary(gridExtra)\n```\n\n\n\n</br>\n\n**Isabela Freitas Oliveira**^1-2^, **Arlindo Gomes Filho**^3^ & **Onildo João Marini Filho**^1^\n\n\n1. Centro Nacional de Pesquisa e Conservação da Biodiversidade do Cerrado e Restauração Ecológica - CBC  \n*Instituto Chico Mendes de Conservação da Biodiversidade – ICMBio*  \n*Parque Nacional de Brasília*  \n*Via Epia, BR-450, Km 8,5*  \n*70635-800 Brasília, DF*  \n\n2. Coordenação de Monitoramento da Biodiversidade - COMOB  \n*Instituto Chico Mendes de Conservação da Biodiversidade – ICMBio*  \n*Complexo Administrativo EQSW 103/104 s/n*  \n*70670-350 Brasília, DF*  \n\n3. Centro Nacional de Pesquisa e Conservação de Aves Silvestres – CEMAVE\\\n*Instituto Chico Mendes de Conservação da Biodiversidade – ICMBio*\\\n*BR-230 Km 10*\\\n*Floresta Nacional da Restinga de Cabedelo*\\\n*58108-012 Cabedelo, PB*\n\n\n\n<p><font size=\"2\">\n\n<b>Como citar</b>: Oliveira, I. F.; Gomes-Filho, A. G.; Marini-Filho, O. J. Borboletas frugívoras. In:  Programa Nacional de Monitoramento da Biodiversidade – Programa Monitora, Subprograma Terrestre, componente Florestal. Relatório 2014-2022. Instituto Chico Mendes de Conservação da Biodiversidade, Brasília, 2024.\n\n</font></p>\n\n</br>\n\nOs insetos estão entre os organismos mais diversos e ameaçados do mundo (@Cardoso_2020; @Wagner_2020; @Janzen_2021). Entender como essa diversidade está distribuída no tempo e no espaço é crucial, visto que muitas espécies estão sendo extintas antes mesmo de serem descobertas pela ciência (@Eggleton_2020; @Liu_2022). O Brasil, um país extenso e megadiverso, conta com poucos projetos de longo prazo (mais de cinco anos) voltados a investigar padrões de diversidade locais e regionais,  especialmente em grupos de invertebrados como insetos (@Costa_2020). A maioria das pesquisas abrange escalas locais e curtos períodos de tempo (@Ribeiro_2010; @Graca_2016; @Beirao_2017; @Araujo_2020;  @Oliveira_2021; @Bellaver_2023; @Brito_Freire_2022), contribuindo significativamente para a compreensão de padrões de diversidade específicos, mas ressaltando a importância da implementação de projetos de longa duração em diversas áreas do país. \n\nNas últimas décadas, as borboletas frugívoras têm sido utilizadas como organismos modelo em monitoramentos de fauna em diversos países da região tropical (@Hughes_1998; @Molleman_2006; @DeVries_2012; @Aduse-Poku_2012; @Nyafwono_2014; @VanSwaay_2015; @Freitas_2024). A seleção deste grupo se deve à sua grande diversidade e significância ecológica, aliada à facilidade de amostragem por meio de armadilhas atrativas (@DeVries_Walla_2001; @Freitas_2014). O uso dessas armadilhas possibilita a amostragem simultânea em várias áreas, padronizando o esforço amostral e reduzindo a chance de viés nos dados. Além disso, as borboletas frugívoras são altamente sensíveis a alterações ambientais, o que as torna indicadoras valiosas de perturbações nos *habitat* (@Bonebrake_2010; @Oliveira_2018). Essas transformações ambientais em escala local ou regional podem influenciar nas variações no número de espécies e indivíduos das borboletas, bem como nas mudanças de composição da comunidade (@Oliveira_2023). Assim, devido ao seu curto ciclo de vida, estas mudanças na comunidade de borboletas são observadas relativamente rápido. Outros fatores determinantes para a escolha de borboletas frugívoras em estudos de monitoramento são a relativa facilidade na identificação e sua boa resolução taxônomica, quando comparadas a outros grupos de insetos. \n\nNeste capítulo, serão apresentados os resultados gerais da aplicação do protocolo básico de borboletas frugívoras em unidades de conservação (UCs) federais do Programa Monitora.  \n\n\n</br>\n\n## Métodos, implementação e validação protocolar\n\n</br>\n\n\n\nOs métodos de amostragem das borboletas frugívoras seguiram o Roteiro Metodológico do Programa Monitora (@Nobre_2014) e uma breve descrição geral dos procedimentos adotados em campo é apresentada no Capítulo 2 deste relatório.  \n\n</br>\n\n\n## Resultados\n\n</br>  \n\n\nO protocolo básico de amostragem de borboletas frugívoras, com identificação taxonômica no nível de tribo, foi aplicado em 51 UCs^[Neste relatório os dados da ESEC da Terra do Meio e da RESEX do Rio Iriri foram agrupados e tratados conjuntamente, como uma única unidade de análise (um bloco).], durante o período de 2014 a 2022, Dessas, 31 (62%) já estão consolidadas, isto é, com três ou mais EAs em operação. O protocolo avançado de borboletas frugívoras foi aplicado, em algum momento, em 31 UCs, embora parte dos dados ainda aguarde validação  (@fig-mapa-distribuicao-ucs-borboletas).  \n\n</br>\n\n\n```{r figura - distribuição ucs borboletas}\n#| label: fig-mapa-distribuicao-ucs-borboletas\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '95%'\n#| fig-cap: \"Distribuição das unidades de conservação com amostragem de borboletas frugívoras no Componente Florestal do Programa Monitora – 2014 a 2022.\"\n\nknitr::include_graphics(\"imagens/cap04/bo_mapa_distribuicao-ucs-borboletas.jpeg\")\n\n```\n\n\n</br>\n\n\nApós a correção, limpeza e verificação dos dados foram contabilizadas 85.386 borboletas frugívoras capturadas de 2014 a 2022. Desse total, 915 indivíduos (1%) foram registrados como ‘NA’ em sua tribo. Assim, 84.471 indivíduos foram identificados no nível de tribo pelos monitores. Na Amazônia, foram capturados 76.308 indivíduos, no Cerrado 6.378 e na Mata Atlântica 2.700 indivíduos.  \n\nO esforço amostral de borboletas frugívoras vem aumentando desde o início da implementação do Programa Monitora (exceto em 2020). Entre 2014 e 2019, o esforço amostral aumentou linearmente, tendo atingido um total de cerca de 17.152 armadilhas-dia em 2019. Em 2020, ano com maior impacto da pandemia de Covid-19, houve uma queda de 74% em relação ao ano anterior. Em 2021, o esforço amostral ainda não havia se recuperado totalmente, tendo voltado a crescer apenas em 2022, com um aumento de 15% em relação a 2019 (@fig-esforco-amostral).  \n\nDe maneira geral, observou-se que o número de indivíduos amostrados acompanhou o esforço amostral, havendo um aumento na abundância de borboletas com o aumento do esforço amostral. Porém, os últimos anos apresentaram uma abundância menor em relação ao esforço (Figura 4.2). Ao todo, foram capturados 85.386 indivíduos de borboletas, com um esforço amostral de 90.320 armadilhas/dia no período de 2014 a 2022 (@fig-esforco-amostral). \n\n\n</br>\n\n \n```{r grafico ucs_ativas_taxa_acumulado}\n#| label: fig-esforco-amostral\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '80%'\n#| fig-cap: \"Variação no número de registros de borboletas frugívoras e esforço amostral (número de armadilhas * número de dias de amostragem) acumulados por ano do Programa Monitora.\"\n\n\n# #Script: Isabela Freitas Oliveira\n# \n# library(dplyr)\n# \n# # Ler e limpar dados_borboletas\n# dados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas <- dados_borboletas %>%\n#   filter(ano != \"2023\", !is.na(tribo))\n# \n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_borboletas %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# \n# # Agregação para obter o esforço total por ano por uc\n# esforco_por_ano_uc <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_borboletas %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# \n# # Juntar as duas tabelas agregadas\n# tabela_final_esfoco <- left_join(esforco_por_ano, num_ind_por_ano, by = \"ano\")\n# #write.csv(tabela_final_esfoco, \"tabela_final_esfoco.csv\", row.names = FALSE)\n# \n# \n# #####Fazer o gráfico de Abundancia e esforço\n# # Definindo os dados para cada série separadamente\n# dados_esforco <- tabela_final_esfoco[, c(\"ano\", \"esforco\")]\n# names(dados_esforco)[2] <- \"valor\"\n# dados_esforco$tipo <- \"Esforço\"\n# \n# dados_abundancia <- tabela_final_esfoco[, c(\"ano\", \"num_ind\")]\n# names(dados_abundancia)[2] <- \"valor\"\n# dados_abundancia$tipo <- \"Abundância\"\n# \n# # Juntando os dados\n# dados_plot <- rbind(dados_esforco, dados_abundancia)\n# \n# # Criando o gráfico\n# grafico <- ggplot(data = dados_plot, aes(x = ano, y = valor, colour = tipo, linetype = tipo, shape = tipo)) +\n#   geom_line(size = 1.0) +\n#   geom_point(size = 3) +\n#   scale_colour_manual(values = c(\"Esforço\" = \"#35978f\", \"Abundância\" = \"#dfc27d\")) +\n#   scale_linetype_manual(values = c(\"Esforço\" = \"solid\", \"Abundância\" = \"solid\")) +\n#   scale_shape_manual(values = c(\"Esforço\" = 16, \"Abundância\" = 17)) +\n#   scale_y_continuous(\n#     \"Esforço Amostral e Abundância\",\n#     labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n#     limits = c(0, 25000)\n#   ) +\n#   scale_x_continuous(breaks = tabela_final_esfoco$ano) +\n#   labs(\n#     title = \"\",\n#     x = \" \",\n#     y = \"Esforço Amostral e Abundância\",\n#     colour = \"\",\n#     shape = \"\", # Isso ajuda a garantir que as formas correspondam na legenda\n#     linetype = \"\" # Isso ajuda a garantir que os tipos de linha correspondam na legenda\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     plot.title = element_text(hjust = -0.5, size = 18, lineheight = 1.5), # Ajuste o lineheight conforme necessário\n#     legend.position = c(0.10, 0.93), # Define a posição da legenda no canto superior esquerdo\n#     legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n#     legend.box.just = \"left\", # Alinha a legenda à esquerda\n#     legend.box.background = element_rect(fill = \"white\", color = \"white\"),\n#     axis.ticks.y = element_line(color = \"black\"),\n#     axis.text.y = element_text(margin = margin(r = 5)),\n#     axis.text.x = element_text(margin = margin(r = 12)),\n#     axis.title.y = element_text(size = 10, margin = margin(r = 10)),\n#     axis.title.x = element_text(size = 10, margin = margin(t = 10)),\n#     axis.text = element_text(size = 10),\n#     axis.line = element_line(colour = \"gray40\"),\n#     legend.text = element_text(size = 10),\n#     axis.line.x = element_blank(),\n#     panel.grid.minor = element_blank()\n#   )\n# \n# grafico\n# \n# ggsave(\"imagens/cap04/bo_esforco.JPG\",\n#        #plot = last_plot(),\n#        device =  \"jpeg\",\n#        scale=0.6,\n#        width = 300,\n#        height = 240,\n#        units = \"mm\",\n#        dpi = 120)\n\nknitr::include_graphics(\"imagens/cap04/bo_esforco.JPG\")\n\n```\n\n</br>\n\n\n### Regiões climáticas\n\n</br>\n\n\nOs períodos de amostragem propostos no protocolo do Programa Monitora para borboletas frugívoras na Amazônia seguem a mesma lógica aplicada para as regiões Central e Sudeste do Brasil, onde há alta abundância populacional e maior diversidade de espécies de borboletas frugívoras no final do período de chuvas intensas e no período seco (@Barlow_2007; @Checa_2009; @Ribeiro_2010). No entanto, há algumas exceções que precisam ser avaliadas caso a caso. Os períodos de amostragem para as regiões amazônicas apresentados a seguir baseiam-se na caracterização climática associada ao padrão de chuvas em toda a Amazônia (@Marengo_2001; @Sampaio_2021). Com base na identificação dos padrões de chuva em cada região, foram definidas seis regiões climáticas que englobam as unidades de conservação participantes do Programa Monitora (@fig-regioes-climaticas). As regiões climáticas são: Sudoeste, Central, Leste, Sudeste, Norte e Noroeste. Isso permite determinar o período mais adequado para a amostragem (@tbl-periodos-amostragem), considerando que o regime de chuvas é uma característica regional relevante para as borboletas frugívoras (@Barlow_2007; @Checa_2009). A definição deste período e sua manutenção ao longo do tempo possibilitam que as comparações interanuais sejam feitas considerando as populações mais abundantes daquele período. \n\n\n</br>\n\n```{r tabela periodos de amostragem amazonia}\n#| label: tbl-periodos-amostragem\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| tab-cap: \"Unidades de conservação por região climática da Amazônia e períodos indicados para amostragens de borboletas (final das chuvas). UCs com * situam-se em duas ou mais regiões climáticas (q. = quinzena).\"\n\ntabela_periodos_amostragem <- read.csv2(\"dados/tabelas/borboletas/tab_periodos_amostragem.csv\", fileEncoding='UTF-8', check.names=F)\n\ntab_periodos_amostragem <- kbl(tabela_periodos_amostragem,\n             booktabs = TRUE,\n             longtable = TRUE,\n             caption = \"Unidades de conservação por região climática da Amazônia e períodos indicados para amostragens de borboletas (final das chuvas). UCs com * situam-se em duas ou mais regiões climáticas (q. = quinzena).\",\n            col.names = c(\"Unidade de Conservação\", \"Região\", \"Período de Amostragem\"), align = c(\"l\", \"c\", \"c\")) %>%\n    #column_spec(3, italic = TRUE) %>%\nkable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\")\n\n\ntab_periodos_amostragem\n\n```\n\n\n</br>\n\n\nO número de UCs amostradas varia bastante entre as regiões (@fig-regioes-climaticas). Atualmente, nenhuma UC da região Noroeste da Amazônia participa do Programa Monitora aplicando o protocolo de borboletas frugívoras. Seria de extrema importância implementar esse protocolo em pelo menos três UCs nessa região: ESEC Juami-Japurá, PARNA do Pico da Neblina e RESEX Auatí-Paraná. Outra região climática em que se faz necessária a inclusão de mais UCs para o protocolo de borboletas frugívoras é a sudeste amazônica. Esta região é de extrema importância por abrigar uma rica diversidade de espécies e estar constantemente ameaçada pelo agronegócio e mineração. Assim sugerimos a inclusão da ESEC Iquê, REBIO Nascentes da Serra do Cachimbo, FLONA Jamanxim, PARNA Rio Novo e FLONA de Carajás. Além dessas regiões, é importante também a inclusão de UCs mais ao norte da região climática sudoeste. Assim, sugere-se a inclusão de UCs no médio e baixo rio Juruá, como as RESEX Médio Juruá, Baixo Juruá e FLONA de Tefé. \n\n\n</br>\n\n\n```{r figura - mapa das regiões climáticas}\n#| label: fig-regioes-climaticas\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '85%'\n#| fig-cap: \"Distribuição das UCs do Programa Monitora com amostragens de borboletas frugívoras nos polígonos das regiões climáticas da Amazônia definidos em função do regime de chuvas. Note as regiões com maiores lacunas de UCs participantes do Programa Monitora: Noroeste, Sudeste e porção norte da região Sudoeste. Cada UC está indicada pelo seu código no Cadastro Nacional de Unidades de Conservação - CNUC.\"\n\nknitr::include_graphics(\"imagens/cap04/bo_mapa_ucs.jpeg\")\n\n```\n\n\n</br>\n\n\nA região Sudoeste amazônica foi a que teve o maior número de UCs aplicando o protocolo de borboletas no período de 2014 a 2022, com 15 UCs amostradas: ESEC Rio Acre, FLONA do Jamari, PARNA da Serra da Cutia, PARNA da Serra do Divisor, PARNA de Pacaás Novos, PARNA Mapinguari, REBIO do Jaru, RESEX Arapixi, RESEX Barreiro das Antas, RESEX Chico Mendes, RESEX do Alto Tarauacá, RESEX do Cazumbá-Iracema, RESEX do Rio do Cautário, RESEX Rio Ouro Preto e RESEX Riozinho da Liberdade. Nesta região, as coletas foram realizadas em 48 EAs, contando com a colaboração de diversos monitores comunitários, beneficiários das Reservas Extrativistas (@fig-ucs-eas-combinado).  \n\n\nDe 2014 a 2022 as amostragens de borboletas frugívoras na região climática central amazônica foram realizadas em 37 EAs em 11 UCs (@fig-ucs-eas-combinado): ESEC da Terra do Meio, FLONA do Tapajós, PARNA da Amazônia, PARNA dos Campos Amazônicos, PARNA do Jaú, PARNA Nascentes do Lago Jari, REBIO do Uatumã, RESEX do Lago do Capanã Grande, RESEX Riozinho do Anfrísio, RESEX Tapajós-Arapiuns e RESEX Verde para Sempre.  \n\nNa região Leste amazônica, as amostragens se iniciaram em 2016. Até 2022, seis UCs e 17 EAs foram amostradas (@fig-ucs-eas-combinado): ESEC do Jari, PARNA do Cabo Orange, PARNA Montanhas do Tumucumaque, REBIO do Gurupi, RESEX Ipaú-Anilzinho e RESEX Renascer.  \n\nNa região Sudeste amazônica, as amostragens de borboletas frugívoras também se iniciaram em 2016 e ocorreram em seis EAs, contemplando apenas duas UCs: PARNA do Juruena e REBIO do Tapirapé.  \n\nFinalmente, na região Norte da Amazônia, a aplicação do protocolo de borboletas frugívoras se iniciou em 2017, com cinco UCs e nove EAs amostradas até 2022 (@fig-ucs-eas-combinado): ESEC de Maracá, ESEC de Niquiá, PARNA da Serra da Mocidade, PARNA do Monte Roraima e PARNA do Viruá. \n\n\n</br>\n\n\n```{r numero-ucs-amostradas}\n#| label: fig-numero-ucs-amostradas\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '60%'\n\n\n\n# library(tidyverse)\n# library(ggplot2)\n# library(stringr)\n\n# # Carregar os dados\n# dados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# \n# # Converter o ano para fator\n# dados_borboletas$ano <- factor(dados_borboletas$ano)\n# \n# # Filtrar os dados para incluir apenas regiões da Amazônia\n# dados_amazonia <- dados_borboletas %>%\n#   filter(regiao %in% c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n# \n# # Preparar os dados para o gráfico\n# contagem_uc_amazonia <- dados_amazonia %>%\n#   group_by(ano, regiao) %>%\n#   summarise(num_uc = n_distinct(uc))\n# \n# # Definir a ordem dos níveis da variável regiao\n# contagem_uc_amazonia$regiao <- factor(contagem_uc_amazonia$regiao, levels = c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n# \n# \n# # Cores para cada região da Amazônia\n# cores_amazonia <- c(\n#   \"#003c30\",\n#   \"#01665e\",\n#   \"#35978f\",\n#   \"#80cdc1\",\n#   \"#c7eae5\"\n# )\n# \n# # Gráfico\n# grafico_uc_amazonia <- ggplot(contagem_uc_amazonia, aes(x = ano, y = num_uc, fill = regiao)) +\n#   geom_bar(stat = \"identity\", position = \"dodge\") +\n#   scale_fill_manual(values = cores_amazonia) + # Definindo as cores manualmente\n#   labs(\n#     x = \"\",\n#     y = \"\",\n#     fill = \"\",\n#     title = \"\"\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     plot.title = element_text(size = 26, hjust = 0, lineheight = 1.3),\n#     legend.position = c(0, 1.15), # Define a posição da legenda no canto superior esquerdo\n#     legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n#     legend.box.just = \"left\", # Alinha a legenda à esquerda\n#     legend.title = element_text(size = 20),\n#     legend.text = element_text(size = 20),\n#     axis.title.x = element_text(size = 20), \n#     axis.text.x = element_text(size = 18),  \n#     #axis.line = element_line(colour = \"gray40\"),\n#     axis.line.x = element_blank(),\n#     axis.text.y = element_blank(),\n#     panel.grid.minor = element_blank() \n#   ) \n# \n# # Exibir o gráfico\n# print(grafico_uc_amazonia)\n# \n# ##f1\n# grafico_uc_amazonia <- ggplot(contagem_uc_amazonia, aes(x = ano, y = num_uc, fill = regiao)) +\n#   geom_bar(stat = \"identity\", position = \"dodge\") +\n#   geom_text(aes(label = num_uc), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) + # Adicionando os valores\n#   scale_fill_manual(values = cores_amazonia) + # Definindo as cores manualmente\n#   labs(\n#     x = \"\",\n#     y = \"\",\n#     fill = \"\",\n#     title = \"Número de UCs\"\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     plot.title = element_text(size = 14, hjust = 0.3, lineheight = 1.3),\n#     legend.position = c(0, 1.15), # Define a posição da legenda no canto superior esquerdo\n#     legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n#     legend.box.just = \"left\", # Alinha a legenda à esquerda\n#     legend.title = element_text(size = 10),\n#     legend.text = element_text(size = 8),\n#     axis.title.x = element_text(size = 12), \n#     axis.text.x = element_text(size = 10),  \n#     #axis.line = element_line(colour = \"gray40\"),\n#     axis.line.x = element_blank(),\n#     axis.text.y = element_blank(),\n#     panel.grid.major = element_blank(),\n#     panel.grid.minor = element_blank() \n#   ) \n# \n# # Exibir o gráfico\n# print(grafico_uc_amazonia)\n\n\n# Salvar a imagem usando ggsave()\n\n# ggsave(\n#   filename = \"grafico_numeros_de_uc_amazonia_f1.png\",\n#   plot = grafico_uc_amazonia,\n#   device = \"png\",\n#   path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\",\n#   dpi = 300,\n#   width = 12,\n#   height = 8,\n#   units = \"in\"\n# )\n\n\n```\n\n\n</br>\n\n```{r numero-eas-amostradas}\n#| label: fig-numero-eas-amostradas\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '60%'\n\n\n# library(tidyverse)\n# library(ggplot2)\n# library(stringr)\n\n# # Carregar os dados\n# dados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# \n# # Converter o ano para fator\n# dados_borboletas$ano <- factor(dados_borboletas$ano)\n# \n# # Filtrar os dados para incluir apenas regiões da Amazônia\n# dados_amazonia <- dados_borboletas %>%\n#   filter(regiao %in% c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n# \n# # Preparar os dados para o gráfico\n# contagem_ea_amazonia <- dados_amazonia %>%\n#   group_by(ano, regiao) %>%\n#   summarise(num_ea = n_distinct(uc_ea))\n# \n# # Definir a ordem dos níveis da variável regiao\n# contagem_ea_amazonia$regiao <- factor(contagem_ea_amazonia$regiao, levels = c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n# \n# \n# # Cores para cada região da Amazônia\n# cores_amazonia <- c(\n#   \"#543005\",\n#   \"#8c510a\",\n#   \"#bf812d\",\n#   \"#dfc27d\",\n#   \"#f6e8c3\"\n# )\n# \n# \n# # Gráfico\n# grafico_ea_amazonia<-ggplot(contagem_ea_amazonia, aes(x = ano, y = num_ea, fill = regiao)) +\n#   geom_bar(stat = \"identity\", position = \"dodge\") +\n#   geom_text(aes(label = num_ea), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) + # Adicionando os valores\n#   scale_fill_manual(values = cores_amazonia) + # Definindo as cores manualmente\n#   labs(\n#     x = \"\",\n#     y = \"\",\n#     fill = \"\",\n#     title = \"Número de EAs\"\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     plot.title = element_text(size = 14, hjust = 0.3, lineheight = 1.3),\n#     legend.position = c(0, 1.15), # Define a posição da legenda no canto superior esquerdo\n#     legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n#     legend.box.just = \"left\", # Alinha a legenda à esquerda\n#     legend.title = element_text(size = 10),\n#     legend.text = element_text(size = 8),\n#     axis.title.x = element_text(size = 12), \n#     axis.text.x = element_text(size = 10),  \n#     #axis.line = element_line(colour = \"gray40\"),\n#     axis.line.x = element_blank(),\n#     axis.text.y = element_blank(),\n#     panel.grid.major = element_blank(),\n#     panel.grid.minor = element_blank() \n#   ) \n# \n# # Exibir o gráfico\n# print(grafico_ea_amazonia)\n\n\n# Salvar a imagem usando ggsave()\n\n# ggsave(\n#   filename = \"grafico_numeros_de_ea_amazonia_f1.png\",\n#   plot = grafico_ea_amazonia,\n#   device = \"png\",\n#   path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\",\n#   dpi = 300,\n#   width = 12,\n#   height = 8,\n#   units = \"in\"\n# )\n\n```\n</br>\n\n```{r ucs-eas-amostradas}\n#| label: fig-ucs-eas-amostradas\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Número de unidades de conservação (UCs) e estações amostrais (EAs) amostradas por região climática na Amazônica por ano. A região climática Noroeste não teve UCs com amostragens no período de 2014-2022.\"\n\n\n\n# library(gridExtra)\n# combinado <- grid.arrange(grafico_uc_amazonia, grafico_ea_amazonia, ncol=1)\n\n# ggsave(\n#   filename = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/ucs_eas_combinados.png\",\n#   plot = combinado,\n#   device = \"png\",\n#   dpi = 300,\n#   width = 14,\n#   height = 12,\n#   units = \"in\"\n# )\n\n``` \n\n```{r grafico ucs-eas-combinado}\n#| label: fig-ucs-eas-combinado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Número de UCs e EAs amostradas por região climática na Amazônia por ano. A região climática Noroeste não teve UCs com amostragens no período de 2014-2022.\"\n\nknitr::include_graphics(\"imagens/cap04/bo-ucs-eas-combinados.png\")\n\n```\n\n\n\n</br>\n\n\nPara maior confiabilidade das informações apresentadas neste relatório, foi estabelecido um esforço amostral mínimo por ano para os biomas. Para cada região Amazônica foram consideradas amostragens suficientes aquelas com esforço amostral de pelo menos 1.728 armadilhas*dia, equivalendo a nove EAs amostradas no ano, considerando duas campanhas amostrais por EA/ano.   \n\n\n</br>\n\n\n## Assinatura das tribos de borboletas ao longo dos anos  \n\n</br>\n\nO Programa Monitora convencionou chamar a distribuição acumulada de frequências relativas da abundância de espécies identificadas ao nível de tribos de “assinatura de tribos” (ver relatórios do Programa Monitora 2014-2016 e 2014-2018). Essa assinatura de tribos de borboletas é uma forma gráfica de representar as proporções das tribos de borboletas de uma determinada comunidade presente naquele ano ou local. A adoção da assinatura no nível de tribo levou em consideração que este é o nível taxonômico que permite fazer generalizações sobre as tendências observadas na comunidade de borboletas frugívoras (@Freitas_2024). Ela se torna efetiva quando comparada em longo prazo ou entre locais. Com a assinatura de borboletas, detectam-se variações nas tribos mais representativas daquela comunidade amostrada, sendo possível assim, realizar diagnósticos ambientais mais informativos para aquela região ou ano.  \n\nA abordagem que vem sendo utilizada no Programa Monitora considera a existência de diferentes níveis de associação entre as tribos de borboletas frugívoras e a estrutura das formações florestais, variando das florestas mais alteradas ou abertas até florestas mais adensadas e fechadas. O protocolo adotado pelo grupo de especialistas em borboletas consultado pelo ICMBio considerou que as tribos registradas estão relacionadas aos seguintes tipos de ambientes: \n\n- Florestas fechadas/preservadas: Brassolini, Haeterini e Morphini. Em situações de perturbação da floresta, a abundância relativa dessas tribos diminui consistentemente; \n\n- Florestas abertas/perturbadas (com abertura significativa no dossel): Ageroniini, Callicorini e Biblidini. As espécies dessas tribos são favorecidas por alterações na estrutura da floresta e suas abundâncias aumentam consistentemente com perturbações locais. \n\nAs tribos Preponini, Melanitini, Anaeini, Epicaliini, Epiphilini, Coeini e Satyrini não apresentam associação clara com ambientes florestais ou não demonstram tendência definida. A abundância dessas tribos pode aumentar ou diminuir em resposta a perturbações da floresta, como abertura de clareiras ou eventuais alterações no dossel. \n\nEmbora ainda pouco disseminada em trabalhos acadêmicos, a assinatura de tribos de borboletas é uma métrica versátil e biologicamente fundamentada que tem um papel importante no monitoramento de fauna. Esta é uma maneira viável de analisar e apresentar dados de um grupo com grande riqueza de espécies de uma região megadiversa, amostrado em uma escala tão ampla como a região Amazônica, ou pequenas como uma determinada UC. \n\n\n```{r preparação gráficos assinaturas2}\n#| label: prep-graficos-assinaturas2\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n# \n# # Gráficos de dados Borboletas - Protocolo básico - Amazônia regional - individual\n# ### Tribos com asterisco estão ausentes nos dados\n# ## Script: Isabela Freitas Oliveira\n# \n# library(ggplot2)\n# library(dplyr)\n# library(scales)\n# library(tools)\n# \n# # Função auxiliar para ajustar o título\n# ajustar_titulo <- function(titulo) {\n#   palavras <- strsplit(titulo, \" \")[[1]]\n#   \n#   # Palavras que necessitam de correção de acentuação\n#   correcoes <- list(\n#     \"leste\" = \"Região climática Leste Amazônica\", \"sudoeste\" = \"Região climática Sudoeste Amazônica\", \"central\" = \"Região climática Central Amazônica\",\n#     \"norte\" = \"Região climática Norte Amazônica\", \"sudeste\" = \"Região climática Sudeste Amazônica\"\n#   )\n#   \n#   palavras <- sapply(palavras, function(palavra) {\n#     # Aplicar regras específicas para certas palavras\n#     if (tolower(palavra) %in% c(\"esec\", \"flona\", \"rebio\", \"resex\", \"parna\")) {\n#       return(toupper(palavra))\n#     } else if (tolower(palavra) %in% c(\"de\", \"da\", \"do\", \"dos\", \"das\")) {\n#       return(tolower(palavra))\n#     } else {\n#       # Corrigir acentuação, se necessário\n#       palavra_corrigida <- tolower(palavra)\n#       if (palavra_corrigida %in% names(correcoes)) {\n#         return(correcoes[[palavra_corrigida]])\n#       } else {\n#         return(tools::toTitleCase(palavra))\n#       }\n#     }\n#   })\n#   \n#   return(paste(palavras, collapse = \" \"))\n# }\n# \n# \n# # Função para gerar o gráfico para cada região\n# gerar_grafico_por_regiao <- function(dados, nome_regiao) {\n#   # Preparar o título\n#   titulo <- ajustar_titulo(nome_regiao)  # Utilizando a função de ajuste de título aqui\n#   \n#   # Filtrar os dados para a região atual\n#   dados_regiao <- subset(dados, regiao == nome_regiao & bioma == \"Amazonia\")\n#   dados_regiao <- dados_regiao[!is.na(dados_regiao$tribo), ] #tirar os dados 'NA' que estão na tribo\n#   \n#   # Calcular o total de indivíduos por ano para a região atual\n#   total_individuos_por_ano <- dados_regiao %>%\n#     group_by(ano) %>%\n#     summarise(total = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Agregar dados por ano e tribo\n#   dados_agregados <- dados_regiao %>%\n#     group_by(ano, tribo) %>%\n#     summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Calcular totais e proporções\n#   total_por_ano <- dados_agregados %>%\n#     group_by(ano) %>%\n#     summarize(total = sum(frequencia), .groups = 'drop')\n#   \n#   dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n#     mutate(proporcao = frequencia / total * 100)\n#   \n#   # Ajustar proporções\n#   dados_agregados <- dados_agregados %>%\n#     group_by(ano) %>%\n#     mutate(diferenca = 100 - sum(proporcao),\n#            proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n#     ungroup() %>%\n#     dplyr::select(-diferenca, -proporcao) %>%\n#     rename(proporcao = proporcao_ajustada)\n#   \n#   # Ordem específica das tribos\n#   ordem_tribos <- c(\n#     \"Brassolini\", \"Morphini\", \"Haeterini\", \n#     \"Preponini\", \"Melanitini\", \"Anaeini\", \n#     \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n#     \"Satyrini\",\n#     \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n#   )\n#   \n#   # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n#   cores_tribos <- c(\n#     \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n#     \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n#     \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n#     \"Satyrini\" = \"gray95\",\n#     \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n#   )\n#   \n#   # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n#   cores_tribos <- cores_tribos[ordem_tribos]\n#   \n#   # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n#   dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n#   \n#   # Criar um data frame com a frequência agregada por tribo\n#   frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n#   \n#   # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n#   adicionar_asterisco <- function(nome_tribo) {\n#     # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n#     if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n#       return(paste0(nome_tribo, \"*\"))\n#     } else {\n#       return(nome_tribo)\n#     }\n#   }\n#   \n#   # Aplicar a função a cada tribo para criar o vetor de rótulos\n#   labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n#   \n#   # Criar um data frame com o número único de 'uc_ea' por ano\n#   numero_ea_por_ano <- dados_regiao %>%\n#     distinct(ano, uc_ea) %>%\n#     group_by(ano) %>%\n#     summarize(num_ea = n_distinct(uc_ea))\n#   \n#   # Construir o gráfico\n#   gg <- ggplot() +\n#     geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n#     geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n#     geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n#     scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n#     scale_x_discrete(expand = c(0, 0)) +\n#     scale_fill_manual(values = cores_tribos, \n#                       labels = labels_tribos,\n#                       breaks = ordem_tribos) +\n#     labs(title = titulo,\n#          x = \"\",\n#          y = \"Frequência relativa de ocorrência (%)\",\n#          fill = \"Tribo\") +\n#     theme_minimal() +\n#     theme(legend.position = \"right\", \n#           legend.title = element_text(size = 12), \n#           legend.text = element_text(size = 10), \n#           plot.title = element_text(hjust = 0.5, size = 16), \n#           plot.subtitle = element_text(hjust = 0.5, size = 14),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           axis.text = element_text(size = 10), \n#           axis.title = element_text(size = 10),\n#           axis.line = element_line(colour = \"gray40\"),\n#           axis.line.x = element_blank()) +\n#     guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n#   \n#   # Exibir o gráfico\n#   print(gg)\n# }\n# \n# # Carregar e preparar os dados\n# resultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\n# resultado_final$ano <- factor(resultado_final$ano)\n# resultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n\n\n\n```\n\n\n\n\n### Amazônia \n\n\n</br>\n\n\nNa região climática Sudoeste amazônica foram amostradas 36.918 borboletas frugívoras, sendo 354 delas não identificadas e desconsideradas nas análises. Assim, 36.564 indivíduos foram identificados em nível de tribo, sendo as mais abundantes: Satyrini (48%), Brassolini (11%), Epicaliini (9%) e Ageroniiini (9%). A região Sudoeste apresentou a maior proporção de tribos indicadoras de florestas abertas/perturbadas dentre as regiões da Amazônia. No caso, a tribo Ageroniini a foi responsável por esse padrão, especialmente em 2019. É importante salientar que, apesar da tribo Ageroniini ser classificada como uma tribo indicadora de florestas abertas/perturbadas, algumas espécies do gênero *Hamadryas* (e.g., *Hamadryas alicia*, *H. belladonna*, *H. velutina*) e do gênero Batesia estão geralmente presentes em florestas maduras e bem conservadas, como ocorre na RESEX Arapixi e UCs da região. Dessa forma, torna-se ainda mais necessária a aplicação do protocolo avançado nas UCs para que, com as fotografias dos indivíduos, seja possível separar espécies nas tribos que utilizam regularmente florestas abertas/perturbadas, como por exemplo *Hamadryas februa*, *H. feronia*, *H. amphinome*, *H. arinome* e *Ectima iona*, das espécies anteriormente citadas, habitantes de florestas fechadas/preservadas (@Jenkins_1983). \n\nSeguindo os padrões de diversidade da fauna e flora amazônicas (@Ribas_2019; @Luize_2024), a região Sudoeste apresentou os maiores valores de números de indivíduos por esforço amostral. Apesar de tratar-se de contagem de indivíduos, é de se esperar que a riqueza e diversidade de espécies acompanhem este padrão (@DeVries_2016). O esforço realizado de 2014 a 2016 nesta região foi inferior ao considerado adequado para caracterizar a abundância relativa de tribos (i.e., menor que 18 campanhas = 1.728 armadilhas-dia), sendo a suficiência amostral atingida somente a partir de 2017 (@fig-regiao-climatica-sudoeste-amazonica). \n\n</br>\n\n```{r grafico regiao-climatica-sudoeste-amazonica}\n#| label: fig-regiao-climatica-sudoeste-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Sudoeste. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"sudoeste\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# # Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_regional_sudoeste.jpg\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_sudoeste.png\")\n\n```\n\n\n\n</br>\n\nNa região climática Central amazônica 23.088 borboletas frugívoras foram amostradas de 2014 a 2022. Visto que 174 não foram identificadas em nível de tribo, 22.914 indivíduos foram considerados nas análises. Desses, 41% pertencem à tribo Satyrini, a mais abundante da região, seguidos por 16% de Brassolini e 10% de Coeini. Os anos 2014 e 2020 tiveram um esforço amostral inferior àquele definido como mínimo aceitável para a região (i.e., menor que 18 campanhas = 1.728 armadilhas-dia). Assim, a interpretação dos resultados nesses anos deve ser feita com cautela.  \n\nAs tribos Satyrini e Brassolini foram predominantes em praticamente todos os anos amostrados na região climática central amazônica. No entanto, em 2017 houve um aumento no número de Coeini, que foi a segunda tribo mais abundante (@fig-regiao-climatica-central-amazonica). As tribos indicadoras de áreas abertas/perturbadas tiveram baixíssima representação (@fig-regiao-climatica-central-amazonica). \n\n\n\n</br>\n\n\n```{r grafico regiao-climatica-central-amazonica}\n#| label: fig-regiao-climatica-central-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Central. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"central\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# \n# #Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_regional_central.jpg\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_central.png\")\n\n```\n\n</br>\n\n\n\nNa região climática Leste amazônica foram amostradas 7.969 borboletas frugívoras, com 67 indivíduos não identificados em nível de tribo. Assim, dos 7.902 indivíduos de borboletas frugívoras identificados na região leste da Amazônia, 46% corresponderam à tribo Satyrini, a mais representativa, seguida por Brassolini (15%) e Morphini (11%). Os anos 2016, 2017 e 2020 tiveram amostragens abaixo do esforço adequado para representar a região (i.e., menor que 18 campanhas = 1.728 armadilhas-dia) (@fig-regiao-climatica-leste-amazonica).  Apesar disso, o padrão da proporção da abundância das tribos foi bastante estável, com pouca variação entre anos.\n\n\n\n```{r grafico regiao-climatica-leste-amazonica}\n#| label: fig-regiao-climatica-leste-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Leste. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"leste\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# # Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_regional_leste.png\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_leste.png\")\n\n```\n\n</br>\n\n\n\nNa região climática Sudeste amazônica a amostragem não atingiu o valor mínimo do esforço amostral estabelecido para as análises. Esta é uma região com somente duas UCs, PARNA do Juruena e REBIO do Tapirapé, aplicando o protocolo de borboletas frugívoras e se faz necessário o aumento no número de UCs participantes.  \n\n\nAo todo, foram amostrados 5.042 indivíduos de borboletas frugívoras na região sudeste amazônica. Desses, 48 indivíduos foram descartados na análise por não terem sido identificados. Assim, 4.994 borboletas frugívoras foram identificadas em nível de tribo. Dentre as mais abundantes destacaram-se Satyrini (58%), Epicaliini (11%) e Morphini (11%). O padrão da proporção das tribos ao longo dos anos variou pouco de 2017 a 2022 (@fig-regiao-climatica-sudeste-amazonica), provavelmente pelo baixo número de UCs, visto que amostragens em diferentes UCs tendem a capturar diferentes padrões, mesmo numa mesma região (e.g., região Sudoeste).  \n\n\n</br>\n\n```{r grafico regiao-climatica-sudeste-amazonica}\n#| label: fig-regiao-climatica-sudeste-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Sudeste. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"sudeste\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# # Salvar a imagem usando ggsave()\n# ggsave(filename = \"regional_sudeste.png\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_sudeste.png\")\n\n```\n\n</br>\n\n\nNa região climática Norte amazônica, o esforço mínimo para a representação da comunidade de borboletas frugívoras (i.e., 18 campanhas = 1.728 armadilhas-dia) não foi atingido em nenhum ano. Uma das razões é a complexidade logística para a amostragem em algumas UCs do norte da Amazônia. Por exemplo, as amostragens no PARNA do Monte Roraima precisam ser feitas na forma de expedições, devido às dificuldades de acesso através da Terra indígena Raposa Serra do Sol, levando dias por terra ou com um alto custo utilizando aviões monomotores. Outro fator que influenciou a diminuição do número de EAs amostradas foi a invasão da ESEC Maracá por garimpeiros em 2019, com ameaças e roubo de equipamentos da UC. A ESEC Maracá era a única UC consolidada nao região Norte. Assim, é necessário se reestabelecer a amostragem na ESEC Maracá e aumentar o número de EAs implementadas no PARNA da Serra da Mocidade, na ESEC de Niquiá e no PARNA do Viruá. \n\nAo todo, foram amostradas 3.303 borboletas frugívoras nessa região. Dessas, 190 não foram identificadas em nível de tribo, tendo sido descartadas, de forma que 3.113 indivíduos identificados foram considerados na análise. Dentre as tribos mais abundantes destacam-se Satyrini, Brassolini e Preponini, com 55%, 15% e 6%, respectivamente. \n\nO padrão da assinatura das tribos variou de 2017 a 2019, tendo se estabilizado de 2020 a 2022. Porém, a abundância de borboletas foi bastante influenciada pelo número insuficiente de estações amostrais, o que limita potenciais conclusões  (@fig-regiao-climatica-norte-amazonica). \n\n</br>\n\n```{r grafico regiao-climatica-norte-amazonica}\n#| label: fig-regiao-climatica-norte-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática Norte. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de campanhas realizadas naquele ano. O asterisco indica tribo ausente na amostragem.\"\n\n# # Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\n# regiao_interesse <- \"norte\"\n# \n# # Gerar o gráfico para a região de interesse\n# gerar_grafico_por_regiao(resultado_final, regiao_interesse)\n# \n# # Salvar a imagem usando ggsave()\n# ggsave(filename = \"regional_norte.png\",  # Escolha um nome adequado para o arquivo\n#        #plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_regional_norte.png\")\n\n```\n\n</br>\n\n\n### Cerrado e Mata Atlântica  \n\n</br>\n\nAté o momento, poucas UCs dos biomas Cerrado e Mata Atlântica aplicaram o protocolo de amostragem de borboletas frugívoras. Dessa forma, os resultados apresentados aqui requerem cautela na interpretação. \n\nNo Cerrado foram amostrados 6.378 indivíduos (67 deles não identificados em nível de tribo), sendo 6.311 considerados nas análises. As tribos mais representativas no Cerrado foram Satyrini, Ageroniini e Biblidini com 40%, 14% e 8%, respectivamente. É importante ressaltar que as amostragens no Cerrado foram feitas em ambientes mésicos, ou seja, em ambientes florestais úmidos imersos no ambiente savânico. Estes ambientes podem ser capões de mata ou matas ripárias. Dessa forma, é de se esperar que tribos indicadoras tanto de florestas fechadas quanto de florestas abertas sejam representadas.\n\nOs padrões anuais apresentaram grandes variações na proporção das tribos indicadoras, especialmente de Brassolini, Morphini, Biblidini e Ageroniini (@fig-regiao-cerrado). \n\n \n\n</br>\n\n```{r assinatura cerrado}\n#| label: fig-regiao-cerrado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 no Cerrado. Não houve amostragem em 2020. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de estações amostrais inspecionadas naquele ano. O asterisco indica tribo ausente na amostragem.\"\n\n# Gráficos de dados Borboletas - Protocolo básico - Cerrado -\n### Tribos com asterisco estão ausentes nos dados\n## Script: Isabela Freitas Oliveira\n\n# library(ggplot2)\n# library(dplyr)\n# library(scales)\n# library(tools)\n# \n# \n# # Função auxiliar para ajustar o título\n# ajustar_titulo <- function(titulo) {\n#   palavras <- strsplit(titulo, \" \")[[1]]\n#   \n#   # Palavras que necessitam de correção de acentuação\n#   #correcoes <- list(\n#    # \"Cerrado\" = \"Cerrado\")\n#   \n# }\n# \n# # Função para gerar o gráfico para cada unidade de conservação\n# gerar_grafico_por_bioma <- function(dados, nome_bioma) {\n#   # Preparar o título com as novas regras\n#   titulo <- gsub(\"_\", \" \", nome_bioma)\n#   titulo <- ajustar_titulo(titulo)  # Utilizando a função de ajuste de título aqui\n#   \n#   # Filtrar os dados para a unidade de conservação atual\n#   dados_bioma <- subset(dados, bioma == nome_bioma & bioma == \"Cerrado\")\n#   dados_bioma <- dados_bioma[!is.na(dados_bioma$tribo), ] #tirar os dados 'NA' que estão na tribo\n#   \n#   # Calcular o total de indivíduos por ano para a região atual\n#   total_individuos_por_ano <- dados_bioma %>%\n#     group_by(ano) %>%\n#     summarise(total = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Agregar dados por ano e tribo\n#   dados_agregados <- dados_bioma %>%\n#     group_by(ano, tribo) %>%\n#     summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Calcular totais e proporções\n#   total_por_ano <- dados_agregados %>%\n#     group_by(ano) %>%\n#     summarize(total = sum(frequencia), .groups = 'drop')\n#   \n#   dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n#     mutate(proporcao = frequencia / total * 100)\n#   \n#   # Ajustar proporções\n#   dados_agregados <- dados_agregados %>%\n#     group_by(ano) %>%\n#     mutate(diferenca = 100 - sum(proporcao),\n#            proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n#     ungroup() %>%\n#     dplyr::select(-diferenca, -proporcao) %>%\n#     rename(proporcao = proporcao_ajustada)\n#   \n#   # Ordem específica das tribos\n#   ordem_tribos <- c(\n#     \"Brassolini\", \"Morphini\", \"Haeterini\", \n#     \"Preponini\", \"Melanitini\", \"Anaeini\", \n#     \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n#     \"Satyrini\",\n#     \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n#   )\n#   \n#   # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n#   cores_tribos <- c(\n#     \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n#     \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n#     \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n#     \"Satyrini\" = \"gray95\",\n#     \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n#   )\n#   \n#   # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n#   cores_tribos <- cores_tribos[ordem_tribos]\n#   \n#   # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n#   dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n#   \n#   # Criar um data frame com a frequência agregada por tribo\n#   frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n#   \n#   # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n#   adicionar_asterisco <- function(nome_tribo) {\n#     # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n#     if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n#       return(paste0(nome_tribo, \"*\"))\n#     } else {\n#       return(nome_tribo)\n#     }\n#   }\n#   \n#   # Aplicar a função a cada tribo para criar o vetor de rótulos\n#   labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n#   \n#   # Criar um data frame com o número único de 'uc_ea' por ano\n#   numero_ea_por_ano <- dados_bioma %>%\n#     distinct(ano, uc_ea) %>%\n#     group_by(ano) %>%\n#     summarize(num_ea = n_distinct(uc_ea))\n#   \n#   # Construir o gráfico\n#   gg <- ggplot() +\n#     geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n#     geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n#     geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n#     scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n#     scale_x_discrete(expand = c(0, 0)) +\n#     scale_fill_manual(values = cores_tribos, \n#                       labels = labels_tribos,\n#                       breaks = ordem_tribos) +\n#     labs(title = titulo,\n#          x = \" \",\n#          y = \"Frequência relativa de ocorrência (%)\",\n#          fill = \"Tribo\") +\n#     theme_minimal() +\n#     theme(legend.position = \"right\", \n#           legend.title = element_text(size = 12), \n#           legend.text = element_text(size = 10), \n#           plot.title = element_text(hjust = 0.5, size = 16), \n#           plot.subtitle = element_text(hjust = 0.5, size = 14),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           axis.text = element_text(size = 10), \n#           axis.title = element_text(size = 10),\n#           axis.line = element_line(colour = \"gray40\"),\n#           axis.line.x = element_blank()) +\n#     guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n#   \n#   \n#   # Exibir o gráfico\n#   print(gg)\n#   \n#   # Retorna o gráfico para que possa ser salvo externamente\n#   return(gg)\n#   \n# }\n# \n# # Carregar e preparar os dados\n# resultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\n# resultado_final$ano <- factor(resultado_final$ano)\n# resultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n# \n# # Obter todas as UC's do bioma Cerrado\n# biomas <- unique(resultado_final$bioma[resultado_final$bioma == \"Cerrado\"])\n# \n# # Aplicar a função\n# graficos <- lapply(biomas, function(bioma) gerar_grafico_por_bioma(resultado_final, bioma))\n\n# Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_cerrado.png\",  # Escolha um nome adequado para o arquivo\n#        plot = graficos[[1]],  # Especifique qual gráfico da lista deseja salvar\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height = 8, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo_cerrado.png\")\n\n\n```\n\n</br>\n\nNa Mata Atlântica 2.700 borboletas frugívoras foram amostradas. Dessas, 16 não foram identificadaos no nível de tribo, de modo que 2.684 indivíduos amostrados foram considerados na análise. A tribo Satyrini foi a mais representativa, com 27% dos indivíduos, seguida por Anaeini, com 24% e Epicaliini, com 14%. \n\nHouve uma grande variação das tribos entre anos, especialmente de Brassolini, Anaeini, Coeini e Satyrini (@fig-regiao-mata-atlantica). Verificou-se também grande variação no número de indivíduos, mesmo quando com um mesmo esforço amostral, indicando haver de fato diferenças na abundância entre regiões no bioma. O padrão das tribos do bioma reflete, principalmente, o padrão registrado no Parque Nacional do Iguaçu. Assim, é de extrema importância que as amostragens sejam feitas continuamente nas mesmas UCs e que, com a adesão de novas unidades de conservação da região ao Programa de monitoramento, as amostragens nas UCs com protocolo de borboletas frugívoras já implementado sejam mantidas. \n\n\n\n</br>\n\n\n```{r assinatura mata atlântica}\n#| label: fig-regiao-mata-atlantica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2015 a 2022 na Mata Atlântica. Não houve amostragem em 2020. Os números sobre as barras indicam indivíduos registrados e os valores entre parênteses sob as barras se referem ao número de estações amostrais inspecionadas naquele ano. O asterisco indica tribo ausente na amostragem.\"\n\n\n##### Gráficos de dados Borboletas - Protocolo básico - Mata Atlantica\n### Tribos com asterisco estão ausentes no gráfico\n## Script: Isabela Freitas Oliveira\n\n# # Carregar bibliotecas\n# library(ggplot2)\n# library(dplyr)\n# library(scales)\n# library(tools)\n# \n# \n# \n# # Função auxiliar para ajustar o título\n# ajustar_titulo <- function(titulo) {\n#   palavras <- strsplit(titulo, \" \")[[1]]\n#   \n#   # Palavras que necessitam de correção de acentuação\n#   correcoes <- list(\n#     \"Mata_Atlantica\" = \"Mata Atlântica\")\n#   \n# }\n# \n# # Função para gerar o gráfico para cada unidade de conservação\n# gerar_grafico_por_bioma <- function(dados, nome_bioma) {\n#   # Preparar o título com as novas regras\n#   titulo <- gsub(\"_\", \" \", nome_bioma)\n#   titulo <- ajustar_titulo(titulo)  # Utilizando a função de ajuste de título aqui\n#   \n#   # Filtrar os dados para a unidade de conservação atual\n#   dados_bioma <- subset(dados, bioma == nome_bioma & bioma == \"Mata_Atlantica\")\n#   dados_bioma <- dados_bioma[!is.na(dados_bioma$tribo), ] #tirar os dados 'NA' que estão na tribo\n#   \n#   # Calcular o total de indivíduos por ano para a região atual\n#   total_individuos_por_ano <- dados_bioma %>%\n#     group_by(ano) %>%\n#     summarise(total = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Agregar dados por ano e tribo\n#   dados_agregados <- dados_bioma %>%\n#     group_by(ano, tribo) %>%\n#     summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Calcular totais e proporções\n#   total_por_ano <- dados_agregados %>%\n#     group_by(ano) %>%\n#     summarize(total = sum(frequencia), .groups = 'drop')\n#   \n#   dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n#     mutate(proporcao = frequencia / total * 100)\n#   \n#   # Ajustar proporções\n#   dados_agregados <- dados_agregados %>%\n#     group_by(ano) %>%\n#     mutate(diferenca = 100 - sum(proporcao),\n#            proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n#     ungroup() %>%\n#     dplyr::select(-diferenca, -proporcao) %>%\n#     rename(proporcao = proporcao_ajustada)\n#   \n#   # Ordem específica das tribos\n#   ordem_tribos <- c(\n#     \"Brassolini\", \"Morphini\", \"Haeterini\", \n#     \"Preponini\", \"Melanitini\", \"Anaeini\", \n#     \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n#     \"Satyrini\",\n#     \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n#   )\n#   \n#   # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n#   cores_tribos <- c(\n#     \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n#     \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n#     \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n#     \"Satyrini\" = \"gray95\",\n#     \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n#   )\n#   \n#   # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n#   cores_tribos <- cores_tribos[ordem_tribos]\n#   \n#   # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n#   dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n#   \n#   # Criar um data frame com a frequência agregada por tribo\n#   frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n#   \n#   # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n#   adicionar_asterisco <- function(nome_tribo) {\n#     # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n#     if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n#       return(paste0(nome_tribo, \"*\"))\n#     } else {\n#       return(nome_tribo)\n#     }\n#   }\n#   \n#   # Aplicar a função a cada tribo para criar o vetor de rótulos\n#   labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n#   \n#   # Criar um data frame com o número único de 'uc_ea' por ano\n#   numero_ea_por_ano <- dados_bioma %>%\n#     distinct(ano, uc_ea) %>%\n#     group_by(ano) %>%\n#     summarize(num_ea = n_distinct(uc_ea))\n#   \n#   # Construir o gráfico\n#   gg <- ggplot() +\n#     geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n#     geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n#     geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n#     scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n#     scale_x_discrete(expand = c(0, 0)) +\n#     scale_fill_manual(values = cores_tribos, \n#                       labels = labels_tribos,\n#                       breaks = ordem_tribos) +\n#     labs(title = titulo,\n#          x = \" \",\n#          y = \"Frequência relativa de ocorrência (%)\",\n#          fill = \"Tribo\") +\n#     theme_minimal() +\n#     theme(legend.position = \"right\", \n#           legend.title = element_text(size = 12), \n#           legend.text = element_text(size = 10), \n#           plot.title = element_text(hjust = 0.5, size = 16), \n#           plot.subtitle = element_text(hjust = 0.5, size = 14),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           axis.text = element_text(size = 10), \n#           axis.title = element_text(size = 10),\n#           axis.line = element_line(colour = \"gray40\"),\n#           axis.line.x = element_blank()) +\n#     guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n#   \n#   # Exibir o gráfico\n#   print(gg)\n# }\n# \n# # Carregar e preparar os dados\n# resultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\n# resultado_final$ano <- factor(resultado_final$ano)\n# resultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n# \n# # Obter todas as UC's do bioma Mata Atlântica\n# biomas <- unique(resultado_final$bioma[resultado_final$bioma == \"Mata_Atlantica\"])\n# \n# # Aplicar a função\n# graficos <- lapply(biomas, function(bioma) gerar_grafico_por_bioma(resultado_final, bioma))\n\n# Salvar a imagem usando ggsave()\n# ggsave(filename = \"mata_atlantica.png\",  # Escolha um nome adequado para o arquivo\n#        plot = graficos[[1]],  # Especifique qual gráfico da lista deseja salvar\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height = 8, units = \"in\")  # Define o tamanho da imagem\n\n\n\nknitr::include_graphics(\"imagens/cap04/bo_mata_atlantica.png\")\n\n\n```\n\n</br>\n\n\n#### Abundância relativa por região  \n\n\nCada região amostrada apresentou um padrão de assinatura de tribos de borboletas. De maneira geral, dentre as tribos indicadoras, o Cerrado apresentou uma proporção maior de borboletas indicadoras de florestas abertas/perturbadas, seguido por Mata Atlântica, sudoeste e norte da Amazônia (Figura 4.12). Como esperado, todas as regiões climáticas da Amazônia tiveram uma proporção maior de borboletas indicadoras de florestas fechadas/preservadas em relação às indicadoras de florestas abertas/perturbadas (Figura 4.12).  \n\n</br>\n\n\n```{r grafico da abundância relativa por região - total}\n#| label: fig-abundancia-regiao-total\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Abundância relativa das tribos de borboletas frugívoras agrupadas por bioma ou, no caso da Amazônia, por região climática. Os números sobre as barras indicam o total de indivíduos amostrados em cada região de 2014 a 2022.\"\n\nknitr::include_graphics(\"imagens/cap04/bo_regioes_totais.png\")\n\n```\n\n\n\n</br>\n\n\n\n### Índices de abundância de tribos  \n\n</br>\n\nO uso de índices de abundância em ecologia e conservação visa gerar medidas que possam ser utilizadas na ausência de estimativas populacionais mais precisas.  Geralmente, usam informações quantitativas derivadas de amostragens por área, transecções lineares ou por um certo esforço de captura, sendo uma poderosa ferramenta para se verificar o estado de conservação e acompanhar mudanças populacionais de espécies.  \n\nO programa de inventário e monitoramento de borboletas do Reino Unido, por exemplo, utiliza uma ficha de registros de ocorrências de borboletas focada nas espécies ameaçadas ou raras em sua área de ocorrência. Um objetivo chave deste programa é servir como sistema de alerta precoce, ao nível local, sobre as ameaças aos sítios importantes de ocorrência de populações de borboletas (@Harding_1995). A proposta original, iniciada em 1976, deveria durar cinco anos, porém, permanece ativa ainda hoje (@Middlebrook_2023).  \n\nO tradicional método conhecido como “Caminhada de Pollard” faz uso de transectos lineares para amostrar borboletas. O protocolo original consiste na caminhada ao longo de trilhas para a contagem padronizada de borboletas e cálculo de um índice simples, equivalente à soma da média das contagens semanais das espécies ao longo da estação de voo (@Pollard_1975; @Pollard_1977). Esse método é adotado em monitoramentos de borboletas em vários países europeus (Van_Swaay_2022) e em projetos específicos nos EUA (@Mattoni_2001).  \n\nNo Programa Monitora, para avaliar flutuações na abundância das tribos de borboletas ao longo dos anos, foi usado um índice considerando somente as tribos indicadoras de florestas fechadas/preservadas e abertas/perturbadas. Para isso, os indivíduos das tribos Brassolini, Morphini e Haeterini registrados em cada ano foram somados, com os totais resultantes representando conjuntamente as borboletas de florestas fechadas/preservadas. O mesmo procedimento foi feito para as borboletas de florestas abertas/perturbadas: Callicorini, Biblidini e Ageroniini.   \n\n\n</br>\n\n#### Cálculo dos índices \n\n</br>\n\nNeste relatório, foram adotadas duas abordagens no cálculo dos índices de abundância. Na primeira, o índice de tendência populacional segue o princípio do Living Planet Index (LPI), no qual oscilações “populacionais” podem ser detectadas comparando-se o valor do índice de um dado ano ao valor do primeiro ano de ocorrência da “população” sob análise. Na segunda, o índice de variação populacional instantânea possibilita a detecção de flutuações de abundância de um ano em relação ao ano anterior.  \n\n\nO índice de abundância *(i)* tem como base o número acumulado de indivíduos (*n*) de cada tribo em cada ano *(t)* numa dada área. A partir do número de indivíduos registrados por ano *(n~t~)* para cada grupo de borboletas indicadoras, é feita uma correção, somando-se um valor muito pequeno para evitar a presença de zeros na matriz. Desta forma, é obtida a frequência absoluta corrigida *(f~t~)* = *n~t~* + 0,00001. Em seguida, para obtenção de um valor padronizado *(fe)*, a frequência absoluta corrigida é dividida pelo esforço amostral (número de armadilhas * número de dias de amostragem). O índice de abundância *(i~t~)* é calculado por meio da divisão da fe do ano específico *(fe~t~)* pelo valor da *fe* do primeiro ano em que a \"população\" sob análise foi registrada ou primeira ocorrência *(fe~0~)*. Considerando que a frequência corrigida apresenta grandes variações de abundância e esforço amostral entre anos, aplicou-se uma transformação logarítmica (log~10~ + 1).  \n\n\n**Índice de tendência populacional** - Considerou-se primeira ocorrência quando a abundância da “população” no ano foi ≥ 20 indivíduos. O índice de abundância da primeira ocorrência *(i~0~)* é padronizado como 1,0. Dessa forma, valores acima de 1,0 indicam um aumento e abaixo de 1,0 uma redução \"populacional” em relação ao primeiro ano de ocorrência.  \n\nA seguir, um exemplo do cálculo desse índice de abundância para o terceiro ano de amostragem: \n\n\n$$f_{3} = n_{3} + 0,00001$$ \n\n\n$$fe_{3} = f_{3} / \\text{esforço} \\, \\text{anual}$$ \n\n$$i_{3} = log_{10} (fe_{3} / fe_{0}) + 1$$  \n\n\nFlutuações \"populacionais\" detectadas por meio dessa abordagem são apresentadas na @fig-ind-abund-regioes-climaticas-combinado a @fig-ind-abund-cerrado. \n\n\n\n**Índice de variação populacional instantânea** - Na segunda abordagem, o índice de abundância de um dado ano *(i~t~)* é calculado por meio da divisão da *fe* do ano específico *(fe~t~)* pelo valor da *fe* do ano anterior *(fe~t-1~)*, seguida também de uma transformação logarítmica (log10 + 1).  \n\nExemplo da aplicação desse índice de abundância para o terceiro ano de amostragem: \n\n\n$$f_{3} = n_{3} + 0,00001$$ \n$$fe_{3} = f_{3} / \\text{esforço} \\, \\text{anual}$$ \n$$i_{3} = log_{10} (fe_{3} / fe_{2}) + 1$$ \n\n\nEsta abordagem pode revelar, por exemplo, o quanto uma \"população\" está se 'recuperando' de um declínio no ano anterior (@fig-IA2-regioes-amazonia a @fig-IA2-mata-atlantica).  \n\nPortanto, os resultados apresentados a seguir expressam a variação da abundância das borboletas frugívoras considerada de forma combinada, com algumas tribos sendo tratadas em conjunto, como um grupo indicador de cada tipo de ambiente: florestas preservadas e alteradas. Valores dos índices de abundância específicos para cada tribo por ano são apresentados no Apêndice G.  \n\n\n</br>\n\n\n#### Região Amazônica \n\n</br>\n\nNa primeira abordagem utilizada, os resultados obtidos para os grupos de borboletas indicadoras não foram uniformes nas diferentes regiões climáticas da Amazônia ao longo dos anos (@fig-ind-abund-regioes-climaticas-combinado). Os resultados obtidos para os grupos de borboletas indicadoras não foram uniformes nas diferentes regiões climáticas da Amazônia ao longo dos anos. Enquanto nas regiões central, sudoeste e norte o índice de abundância indicou um aumento ou estabilidade na abundância das borboletas de florestas fechadas/preservadas, uma diminuição \"populacional\" foi indicada nas regiões leste e sudeste. Este é um resultado interessante, visto que as regiões sudeste e leste da Amazônia fazem parte do chamado \"arco do desmatamento\" e sofrem com os avanços de intervenções humanas como a pecuária, plantações de soja, construções de barragens, hidrelétricas e estradas (@Fearnside_2022; @Nickerson_2022; @Jakimow_2023; @Levy_2023). Dessa forma, a diminuição de borboletas indicadoras de florestas fechadas/preservadas nessas regiões pode ser um indicativo da diminuição da cobertura florestal em  nível regional, visto que as amostragens são executadas em UCs que não sofrem diretamente com estas ameaças. Porém, para que esta hipótese seja avaliada adequadamente faz-se necessário obter e incluir em futuras análises dados ambientais e climáticos na escala da região.  \n\n\nAs tribos indicadoras de florestas abertas/perturbadas apresentaram, em sua maioria, redução \"populacional\", especialmente após de 2020. Os únicos picos de aumento \"populacional\" deste grupo ocorreram em 2019, na região sudoeste da Amazônia, e em 2021, na região central. As regiões norte, leste e sudoeste (a partir de 2020) se destacaram pelas reduções e na região sudeste não foi obtido o número mínimo de 20 indivíduos para o cálculo do índice. Para entender este resultado serão necessárias análises mais refinadas utilizando imagens de satélite, dados climáticos e ambientais. No entanto, a diminuição populacional desse grupo deve, idealmente, ser avaliada num nível taxonômico mais fino, preferencialmente de espécie, para que a interpretação seja mais adequada, especialmente em relação à tribo Ageroniini.  \n\n \n\n</br>\n\n\n```{r graficos IA-regiões_climaticas_amazonia_calculos}\n#| label: fig-regioes-amazonia\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n\n\n##### Índices de abundância de tribos ao longo dos anos - Cinco regiões Amazônicas \n##Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# \n# #########################################################\n# ######### Região Central Amazônica\n# #########################################################\n# \n# # # Definir o diretório de trabalho\n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice <-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"central\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_1 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_1, \"df_completo_central_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_central <- df_agregado_1 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_central %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_central_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas - borboletas indicadoras\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_central_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ##################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_2 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n# ungroup() %>%\n# select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_2, \"df_completo_central_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_central_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_2 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos\n# anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_central <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Central Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2))\n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_central)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_central.png\",\n#  #      gg_grafico_primeira_ocorrencia_central,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# \n# #########################################################\n# ######### Região Sudoeste Amazônica\n# #########################################################\n# \n# # Definir o diretório de trabalho\n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"sudoeste\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_3 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_3, \"df_completo_sudoeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_3 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo # tabela geral dos índices\n# df_tribo_ano_largo <- df_agregado_3 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_sudoeste <- df_agregado_3 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_sudoeste %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_sudoeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas - borboletas indicadoras\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# # Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_sudoeste_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_4 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_4, \"df_completo_sudoeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_4 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_4 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_sudoeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_4 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos\n# anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n# \n# # Criar o gráfico com duas linhas\n# gg_grafico_primeira_ocorrencia_sudoeste <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Sudoeste Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2))\n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_sudoeste)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_sudoeste.png\",\n#  #      gg_grafico_primeira_ocorrencia_sudoeste,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# #########################################################\n# ######### Região Leste Amazônica\n# #########################################################\n# \n# # Definir o diretório de trabalho\n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"leste\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_5 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_5, \"df_completo_leste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_5 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo # tabela geral dos índices\n# df_tribo_ano_largo <- df_agregado_5 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_leste <- df_agregado_5 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_leste %>%\n#   select(tribo, ano, indice_abundancia) %>% # Selecionar as colunas relevantes\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_leste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_leste_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_6 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_6, \"df_completo_leste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_6 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_6 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_leste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_6 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\n# anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 2),\n#                        ano = rep(c(2014, 2015), each = length(unique(dados_longos$tribo))),\n#                        indice_abundancia = NA))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_leste <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Leste Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2))\n# \n# print(gg_grafico_primeira_ocorrencia_leste)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_leste.png\",\n#  #      gg_grafico_primeira_ocorrencia_leste,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# #########################################################\n# ######### Região Sudeste Amazônica\n# #########################################################\n# \n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"sudeste\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #####################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_7 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_7, \"df_completo_sudeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_7 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_7 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_sudeste <- df_agregado_7 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_sudeste %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_sudeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_sudeste_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_8 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_8, \"df_completo_sudeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_8 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_8 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_sudeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_8 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\n# anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 3),\n#                        ano = rep(c(2014, 2015, 2020), each = length(unique(dados_longos$tribo))),\n#                        indice_abundancia = NA))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_sudeste <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   geom_point(data = filter(dados_longos, tribo == \"Borboletas_abertas\" & ano == 2019), aes(x = as.factor(ano), y = indice_abundancia), color = \"#CFA154\", size = 3) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Sudeste Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2))\n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_sudeste)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_sudeste.png\",\n#  #      gg_grafico_primeira_ocorrencia_sudeste,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# #########################################################\n# ######### Região Norte Amazônica\n# #########################################################\n# \n# # Definir o diretório de trabalho\n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Amazonia\", regiao == \"norte\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_9 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_9, \"df_completo_norte_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_9 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo # tabela geral dos índices\n# df_tribo_ano_largo <- df_agregado_9 %>%\n#   select(tribo, ano, indice_abundancia) %>% # Selecionar as colunas relevantes\n#   pivot_wider(names_from = ano, values_from = indice_abundancia) # Transformar para o formato largo\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_norte <- df_agregado_9 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_norte %>%\n#   select(tribo, ano, indice_abundancia) %>% # Selecionar as colunas relevantes\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_norte_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_norte_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# #################################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_10 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_,\n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_10, \"df_completo_norte_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_10 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_10 %>%\n#   select(tribo, ano, indice_abundancia) %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar o dataframe em um arquivo de texto\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_norte_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ########################\n# ####### Gráfico #######\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_10 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015)\n# anos_completos <- factor(c(2014:2022))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 2),\n#                        ano = rep(c(2014, 2015), each = length(unique(dados_longos$tribo))),\n#                        indice_abundancia = NA))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_norte <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(data = subset(dados_longos, ano >= 2018), aes(group = tribo), size = 1) +  #tava dando erro, pois os dados tavam comecando em 2017,mas é para começar em 2018\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Região Climática Norte Amazônica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 14),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5),\n#         panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#         panel.grid.minor = element_blank()) +\n#   scale_x_discrete(limits = as.character(2014:2022)) +\n#   coord_cartesian(ylim = c(0, 2))\n# \n# # print(gg_grafico_primeira_ocorrencia_norte)\n# \n# # Salvar o gráfico em formato PNG\n# #ggsave(\"indice_abundancia_norte.png\",\n#  #      gg_grafico_primeira_ocorrencia_norte,\n#   #     width = 12,\n#    #    height = 10,\n#     #   units = \"in\")\n# \n# ##############################################\n# #### Gráficos combinados\n# #############################################\n# \n# library(gridExtra)\n# indice_abu_amazonia <- grid.arrange(\n#   gg_grafico_primeira_ocorrencia_central + theme(legend.position = \"none\",\n#                                                  axis.text.x = element_blank(),\n#                                                  axis.title = element_text(size = 14),\n#                                                  plot.title = element_text(size = 18),\n#                                                  panel.spacing = unit(0.5, \"lines\"),\n#                                                  panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                  axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n#   gg_grafico_primeira_ocorrencia_sudoeste + theme(legend.position = \"none\",\n#                                                   axis.text.x = element_blank(),\n#                                                   axis.title = element_text(size = 14),\n#                                                   plot.title = element_text(size = 18),\n#                                                   panel.spacing = unit(0.5, \"lines\"),\n#                                                   panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                   axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n#   gg_grafico_primeira_ocorrencia_leste + theme(legend.position = \"none\",\n#                                                axis.text.x = element_blank(),\n#                                                axis.title = element_text(size = 14),\n#                                                plot.title = element_text(size = 18),\n#                                                panel.spacing = unit(0.5, \"lines\"),\n#                                                panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n#   gg_grafico_primeira_ocorrencia_sudeste + theme(legend.position = \"none\",\n#                                                  axis.text.x = element_blank(),\n#                                                  axis.title = element_text(size = 14),\n#                                                  plot.title = element_text(size = 18),\n#                                                  panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                  axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n#   gg_grafico_primeira_ocorrencia_norte + theme(legend.position = \"bottom\",\n#                                                axis.text.x = element_text(size = 20),\n#                                                axis.title = element_text(size = 14),\n#                                                plot.title = element_text(size = 18),\n#                                                panel.spacing = unit(0.5, \"lines\"),\n#                                                panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n#                                                axis.ticks.y = element_line(color = \"black\", size = 0.4),\n#                                                legend.text = element_text(size = 20)),\n#   nrow = 5,  heights = c(10, 10, 10, 10, 13)\n# )\n# \n# # Remover os painéis menores\n# indice_abu_amazonia$grobs[[1]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# indice_abu_amazonia$grobs[[2]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# indice_abu_amazonia$grobs[[3]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# indice_abu_amazonia$grobs[[4]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# indice_abu_amazonia$grobs[[5]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n# \n# # Exibir a imagem\n# print(indice_abu_amazonia)\n# \n# # Salvar o gráfico em formato PNG\n# \n# ggsave(\"imagens/cap04/indice_abundancia_combinado_amazonia.png\",\n#        indice_abu_amazonia,\n#        width = 16,\n#        height = 16,\n#        units = \"in\")\n\n\n```\n\n</br>\n\n\n```{r grafico IA-regiões_climaticas_amazonia}\n#| label: fig-ind-abund-regioes-climaticas-combinado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação no índice de tendência populacional analisando a abundância das tribos de borboletas frugívoras do bioma Amazônico em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/indice_abundancia_combinado_amazonia.png\")\n\n```\n\n\n</br>\n\n\n#### Cerrado \n\n \n\nO Cerrado apresenta uma composição de tribos muito distinta dos biomas mais florestais, como Amazônia e Mata Atlântica (@fig-abundancia-regiao-total). Os dados obtidos para este bioma apresentaram grandes variações entre anos (@fig-regiao-cerrado) causados pela grande variação nas unidades de conservação amostradas a cada ano. Isto dificulta a determinação de padrões claros para o bioma.  \n\nO grande aumento observado em todas as populações de borboletas de florestas abertas e fechadas indica que o primeiro ano da série (2014) deve ter sido atípico, com abundâncias abaixo da média, dado que todas as populações aumentaram nos anos seguintes (fig-ind-abund-cerrado). Alternativamente, é possível que os ciclos observados no Cerrado tenham um pulso mais longo, o que somente poderá ser comprovado com uma série histórica mais extensa do que a atual. No entanto, ressaltamos que a bioindicação obtida pela abundância dos grupos associados a florestas fechadas pode não ser a melhor para este bioma, dado que a tribo Haeterini não ocorreu nas amostragens e que as tribos Brassolini e Morphini são naturalmente pouco abundantes em florestas secas, cerradão e cerrado denso. \n\n \n</br>\n\n\n```{r grafico IA-cerrado-calculos}\n#| label: ind-abund-cerrado-calculos\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n##### Índices de abundância de tribos ao longo dos anos - Cerrado\n##Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# \n# # Definir o diretório de trabalho\n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';') \n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Cerrado\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #######################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_1 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_, \n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_1, \"df_completo_cerrado_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia) \n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_cerrado <- df_agregado_1 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_cerrado %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_cerrado_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\", \n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_cerrado_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ######################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_2 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_, \n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_2, \"df_completo_cerrado_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia) \n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_cerrado_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ############\n# #Gráfico\n# library(ggplot2)\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_2 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\n# anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 1),\n#                        ano = 2020, each = length(unique(dados_longos$tribo)),\n#                        indice_abundancia = NA))\n# \n# # Criar uma sequência completa de anos\n# anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_cerrado <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Cerrado\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 16),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(0, 2)) \n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_cerrado)\n# \n# # Salvar o gráfico em formato PNG\n# ggsave(\"imagens/cap04/bo-indice-abundancia-cerrado.png\",\n#       gg_grafico_primeira_ocorrencia_cerrado,\n#      width = 10,\n#     height = 5, \n#    units = \"in\") \n\n\n```\n\n</br>\n\n\n```{r grafico IA-cerrado}\n#| label: fig-ind-abund-cerrado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no índice de tendência populacional analisando a abundância das tribos de borboletas frugívoras do bioma Cerrado em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-indice-abundancia-cerrado.png\")\n\n```\n\n</br>\n\n\n#### Mata Atlântica  \n\n</b>\n\nO padrão de bioindicação para a Mata Atlântica é similar àquele observado para as diferentes regiões amazônicas, apesar de haver maior equitabilidade de distribuição das diversas tribos de borboletas (@fig-abundancia-regiao-total). Não foram registradas espécies da tribo Haeterini nas UCs amostradas.  \n\nOs resultados obtidos para as UCs da Mata Atlântica são muito influenciados pela grande quantidade de capturas no PARNA do Iguaçu, que representa 74% da abundância total observada para o bioma. Unidades de conservação como o PARNA da Serra dos Órgãos, PARNA Serra da Bocaina e PARNA do Superagui têm registrado baixos números de borboletas frugívoras na maior parte dos anos, o que nos alerta para a necessidade de conhecer melhor as variações desta comunidade ao longo do tempo.  \n\nApesar das UCs deste bioma não terem sido suficientemente amostradas, pode-se observar um aparente declínio na abundância das tribos indicadoras de florestas fechadas/preservadas, que se deu de forma contínua ao longo de todo o período de amostragem. Tal conclusão, no entanto, ainda carece de dados para ser confirmada. Já as tribos indicadoras de florestas abertas/perturbadas apresentaram flutuações drásticas, provavelmente devido a estocasticidade relacionada ao baixo número amostral (@fig-ind-abund-mata-atlantica).  \n\n\n</br>\n\n\n```{r IA-mata-atlantica-calculos}\n#| label: ind-abund-mata-atlantica-calculos\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n##### Índices de abundância de tribos ao longo dos anos - Mata Atlântica\n##Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# \n# # Definir o diretório de trabalho\n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# df_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';') \n# df_indice <- df_indice[!is.na(df_indice$tribo), ]\n# \n# dados_regiao_especifica <- df_indice %>%\n#   filter(bioma == \"Mata_Atlantica\")\n# \n# # Agregar soma_individuos por tribo e ano\n# soma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ano) %>%\n#   summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Verificar o esforço individual por uc_ea e expedicao\n# esforco_individual <- dados_regiao_especifica %>%\n#   group_by(uc, uc_ea, ano, expedicao) %>%\n#   summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n#   ungroup()\n# \n# # Somar os esforços por expedicao\n# esforco_por_expedicao <- esforco_individual %>%\n#   group_by(uc, ano, expedicao) %>%\n#   summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Calcular o esforço total anual para cada ano\n# esforco_total_anual <- esforco_por_expedicao %>%\n#   group_by(ano) %>%\n#   summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Juntar com soma_individuos_por_tribo_ano\n# df_agregado <- soma_individuos_por_tribo_ano %>%\n#   left_join(esforco_total_anual, by = \"ano\") %>%\n#   ungroup()\n# \n# # Somando os grupos de borboletas_fechadas\n# borboletas_fechadas <- df_agregado %>%\n#   filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_fechadas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Somando os grupos de borboletas_abertas\n# borboletas_abertas <- df_agregado %>%\n#   filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n#   group_by(ano) %>%\n#   summarise(soma_individuos = sum(soma_individuos)) %>%\n#   ungroup() %>%\n#   mutate(tribo = 'Borboletas_abertas') %>%\n#   left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n# \n# # Adicionando as linhas de Borboletas_fechadas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n# \n# # Adicionando as linhas de Borboletas_abertas ao dataframe original\n# df_agregado <- bind_rows(df_agregado, borboletas_abertas)\n# \n# #######################\n# # Calcular o índice de abundância referente ao ano anterior\n# df_agregado_1 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          # log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_, \n#                                              log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_1, \"df_completo_mata_atlantica_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_1 %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia) \n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Tabela de índices de abundancia para o relatório\n# tab_boneco_mata_atlantica <- df_agregado_1 %>%\n#   filter(!(row_number() %in% 28:45))\n# \n# df_tribo_ano_largo_tab <- tab_boneco_mata_atlantica %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# df_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# #Salvar\n# #write.table(df_tribo_ano_largo_tab, \"indice_abundancia_mata_atlantica_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Filtrar as linhas desejadas\n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n#   filter(row_number() %in% c(4, 5))\n# \n# df_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n#   mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\", \n#                         ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n# \n# ## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n# #write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_mata_atlantica_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ######################\n# # Calcular o índice de abundância referente ao ano de primeira ocorrencia\n# df_agregado_2 <- df_agregado %>%\n#   group_by(tribo) %>%\n#   arrange(tribo, ano) %>%\n#   mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n#          #log_frequencia_corrigida = log10(frequencia_corrigida),\n#          primeira_ocorrencia = which(soma_individuos >= 20)[1],\n#          indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n#                                      if_else(row_number() < primeira_ocorrencia, NA_real_, \n#                                              log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n#   ungroup() %>%\n#   select(-primeira_ocorrencia)\n# \n# #Tabela completa\n# #write.table(df_agregado_2, \"df_completo_mata_atlantica_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# # Reestruturar para visualização\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   pivot_wider(names_from = ano, values_from = indice_abundancia)\n# \n# # Reestruturar o dataframe para o formato largo\n# df_tribo_ano_largo <- df_agregado_2 %>%\n#   select(tribo, ano, indice_abundancia) %>% \n#   pivot_wider(names_from = ano, values_from = indice_abundancia) \n# \n# # Limitar os valores a 3 casas decimais\n# df_tribo_ano_largo <- df_tribo_ano_largo %>%\n#   mutate_if(is.numeric, ~ round(., 3))\n# \n# # Salvar\n# #write.table(df_tribo_ano_largo, \"indice_abundancia_mata_atlantica_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n# \n# ############\n# #Gráfico\n# library(ggplot2)\n# \n# # Definir as cores e tipos de linha para cada tribo\n# cores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\n# tipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n# \n# dados_longos <- df_agregado_2 %>%\n#   filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n# \n# # Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\n# anos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n# \n# dados_longos <- dados_longos %>%\n#   bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 1),\n#                        ano = 2020, each = length(unique(dados_longos$tribo)),\n#                        indice_abundancia = NA))\n# \n# # Criar uma sequência completa de anos\n# anos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n# \n# # Grafico - referente ao primeiro ano de ocorrencia\n# gg_grafico_primeira_ocorrencia_mata_atlantica <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n#   geom_line(aes(group = tribo), size = 1) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n#   scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                        \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n#                                                           \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n#   theme_minimal() +\n#   labs(title = \"Mata Atlântica\",\n#        x = \"\",\n#        y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n#        color = NULL,\n#        linetype = NULL) +\n#   theme(plot.title = element_text(hjust = 0.5, size = 20),\n#         axis.title = element_text(size = 18),\n#         axis.text = element_text(size = 16),\n#         legend.title = element_text(size = 16),\n#         legend.text = element_text(size = 12),\n#         axis.line = element_line(color = \"black\"),\n#         axis.line.x = element_blank(),\n#         legend.position = \"bottom\",\n#         axis.text.x = element_text(hjust = 0.5)) +\n#   scale_x_discrete(labels = as.character(anos_completos))+\n#   coord_cartesian(ylim = c(-0.5, 2)) \n# \n# # Exibir o gráfico\n# print(gg_grafico_primeira_ocorrencia_mata_atlantica)\n# \n# # Salvar o gráfico em formato PNG\n# ggsave(\"imagens/cap04/bo-indice-abundancia-mata-atlantica.png\",\n#        gg_grafico_primeira_ocorrencia_mata_atlantica,\n#        width = 10,\n#        height = 5, \n#        units = \"in\") \n\n\n```\n\n</br>\n\n```{r grafico IA-mata-atlantica}\n#| label: fig-ind-abund-mata-atlantica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no índice de tendência populacional analisando a abundância das tribos de borboletas frugívoras do bioma Mata Atlântica em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-indice-abundancia-mata-atlantica.png\")\n\n```\n\n\n\n\nNa segunda abordagem utilizada para o índice de abundância, a análise de variações populacionais instantâneas, os valores de cada ano foram comparados ao valor do ano anterior. Na região climática sudoeste amazônica foi observada uma redução de Ageroniini (a única tribo representante das borboletas indicadoras de florestas abertas/perturbadas observadas na região) nos anos de 2017 e 2018, mas um aumento considerável da tribo em 2019. Devido a este grande crescimento populacional de Ageroniini e do esforço amostral na região em 2019 (2.122 indivíduos amostrados em 76 campanhas realizadas, com 38 EAs), o ano de 2020 apresentou uma redução drástica no índice, tanto devido ao baixo número de indivíduos de Ageroniini (n = 42), quanto à redução do esforço amostral para 26 campanhas (com 13 EAs). No ano de 2021 houve um aumento do índice em relação ao ano anterior, e uma pequena redução em 2022 (@fig-IA2-regioes-amazonia).   \n\n\nAs borboletas indicadoras de florestas fechadas/preservadas apresentaram estabilidade, com leves variações em sentido inverso às borboletas indicadoras de florestas abertas/perturbadas, exceto em 2018, quando nos dois grupos verificou-se leve redução no valor do índice  (@fig-IA2-regioes-amazonia). Esta é uma dinâmica populacional esperada, visto que as borboletas indicadoras de florestas fechadas e florestas abertas possuem requerimentos ambientais e climáticos contrastantes. \n\nNa região climática Central amazônica, as tribos indicadoras de florestas abertas/perturbadas, representadas somente por Ageroniini, tiveram um aumento populacional em 2017 em relação a 2016, com uma subsequente redução nos anos de 2018 e 2019 (@fig-IA2-regioes-amazonia). A partir de 2020, houve um pequeno aumento em relação ao ano anterior e em 2021 esta tribo apresentou um grande aumento populacional. Porém, no ano seguinte, houve uma grande redução populacional desse grupo de borboletas (@fig-IA2-regioes-amazonia). No caso das borboletas de florestas fechadas/preservadas, notou-se uma oscilação de crescimento e redução populacional ao longo dos anos, com crescimento nos anos de 2020 e 2021 (@fig-IA2-regioes-amazonia). Os grupos indicadores tiveram o mesmo padrão de crescimento populacional em relação ao ano anterior em 2019, 2020 e 2021, ambos com diminuição populacional em 2022 (@fig-IA2-regioes-amazonia).  \n\nNa região climática Leste amazônica as tribos indicadoras de florestas fechadas e abertas apresentaram padrões de crescimento e diminuição populacional similares ao longo dos anos, com exceção de 2022, quando borboletas indicadoras de florestas abertas tiveram um aumento populacional em relação ao ano anterior, enquanto as borboletas indicadoras de florestas fechadas apresentaram uma redução (@fig-IA2-regioes-amazonia). Apesar dos mesmos padrões, as proporções das mudanças populacionais de um ano para o outro entre os dois grupos indicadores foram diferentes.  \n\nA região climática Sudeste amazônica não apresentou, em nenhum ano amostrado, o número mínimo de borboletas indicadoras de florestas abertas/perturbadas para que o índice fosse calculado (@fig-IA2-regioes-amazonia). No entanto, as borboletas indicadoras de florestas fechadas/preservadas mostraram uma oscilação populacional entre os anos (@fig-IA2-regioes-amazonia).  \n\nNa região climática Norte amazônica os grupos indicadores apresentaram um número mínimo de indivíduos para o cálculo do índice apenas a partir de 2018. Os padrões dos dois grupos foram congruentes em todos os anos, exceto em 2022, quando a abundância de borboletas indicadoras de florestas abertas/perturbadas aumentou em relação ao ano anterior, e as borboletas indicadoras de florestas fechadas/preservadas mostraram uma pequena redução (@fig-IA2-regioes-amazonia).  \n\n</br>\n\n\n```{r grafico IA2 regiões amazônia}\n#| label: fig-IA2-regioes-amazonia\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação no Índice de variação instantânea das tribos de borboletas frugívoras do bioma Amazônico em relação ao ano anterior. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-IA2-regioes-amazonia.png\")\n\n```\n\n</br>\n\nA variação instantânea observada nas populações das tribos de borboletas indicadoras de florestas fechadas e abertas no Cerrado mostram variações grandes entre anos (@fig-IA2-cerrado). No entanto, como os dados se referem a UCs diferentes em anos diferentes, as variações podem estar relacionadas a diferenças existentes entre as comunidades de borboletas nessas áreas, podendo não refletir bem as variações populacionais desses grupos no bioma.  \n\n</br>\n\n\n```{r grafico IA2 Cerrado}\n#| label: fig-IA2-cerrado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no Índice de variação instantânea das tribos de borboletas frugívoras do bioma Cerrado em relação ao ano anterior. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini e Morphini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-IA2-cerrado.png\")\n\n```\n\n</br>\n\n\nAs variações populacionais instantâneas observadas para as tribos de borboletas de florestas abertas nas UCs da Mata Atlântica (@fig-IA2-mata-atlantica) explicam as grandes variações observadas no índice de tendência populacional (@fig-ind-abund-mata-atlantica). Já as variações instantâneas observadas para as borboletas de florestas fechadas confirmam a tendência de redução dessas populações observadas no período, pois foram observadas poucas variações positivas. Apesar desta tendência ser muito influenciada pelo grande volume de informações vindas do PARNA Iguaçu, esse padrão precisa ser monitorado para avaliar se a tendência continua. \n\n</br>\n\n\n```{r grafico IA2 Mata Atlântica}\n#| label: fig-IA2-mata-atlantica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no Índice de variação instantânea das tribos de borboletas frugívoras do bioma Mata Atlântica em relação ao ano anterior. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini e Morphini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada ocre.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-IA2-mata-atlantica.png\")\n\n```\n\n</br>\n\n\n\n### Destaque\n\n</br>\n\n\n#### Efeito da queda dos tabocais na abundância das tribos de borboletas frugívoras no sudoeste da Amazônia  \n\n</br>\n\nNa região sudoeste da Amazônia, especialmente no estado do Acre, encontra-se uma vasta área de florestas de bambuzais do gênero *Guadua*, chamadas localmente de 'tabocal'. Estas florestas se estendem por uma superfície de aproximadamente 162.000 km^2^, na qual uma única população de bambu pode ocupar uma área de 330 km^2^ (@Carvalho_2013). Essas populações de taboca têm um ciclo de vida que varia de 27-28 anos (@Carvalho_2013). A população entra em senescência após sua reprodução sexuada, inicialmente com a perda de folhas dos indivíduos e, no fim, com sua sua morte e queda. As manchas de bambu são densas e altas e, ao morrerem, deixam uma grande porção de floresta aberta. \n\nAlgumas UCs do Acre possuem extensas manchas florestas de tabocal e,  nos últimos anos, foram relatadas mortes de diversas dessas populações (Marcos Silveira, comunicação pessoal, 15 de janeiro de 2024). Porém, essa mortalidade não é imediata e a senescência dessas manchas pode levar mais de um ano. Há relatos da mortalidade de extensas áreas de tabocal de 2017 a 2021 nas seguintes UCs do Programa Monitora: RESEX do Cazumbá-Iracema (2017 e 2018), RESEX do Alto Tarauacá e RESEX Chico Mendes (2018) e RESEX Riozinho da Liberdade (2021). \n\nPara avaliar se a mortalidade das manchas de tabocal influenciou a abundância das tribos de borboletas frugívoras em cada UC, foi feito uma comparação entre anos para cada tribo, por meio do teste de Wilcoxon (ou teste U de Mann-Whitney). Este teste compara as medianas das abundâncias padronizadas pelo esforço amostral dos anos específicos com a mediana geral (a soma das medianas dos anos específicos dividida pelo número de anos). Um valor de *p* ≤ 0.01 indica que houve diferença significativa entre a mediana do ano específico e a mediana geral. Admitindo-se  que um evento de distúrbio na floresta pode influenciar a comunidade de borboletas tanto no mesmo ano quanto no ano seguinte, essas duas possibilidades foram consideradas na interpretação dos resultados. O valor de *p* considerado foi de 0.01, para que apenas efeitos mais fortes fossem detectados nos testes. A sobreposição dos intervalos de confiança de cada ano indica que não houve diferença significativa da abundância. As análises também foram aplicadas às tribos de borboletas do PARNA Serra do Divisor, local considerado \"controle\", por não apresentar florestas de taboca. \n\nNa RESEX do Cazumbá-Iracema, as tribos Brassolini e Morphini, indicadoras de florestas fechadas/preservadas, mostraram um aumento significativo na mediana da abundância no ano seguinte à mortalidade dos tabocais (@fig-abundancia-resex-cazumba-iracema-combinada). Este resultado é oposto ao esperado, pois com a morte dos tabocais a floresta fica mais aberta e menos propícia às espécies das tribos de floresta fechada. No entanto, a tribo Ageroniini, indicadora de florestas abertas/perturbadas, parece ter respondido à esta perturbação ambiental, visto que o aumento da mediana da abundância foi expressivo, resultando num valor quase 20 vezes maior do que o da mediana geral (@fig-abundancia-resex-cazumba-iracema-combinada). Outra tribo que também pode ter respondido à queda dos tabocais foi Coeini (@fig-abundancia-resex-cazumba-iracema-combinada) que, apesar de não ser uma tribo indicadora, têm espécies que são comuns no dossel e florestas abertas. \n\n</br>\n\n\n```{r grafico abundancia-resex-cazumba-iracema}\n#| label: fig-abundancia-resex-cazumba-iracema\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX do Cazumbá-Iracema\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# \n# dados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Resex_do_Cazumba-Iracema')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n# }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = .7) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5.5),\n#           axis.text = element_text(size = 6),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n# #   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n# #          plot = p_tribo,  # O objeto ggplot\n# #          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n# #          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Cazumba-Iracema\",  # Especifique o diretório onde você deseja salvar o gráfico\n# #          dpi = 300,  # Define a resolução (DPI)\n# #          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# # }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5.5),\n#           axis.text = element_text(size = 6),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n\n```\n\n\n```{r grafico abundancia-resex-cazumba-iracema-combinada}\n#| label: fig-abundancia-resex-cazumba-iracema-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na mediana da abundância das tribos de borboletas frugívoras na RESEX do Cazumbá-Iracema de 2016 a 2022. A linha horizontal pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_cazumba_iracema.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Cazumba-Iracema\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-cazumba.png\")\n\n```\n\n\n</br>\n\n\nNa RESEX do Alto Tarauacá, as borboletas parecem ter respondido ao impacto da queda das florestas de tabocal no mesmo ano em que ela ocorreu. Grande parte das tribos que tiveram resultados significativamente diferentes da mediana total foi detectada em 2019. As tribos Brassolini, Coeini e Ageroniini apresentaram um aumento em suas abundâncias, enquanto a tribo Anaeini apresentou uma diminuição (@fig-abundancia-resex-alto-tarauaca-combinada). Devido a pandemia, esta UC não coletou os dados em 2020, o que impossibilitou a avaliação do efeito da queda das tabocas nas borboletas após um ano. No entanto, em 2021, algumas tribos apresentaram uma abundância significativamente menor que a mediana geral. Este foi o caso das tribos Brassolini, Preponini, Anaeini e Epicaliini (@fig-abundancia-resex-alto-tarauaca-combinada). \n\n</br>\n\n\n\n```{r grafico abundancia-resex-alto-tarauaca}\n#| label: fig-abundancia-resex-alto-tarauaca\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX do Alto Taraucá\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# #setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# \n# # dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# # dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# # dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# # dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Resex_do_Alto_Tarauaca')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.2\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n#   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n#          plot = p_tribo,  # O objeto ggplot\n#          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Alto Tarauaca\",  # Especifique o diretório onde você deseja salvar o gráfico\n#          dpi = 300,  # Define a resolução (DPI)\n#          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.2\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-alto-tarauca-combinada}\n#| label: fig-abundancia-resex-alto-tarauaca-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na mediana da abundância das tribos de borboletas frugívoras na RESEX do Alto Tarauacá de 2017 a 2022. A linha pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_alto_tarauaca.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Alto Tarauaca\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-alto-tarauaca.png\")\n\n\n```\n\n</br>\n\n\nEm 2018, a RESEX Chico Mendes sofreu quedas de florestas de taboca, mas essa perturbação não pareceu afetar a abundância das tribos de borboletas naquele ano. No entanto, no ano seguinte, foi observada uma redução significativa da abundância da tribo Satyrini (@fig-abundancia-resex-chico-mendes-combinada).  \n\nApesar dos resultados não apresentarem significância, há um padrão de diminuição da mediana da abundância de borboletas de 2018 para 2019. Com exceção das tribos Epiphilini e Anaeini, todas as outras apresentaram uma diminuição nas abundâncias (@fig-abundancia-resex-chico-mendes-combinada). Este é um resultado interessante, pois em 2019, diversas tribos de borboletas tiveram aumento na sua abundância em outras UCs da região Sudoeste da Amazônia (e.g., RESEX do Cazumbá-Iracema, RESEX do Alto do Tarauacá). \n\n \n\n```{r grafico abundancia-resex-chico-mendes}\n#| label: fig-abundancia-resex-chico-mendes\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX Chico Mendes\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# # \n# # dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# # dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# # dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# # dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Resex_Chico_Mendes')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- erros_padrao\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#      theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n#   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n#          plot = p_tribo,  # O objeto ggplot\n#          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Chico Mendes\",  # Especifique o diretório onde você deseja salvar o gráfico\n#          dpi = 300,  # Define a resolução (DPI)\n#          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- erros_padrao\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#      theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-chico-mendes-combinada}\n#| label: fig-abundancia-resex-chico-mendes-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na mediana da abundância das tribos de borboletas frugívoras na RESEX Chico Mendes em 2018 e 2019. A linha pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_chico_mendes.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Chico Mendes\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-chico-mendes.png\")\n\n```\n\n</br>\n\nNa RESEX Riozinho da Liberdade houve quedas das florestas de taboca em 2021, mas esta perturbação parece não ter influenciado significativamente as tribos de borboletas. No entanto, a tribo Morphini apresentou uma diminuição significativa da sua abundância em 2022 (@fig-abundancia-resex-riozinho-da-liberdade-combinada). \n\n</br>\n\n\n\n```{r grafico abundancia-resex-riozinho-da-liberdade}\n#| label: fig-abundancia-resex-riozinho-da-liberdade\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX Riozinho da Liberdade\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# # \n# # dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# # dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# # dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# # dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Resex_Riozinho_da_Liberdade')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- erros_padrao\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n#   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n#          plot = p_tribo,  # O objeto ggplot\n#          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Riozinho da Liberdade\",  # Especifique o diretório onde você deseja salvar o gráfico\n#          dpi = 300,  # Define a resolução (DPI)\n#          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- erros_padrao\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.1\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-riozinho-da-liberdade-combinada}\n#| label: fig-abundancia-resex-riozinho-da-liberdade-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na mediana da abundância das tribos de borboletas frugívoras na RESEX do Riozinho da Liberdade de 2020 a 2022. A linha pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_riozinho_da_liberdade.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Riozinho da Liberdade\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-riozinho.png\")\n\n```\n\n</br>\n\nNo PARNA da Serra do Divisor, pela inexistência de florestas de taboca, era esperado que não houvesse grande diferença na abundância das tribos entre anos. Duas tribos, Brassolini e Epicaliini apresentaram diminuições significativas em suas abundâncias em 2021 (@fig-abundancia-parna-serra-divisor-combinada). Foi observado também que os valores de abundâncias foram menores em comparação aos anos anteriores (@fig-abundancia-parna-serra-divisor-combinada). \n\n</br>\n\n```{r grafico abundancia-parna-serra-divisor}\n#| label: fig-abundancia-parna-serra-divisor\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# PARANA Serra do Divisor\n# Script: Isabela Freitas Oliveira\n\n# library(dplyr)\n# library(tidyr)\n# library(ggplot2)\n# library(car)\n# \n# # setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# # \n# # dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# # dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# # dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# # dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n# \n# \n# dados_regiao_especifica <- dados_borboletas %>%\n#   filter(uc == 'Parna_da_Serra_do_Divisor')\n# \n# # Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\n# esforco_por_expedicao <- dados_regiao_especifica %>%\n#   group_by(uc_ea, uc, expedicao, ano) %>%\n#   summarize(\n#     max_dia_amostragem = max(dia_amostragem) - 1,\n#     .groups = 'drop'\n#   ) %>%\n#   mutate(\n#     esforco_amostral = 16 * max_dia_amostragem\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc_ea e ano\n# esforco_total_por_ea_ano <- esforco_por_expedicao %>%\n#   group_by(uc_ea, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregar o esforço de amostragem para cada uc e ano\n# esforco_total_por_uc_ano <- esforco_por_expedicao %>%\n#   group_by(uc, ano) %>%\n#   summarize(\n#     esforco_total_ano = sum(esforco_amostral),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o esforço total por ano\n# esforco_por_ano <- esforco_total_por_uc_ano %>%\n#   group_by(ano,uc) %>%\n#   summarize(\n#     esforco = sum(esforco_total_ano),\n#     .groups = 'drop'\n#   )\n# \n# # Agregação para obter o número total de indivíduos por ano\n# num_ind_por_ano <- dados_regiao_especifica %>%\n#   group_by(ano) %>%\n#   summarize(\n#     num_ind = sum(individuos, na.rm = TRUE),\n#     .groups = 'drop'\n#   )\n# \n# #criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\n# dados_regiao_especifica <- dados_regiao_especifica %>%\n#   mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n# \n# #combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\n# df_abu_ano <- dados_regiao_especifica %>%\n#   group_by(tribo, ua, uc_ea,uc, ano) %>%\n#   summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n#   ungroup()\n# \n# # Transforma o df para colocar os zeros\n# df_tabocal <- df_abu_ano %>%\n#   spread(key = tribo, value = abundancia, fill = 0)\n# \n# # Retorna ao formato longo para as análises\n# df_long <- df_tabocal %>%\n#   pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n# \n# # Agregação para obter a abundância total de cada tribo por ano\n# abundancia_por_ano <- df_long %>%\n#   group_by(tribo, ano) %>%\n#   summarize(\n#     abundancia_total = sum(individuos)\n#   )\n# \n# # Juntar as tabelas pela coluna 'ano' e 'uc'\n# df_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n# \n# \n# # Calcular a abundância padronizada pelo esforço amostral\n# df_long <- df_long_com_esforco %>%\n#   mutate(abundancia_padronizada = (individuos / esforco) * 100)\n# #\n# \n# library(tidyverse)\n# \n# # Realizar análise e gerar gráficos para cada tribo\n# \n# tribos <- unique(df_long$tribo)\n# \n# for (tribo_atual in tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup)*1.2\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"Ano\",\n#          y = \"Mediana da Abundância / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Exiba o gráfico ajustado\n#   print(p_tribo)\n#   \n#   # Salvar a imagem usando ggsave()\n#   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n#          plot = p_tribo,  # O objeto ggplot\n#          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Serra do Divisor\",  # Especifique o diretório onde você deseja salvar o gráfico\n#          dpi = 300,  # Define a resolução (DPI)\n#          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# }\n# \n# \n# library(gridExtra)\n# \n# # Definir uma lista para armazenar os gráficos\n# lista_graficos <- list()\n# \n# # Defina a ordem das tribos\n# ordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n#                   \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n# \n# for (tribo_atual in ordem_tribos) {\n#   cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n#   \n#   # Filtrar os dados para a tribo atual\n#   df_tribo <- df_long %>%\n#     filter(tribo == tribo_atual)\n#   \n#   # Verificar se há dados para a tribo atual\n#   if (nrow(df_tribo) == 0) {\n#     cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n#     cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n#     next\n#   }\n#   \n#   # Calcular a mediana anual para cada ano\n#   medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n#   \n#   # Adicione o ano de 2020, mesmo que não haja dados\n#   medianas_anuais <- c(medianas_anuais, NA)\n#   names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n#   \n#   # Calcular a mediana geral das medianas anuais\n#   mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n#   \n#   # Remover os anos com NA das medianas anuais\n#   medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n#   \n#   # Crie um vetor para armazenar os resultados dos testes\n#   resultados_teste_anual <- numeric(length(medianas_anuais))\n#   \n#   # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n#   for (ano_atual in names(medianas_anuais)) {\n#     # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n#     wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n#     \n#     # Armazena o valor p do teste no vetor de resultados\n#     resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n#   }\n#   \n#   # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n#   df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n#   df_plot$MedianaGeral <- mediana_geral_anual\n#   df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n#   \n#   # Calcule os erros padrão para cada ano\n#   erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n#     dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n#     desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n#     erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n#     return(erro_padrao_ano)\n#   })\n#   \n#   # Adicione os intervalos de confiança ao data frame\n#   df_plot$ErroPadrao <- c(erros_padrao, NA)\n#   df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n#   df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n#   \n#   # Definir os limites do eixo y de acordo com os valores das medianas\n#   y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.2\n#   \n#   # Definir a cor de acordo com a tribo\n#   cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n#     \"#35978f\"\n#   } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n#     \"gray40\"\n#   } else {\n#     \"#bf812d\"\n#   }\n#   \n#   # Crie o gráfico ajustado com pontos e linhas\n#   p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n#     geom_point(color = cor_tribo, size = 1) +\n#     geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n#     geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n#     geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n#     labs(title = paste(\"\", tribo_atual),\n#          x = \"\",\n#          y = \"Mediana da Abundância \n#  / Esforço Amostral\") +\n#     theme_minimal() +\n#     theme(plot.title = element_text(hjust = 0.5, size = 8),\n#           axis.title = element_text(size = 5),\n#           axis.text = element_text(size = 5),\n#           axis.line = element_line(color = \"black\"),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           panel.grid.minor = element_blank(),\n#           axis.line.x = element_blank(),\n#           legend.position = \"none\") +  # Remover a legenda\n#     ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n#     geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n#               aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n#               vjust = -0.5,  \n#               size = 3)\n#   \n#   # Adicionar o gráfico atual à lista\n#   lista_graficos[[tribo_atual]] <- p_tribo\n# }\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-parna-serra-divisor-combinada}\n#| label: fig-abundancia-parna-serra-divisor-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na abundância das tribos de borboletas frugívoras no PARNA da Serra do Divisor de 2018 a 2022. A linha pontilhada vermelha indica a mediana geral (soma da mediana de todos os anos dividido pelo número de anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# # Combine todos os gráficos em uma única imagem\n# imagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_serra_do_divisor.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Serra do Divisor\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\nknitr::include_graphics(\"imagens/cap04/bo-destaque-serra-divisor.png\")\n\n```\n\n\n</br>\n\nEsse padrão de diminuição das abundâncias das tribos a partir de 2021 também foi observado nas UCs anteriormente citadas. Dessa forma, sugere-se que algum evento climático/ambiental pode ter afetado as comunidades de borboletas em toda a região do estado do Acre. No entanto, a queda das florestas de taboca parece ter uma grande influência local em alguns grupos de borboletas, principalmente as tribos indicadoras, confirmando que este nível taxonômico responde a esse tipo de distúrbio. \n\n</br>\n\n\n## Discussão\n\n</br>\n\nO Programa Monitora vem se estabelecendo como um dos maiores programas de monitoramento da biodiversidade do mundo. Dada a extensão continental do Brasil e a carência de estudos de longo prazo em diversos biomas, a intensificação do apoio estruturado ao Programa com recursos extraorçamentários por meio de projetos especiais (por exemplo, ARPA, FUNBIO e PNUD) e de ONGs e iniciativas nacionais (por exemplo, IPÊ e ECOPORÉ) e internacionais (por exemplo, USFS, USAID e Gordon and Betty Moore Foundation) é imprescindível para seu fortalecimento e consolidação. Entretanto, apesar de ser pertinente o uso de recursos de projetos na fase de implementação do Programa Monitora nas unidades de conservação, é importante que exista aumento do aporte de fontes constantes de recursos para manutenção do Programa nas unidades, por meio do Orçamento Geral da União e compensação ambiental, por exemplo.  Somente dessa forma, com fontes múltiplas de recursos e parcerias, é possível acumular esforços para que a biodiversidade brasileira seja conhecida, estudada e protegida.  \n\nAlém do monitoramento de diversos grupos ao longo dos anos, o Programa Monitora vem possibilitando a atualização do conhecimento sobre a distribuição geográfica de diversas espécies de borboletas, a exploração científica de novos locais e o registro da ocorrência de novas espécies para o Brasil (i.e., PARNA do Monte Roraima; Oliveira et al. *em revisão*), além da descoberta de novas espécies para a ciência (i.e., novo gênero de borboleta coletado na REBIO do Tapirapé; @Barbosa_2023).  \n\nNas amostragens de borboletas frugívoras do Programa Monitora, o protocolo básico foi, em geral, adequadamente aplicado, com a obtenção de importantes dados para o país. Especialmente na Amazônia, região de grandes dificuldades logísticas, novas áreas têm sido inventariadas, proporcionando, mesmo que em caráter ainda preliminar, um panorama mais amplo da diversidade. No entanto, para que o conhecimento desse grupo continue evoluindo, são funcamentais tanto o compromisso das UCs participantes com sua permanência no Programa, quanto a adesão de novas áreas, como ressaltado ao longo do capítulo. O ano de 2022 (ano limite das análises desse relatório) apresentou a maior quantidade de UCs do Programa aplicando o protocolo básico de borboletas frugívoras, destacando não somente a recuperação em relação à redução no esforço amostral causada pela baixa amostragem nos anos da pandemia de Covid-19, mas também a superação do maior esforço até então registrado, em período imediatamente anterior à pandemia. É de se esperar que o número de UCs consolidadas cresça, não somente na Amazônia, mas também nos outros biomas, Cerrado e Mata Atlântica. Esta ampliação espacial do esforço amostral se faz necessária devido à grande relação entre esforço e número de capturas. Sendo assim, quanto maior o número de locais amostrados, maior a abundância, riqueza e diversidade de borboletas conhecidas (@Freitas_2024).  \n\nUm fator indispensável para um programa de monitoramento é a sua amostragem temporal (@Middlebrook_2023). As amostragens ao longo do tempo (anos) possibilitam detectar variações ou estabilidade na abundância, riqueza e composição de espécies em uma determinado local ou região (@Mattoni_2001; @VanSwaay_2015; @Middlebrook_2023; @Freitas_2024). Portanto, além da ampliação da amostragem em termos espaciais, deve-se, principalmente, priorizar a continuidade das amostragens ao longo dos anos, pois somente desta forma análises temporais robustas poderão ser realizadas para a detecção consistente de eventuais flutuações temporais dos indicadores escolhidos. A interpretação dos dados é dificultada pelos acréscimos, decréscimos ou substituições de UCs ao longo dos anos. Com as diferenças ambientais de cada UC, a eventual falta de constância nas amostragens das UCs analisadas resulta em dados muitas vezes inconsistentes e dispersos, dificultando a obtenção de resultados sólidos para a região. Portanto, torna-se importante analisar a comunidade de borboletas frugívoras  de cada UC separadamente para evitar a influência dos dados de outras UCs na interpretação dos dados regionais. É importante ressaltar que o Programa Monitora ainda está na fase de estruturação, crescimento e consolidação. Os programas de monitoramento de borboletas em países temperados estão estabelecidos há décadas, como por exemplo o [The United Kingdom Butterfly Monitoring Scheme (UKBMS)](https://ukbms.org/), iniciado em 1976, e coletando dados anualmente em mais de 3.000 locais na Grã-Bretanha.  \n\nA tribo Satyrini tem sido a mais representativa em todas as localidades amostradas, um resultado comum, dado que é a tribo de borboletas frugívoras com mais espécies (Espeland et al. 2023). Devido à sua grande diversidade, não é considerada uma tribo indicadora de um determinado tipo florestal, pois inclui várias espécies que habitam diversos ambientes, desde florestas fechadas até florestas abertas e perturbadas. Em contraste, as borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) e as indicadoras de florestas abertas/perturbadas (Ageroniini, Callicorini e Biblidini), parecem representar bem seus respectivos ambientes. Um resultado interessante observado foi que as borboletas indicadoras de florestas fechadas tendem a apresentar uma abundância mais constante ao longo dos anos do que as borboletas de florestas abertas/perturbadas. Esse padrão está intimamente ligado à história natural desses organismos, frequentemente relacionada ao ambiente amostrado. Como as amostragens são realizadas predominantemente em áreas protegidas florestais, espera-se que as borboletas indicadoras de florestas fechadas/preservadas sejam mais representativas do que as de florestas abertas/perturbadas. Portanto, a representatividade de borboletas de florestas abertas na Amazônia, por exemplo, indica uma mudança local importante, como a queda de uma floresta de taboca, ou uma alteração climática intensa na região. Assim, as flutuações intensas de borboletas de florestas abertas ao longo dos anos refletem mudanças, enquanto as pequenas flutuações de borboletas indicadoras de florestas fechadas indicam estabilidade. Com base nessas observações, esses grupos se mostram ótimos modelos para a interpretação ambiental. No entanto, para avaliação de eventuais relações causais são necessárias pesquisas mais detalhadas focadas nas questões climáticas e ambientais, como alteração de uso da terra, degradação das florestas e deriva de agrotóxicos.  \n\nAs borboletas são amplamente utilizadas como indicadores de mudanças climáticas e ambientais em vários locais do mundo (@VanSwaay_2008; @Staats_2014; @Roy_2015; @VanSwaay_2015; @Sanderson_2021). Os monitoramentos com séries temporais mais longas vêm sendo realizados em países do norte global, especialmente na Europa. Esses monitoramentos, frequentemente, utilizam a abordagem de ciência cidadã, envolvendo a população local no registro de espécies de borboletas. Esses países têm uma diversidade de espécies muito menor que o Brasil, o que torna relativamente mais fácil a obtenção de dados no nível de espécies. O Programa Monitora utiliza o protocolo básico de borboletas (i.e., tribo como nível taxonômico) por ser mais simples de replicar, considerando que algumas áreas podem ter mais de 100 espécies de borboletas frugívoras. Além disso, essas áreas abrigam muitas espécies crípticas, tornando a identificação a nível específico muitas vezes bastante difícil ou mesmo inviável. Assim, ressaltamos a importância de iniciativas como o Programa Monitora para avaliar a eficácia do uso de tribos de borboletas em monitoramentos e diagnósticos ambientais. Conforme citado ao longo do relatório, é importante que os indivíduos amostrados nas UCs sejam fotografados para que especialistas possam identificá-los no nível de espécie ou morfoespécie, aumentando a assertividade e a confiabilidade dos resultados do monitoramento.  \n\n\n\n## Recomendações\n\n\n</br>\n\n\n::: callout-tip\n\n## Boas práticas para aprimorar o Programa\n\n</br>\n\n- Ampliar o número de unidades de conservação com aplicação do protocolo de borboletas frugívoras (Básico e Avançado) nos biomas Mata Atlântica e Cerrado, dado que esses biomas não chegaram a atingir a suficiência amostral em nenhum ano desde o início do Programa; \n\n- Na Região Climática Noroeste da Amazônia, implementar o protocolo de borboletas frugívoras em pelo menos três UCs (nove EAs), preferencialmente na ESEC Juami-Japurá, no PARNA do Pico da Neblina e na RESEX Auatí-Paraná;  \n\n- Ampliar o número de UCs com aplicação do protocolo de borboletas frugívoras nas regiões do médio e baixo rio Juruá, regiões carentes de amostragem de borboletas e de extrema importância biológica. É sugerida a implementação nas RESEX Médio e Baixo Juruá e na FLONA de Tefé;  \n\n- Ampliar o número de UCs com aplicação do protocolo de borboletas frugívoras na Região Climática Sudeste Amazônica de forma que seja alcançada a suficiência amostral de 18 EAs no ano. Sugere-se a implementação na FLONA de Carajás, na REBIO Nascentes da Serra do Cachimbo e na ESEC Iquê;  \n\n- Consolidar a implantação do protocolo de borboletas frugívoras naquelas unidades de conservação ainda não consolidadas, de forma que as UCs contem com pelo menos três estações amostrais implantadas e em operação; \n\n- Assegurar que durante as campanhas de campo as amostragens sejam realizadas de acordo com as diretrizes estabelecidas no protocolo amostral, em especial quanto ao respeito aos períodos de coleta definidos para cada região e em relação ao esforço amostral (número de dias de amostragens em cada EA); \n\n- Assegurar que os dados coletados sejam repassados à COMOB de acordo com as orientações definidas e em prazo razoável após a realização da campanha de campo;  \n\n- Informar novamente às UCs os períodos indicados para amostragem nas diferentes regiões, dado que ainda há várias unidades amostrando fora desse período. \n\n::: \n\n</br>\n\n## Referências\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"freese":"auto","engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"cap04.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Caderno de Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Baixar código-fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Modified","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjectura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","csl":"ecology_alterado2.csl","opts_chunk":{"fig.align":"center"},"theme":["cosmo","custom.scss"],"callout-appearance":"simple","title":"Borboletas frugívoras","bibliography":["referencias_cap04.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}