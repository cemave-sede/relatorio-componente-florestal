{"title":"Borboletas frugívoras","markdown":{"headingText":"Borboletas frugívoras","containsRefs":false,"markdown":"```{r library, echo=FALSE, message=FALSE, warning=FALSE}\n\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(descr)\nlibrary(RColorBrewer)\nlibrary(kableExtra)\nlibrary(knitr)\nlibrary(DT)\nlibrary(plotly)\nlibrary(ggthemes)\nlibrary(forcats)\nlibrary(leaflet)\nlibrary(sf)\nlibrary(rgdal)\nlibrary(treemapify)\nlibrary(reshape2)\nlibrary(randomcoloR)\nlibrary(gridExtra)\n```\n\n\n\n</br>\n\n**Isabela Freitas Oliveira**^1-2^ & **Onildo João Marini Filho**^1^\n\n\n1. Centro Nacional de Pesquisa e Conservação da Biodiversidade do Cerrado e Restauração Ecológica - CBC  \n*Instituto Chico Mendes de Conservação da Biodiversidade – ICMBio*  \n*Parque Nacional de Brasília*  \n*Via Epia, BR-450, Km 8,5*  \n*70635-800 Brasília, DF*  \n\n2. Coordenação de Monitoramento da Biodiversidade - COMOB  \n*Instituto Chico Mendes de Conservação da Biodiversidade – ICMBio*  \n*Complexo Administrativo EQSW 103/104 s/n*  \n*70670-350 Brasília, DF*  \n\n</br>\n\n\nOs insetos estão entre os organismos mais diversos e ameaçados do mundo (@Cardoso_2020; @Wagner_2020; @Janzen_2021). Entender como essa diversidade está distribuída no tempo e no espaço é crucial, visto que muitas espécies estão sendo extintas antes mesmo de serem descobertas pela ciência (@Eggleton_2020; @Liu_2022). O Brasil, um país extenso e megadiverso, conta com poucos projetos de longo prazo (mais de cinco anos) voltados a investigar padrões de diversidade locais e regionais,  especialmente em grupos de invertebrados como insetos (@Costa_2020). A maioria das pesquisas abrange escalas locais e curtos períodos de tempo (@Ribeiro_2010; @Graca_2016; @Beirao_2017; @Araujo_2020;  @Oliveira_2021; @Bellaver_2022; @Brito_Freire_2022), contribuindo significativamente para a compreensão de padrões de diversidade específicos, mas ressaltando a importância da implementação de projetos de longa duração em diversas áreas do país. \n\nNas últimas décadas, as borboletas frugívoras têm sido utilizadas como organismos modelo em monitoramentos de fauna em diversos países da região tropical (@Hughes_1998; @Molleman_2006; @DeVries_2012; @Aduse-Poku_2012; @Nyafwono_2014; @VanSwaay_2015; @Freitas_2024). A seleção deste grupo se deve à sua grande diversidade e significância ecológica, aliada à facilidade de amostragem por meio de armadilhas atrativas (@LucciFreitas_2014). O uso dessas armadilhas possibilita a amostragem simultânea em várias áreas, padronizando o esforço amostral e reduzindo a chance de viés nos dados. Além disso, as borboletas frugívoras são altamente sensíveis a alterações ambientais, o que as torna indicadoras valiosas de perturbações nos *habitat* (@Bonebrake_2010; @Oliveira_2018). Essas transformações ambientais em escala local ou regional podem influenciar nas variações no número de espécies e indivíduos das borboletas, bem como nas mudanças de composição da comunidade (@Oliveira_2023). Assim, devido ao seu curto ciclo de vida, estas mudanças na comunidade de borboletas são observadas relativamente rápido. Outros fatores determinantes para a escolha de borboletas frugívoras em estudos de monitoramento são a relativa facilidade na identificação e sua boa resolução taxônomica, quando comparadas a outros grupos de insetos. \n\nNeste capítulo, serão apresentados os resultados gerais da aplicação do protocolo básico de borboletas frugívoras em unidades de conservação (UCs) federais do Programa Monitora. Alguns resultados por UC poderão ser encontrados no **Apêndice X** deste relatório.  \n\n</br>\n\n## Métodos, implementação e validação protocolar\n\n</br>\n\n\nOs métodos de amostragem das borboletas frugívoras seguiram o Roteiro Metodológico do Programa Monitora (@Nobre_2014) e uma breve descrição geral dos procedimentos adotados é apresentada no capítulo 2 deste relatório. O protocolo amostral básico de borboletas frugívoras (com identificação taxonômica no nível de tribo - @Nobre_2014) foi aplicado de 2014 a 2022, de forma integral ou parcial, em 50 Unidades de Conservação (UCs) federais, totalizando 134 estações amostrais (EAs) e 536 unidades amostrais (UAs - transecções com quatro armadilhas atrativas do tipo *Van Someren-Rydon*). A maior parte das amostragens (39 UCs, 78%) foi realizada no bioma Amazônico, seis UCs (12%) foram amostradas na Mata Atlântica e cinco UCs (10%) no Cerrado. Até 2022, das 50 UCs federais com coleta de dados de borboletas frugívoras, 31 (62%) estão consolidadas, com pelo menos três EAs e 12 UAs implantadas: ESEC da Terra do Meio, ESEC de Maracá, ESEC do Jari, FLONA de Tapajós, FLONA do Jamari, PARNA da Amazônia, PARNA da Serra da Cutia, PARNA da Serra do Divisor, PARNA de Pacaás Novos, PARNA do Cabo Orange, PARNA do Jaú, PARNA do Juruena, PARNA do Superagui, PARNA dos Campos Amazônicos, PARNA Mapinguari, PARNA Montanhas do Tumucumaque, PARNA Nascentes do Lago Jari, REBIO do Gurupi, REBIO do Jaru, REBIO do Tapirapé, REBIO do Uatumã, RESEX Arapixi, RESEX Barreiro das Antas, RESEX Chico Mendes, RESEX do Alto Tarauacá, RESEX do Cazumbá-Iracema, RESEX do Rio do Cautário, RESEX Renascer, RESEX Rio Ouro Preto, RESEX Riozinho da Liberdade e RESEX Tapajós-Arapiuns (ver **Tabela xx do Cap. 2 para lista completa das UCs**).  \n\n\nA partir de xxxx, xx UCs (XX%) adotaram o *Open Data Kit* (ODK), um aplicativo Android de código aberto que possibilita a coleta de dados em campo de forma mais eficiente e confiável, substituindo os formulários em papel. Ele armazena diversos tipos de informação como textos, dados numéricos, coordenadas geográficas, áudio, imagens, vídeo e códigos de barras, sendo projetado para funcionar mesmo sem conectividade à *internet*. O ODK favorece o registro de armadilhas com zero capturas, informação muitas vezes desconsiderada quando a amostragem é feita com formulários tradicionais. Além disso, só é possível adicionar as fotos das borboletas no sistema quando as coordenadas da unidade amostral de cada EA são registradas, certificando que a coleta foi, de fato, feita no local correto. Com as fotos das borboletas no sistema, especialistas podem identificar os indivíduos em nível de espécie ou morfoespécie, possibilitando a análise dos dados de acordo com o protocolo avançado.  \n\nConforme mencionado no capítulo 2, as amostragens de borboleta frugívoras foram paralisadas ou reduzidas no período mais intenso da pandemia de COVID (2020-21). Em 2020, 13 UCs fizeram coletas, porém, somente o PARNA da Amazônia, PARNA Serra da Cutia, PARNA de Pacaás Novos, PARNA Mapinguari, REBIO do Uatumã e RESEX Barreiro das Antas coletaram nas três EAs. Em 2021, as atividades foram retomadas em 31 UCs (@fig-evolucao-implementacao e @fig-esforco-amostral).  \n\nAo longo dos anos, houve uma progressão no número de UCs e EAs amostradas (exceto em 2020). Em 2022, a amostragem de borboletas frugívoras ocorreu nos três biomas florestais e foi realizada em 39 das 50 UCs do Componente Florestal do Programa Monitora, oito a mais do que 2021, representando um aumento de 35.4% no número de EAs implementadas (@fig-evolucao-implementacao; Apêndice B1). \n\n\n</br>\n\n \n```{r grafico ucs_ativas_taxa_acumulado}\n#| label: fig-evolucao-implementacao\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Evolução do número de unidades de conservação (UCs) e de estações amostrais (EAs) com amostragem de borboletas frugívoras no Programa Monitora de 2014 a 2022.\"\n\n# Gráficos de dados Borboletas- Protocolo básico\n# Numero de UC's e EA's implementadas 2014-2022\n# Script: Isabela Freitas Oliveira\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(stringr)\n\ndados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\ndados_borboletas$ano <- factor(dados_borboletas$ano)\ndados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n\n# Preparar os dados para o gráfico\ncontagem_uc_ea <- dados_borboletas %>%\n  group_by(ano) %>%\n  summarise(\n    num_uc = n_distinct(uc),\n    num_ea = n_distinct(uc_ea)\n  )\n\ndados_long <- contagem_uc_ea %>%\n  pivot_longer(\n    cols = -ano,\n    names_to = \"categoria\",\n    values_to = \"contagem\"\n  )\n\ndados_long$categoria <- factor(dados_long$categoria, levels = c(\"num_uc\",\"num_ea\"))\ngrafico_amostragens <- ggplot(dados_long, aes(x = ano, y = contagem, fill = categoria)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_text(\n    aes(label = contagem), \n    position = position_dodge(width = 0.9), # ajustar 'width' para alinhar com as barras\n    vjust = -0.50, # ajustar 'vjust' para mover o texto um pouco acima das barras\n    size = 3\n  ) +\n  scale_fill_manual(\n    values = c(\"num_uc\" = \"#35978f\", \"num_ea\" = \"#dfc27d\"),\n    labels = c(\"UCs\", \"EAs\")) +\n  labs(\n    x = \"\",\n    y = \"\",\n    fill = \"\",\n    title = str_wrap(\"\", width = 35) # Quebra o título em duas linhas\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, hjust = 0, lineheight = 1.3),\n    legend.position = c(0.03, 1), # Define a posição da legenda no canto superior esquerdo\n    legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n    legend.box.just = \"left\", # Alinha a legenda à esquerda\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    axis.title.x = element_text(size = 14), \n    axis.text.x = element_text(size = 10),  \n    #axis.line = element_line(colour = \"gray40\"),\n    axis.line.x = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),  # remove as linhas principais da grade\n    panel.grid.minor = element_blank() \n  ) \n  #scale_y_continuous(limits = c(0, 115))\n\ngrafico_amostragens\n\n# Salvar a imagem usando ggsave()\n# ggsave(\n#  filename = \"grafico_numeros_de_uc_ea_f1.png\",\n#   plot = grafico_amostragens,\n#  device = \"png\",\n#   path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\",\n#  dpi = 300,\n#   width = 12,\n#  height = 8,\n# units = \"in\"\n# )\n\n```\n</br>\n\nPara verificar se as amostragens de borboletas frugívoras nas UCs da Amazônia seguiram o protocolo de coleta adequadamente, os dados foram submetidos a um *script* em R para validação automatizada das campanhas realizadas. Três regras de validação do protocolo foram aplicadas às EAs em cada campanha: (1) A amostragem ter sido realizada no período do ano correto para a região, (2) terem sido realizados seis dias de amostragem e (3) ter sido respeitado o intervalo mínimo de 15 e máximo de 30 dias entre campanhas. Todos os 846 registros (estação amostral de uma UC por campanha por ano) foram avaliados. Dessas, 238 (28%) violaram alguma regra do protocolo. Seis registros violaram duas regras, sendo estas expedições para locais de difícil acesso (i.e., PARNA do Monte Roraima). Em apenas um registro (EA-4 do PARNA Mapinguari na segunda campanha de 2022) as três regras foram violadas (**Tabela X no Apêndice X**).  A coleta fora do período indicado para a região correspondeu a 84% das violações. O número correto de dias de amostragem por campanha não foi cumprido em 16% das EAs,  havendo tanto EAs com mais quanto com menos dias de coleta. O intervalo mínimo de 15 dias entre campanhas não foi respeitado em 8% das EAs.  \n\nO esforço amostral de borboletas frugívoras vem aumentando desde o início da implementação do Programa Monitora (exceto em 2020). Em relação a 2014, o ano de 2015 apresentou um aumento de 121% no esforço amostral. Em 2016, houve um aumento de 134%, em 2017 o esforço aumentou 67%, em 2018 houve um crescimento de 43% e em 2019 o aumento foi de 23%. Em 2020, ano com maior impacto da pandemia, houve uma queda de 74% em relação ao ano anterior. No entanto, em 2021 o esforço amostral cresceu 234%, e em 2022 o aumento foi de 36% (@fig-esforco-amostral).  \n\nDe maneira geral, observou-se que o número de indivíduos amostrados acompanhou o esforço amostral, havendo um aumento na abundância de borboletas com o aumento do esforço amostral (@fig-esforco-amostral). Ao todo, foram capturados 85.386 indivíduos de borboletas, com um esforço amostral de 90.320 armadilhas/dia (@fig-esforco-amostral). \n\n\n</br>\n\n\n```{r grafico ucs_ativas_taxa_acumulado}\n#| label: fig-esforco-amostral\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no número de registros de borboletas frugívoras e esforço amostral (dias*armadilhas) somada para todas as UCs participantes do Programa Monitora.\"\n\n\n#Script: Isabela Freitas Oliveira\n\nlibrary(dplyr)\n\n# Ler e limpar dados_borboletas\ndados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\ndados_borboletas <- dados_borboletas %>%\n  filter(ano != \"2023\", !is.na(tribo))\n\n\n# Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\nesforco_por_expedicao <- dados_borboletas %>%\n  group_by(uc_ea, uc, expedicao, ano) %>%\n  summarize(\n    max_dia_amostragem = max(dia_amostragem) - 1,\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    esforco_amostral = 16 * max_dia_amostragem\n  )\n\n# Agregar o esforço de amostragem para cada uc_ea e ano\nesforco_total_por_ea_ano <- esforco_por_expedicao %>%\n  group_by(uc_ea, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregar o esforço de amostragem para cada uc e ano\nesforco_total_por_uc_ano <- esforco_por_expedicao %>%\n  group_by(uc, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n\n# Agregação para obter o esforço total por ano por uc\nesforco_por_ano_uc <- esforco_total_por_uc_ano %>%\n  group_by(ano,uc) %>%\n  summarize(\n    esforco = sum(esforco_total_ano),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o esforço total por ano\nesforco_por_ano <- esforco_total_por_uc_ano %>%\n  group_by(ano) %>%\n  summarize(\n    esforco = sum(esforco_total_ano),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o número total de indivíduos por ano\nnum_ind_por_ano <- dados_borboletas %>%\n  group_by(ano) %>%\n  summarize(\n    num_ind = sum(individuos, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n\n# Juntar as duas tabelas agregadas\ntabela_final_esfoco <- left_join(esforco_por_ano, num_ind_por_ano, by = \"ano\")\n#write.csv(tabela_final_esfoco, \"tabela_final_esfoco.csv\", row.names = FALSE)\n\n\n#####Fazer o gráfico de Abundancia e esforço\n# Definindo os dados para cada série separadamente\ndados_esforco <- tabela_final_esfoco[, c(\"ano\", \"esforco\")]\nnames(dados_esforco)[2] <- \"valor\"\ndados_esforco$tipo <- \"Esforço\"\n\ndados_abundancia <- tabela_final_esfoco[, c(\"ano\", \"num_ind\")]\nnames(dados_abundancia)[2] <- \"valor\"\ndados_abundancia$tipo <- \"Abundância\"\n\n# Juntando os dados\ndados_plot <- rbind(dados_esforco, dados_abundancia)\n\n# Criando o gráfico\ngrafico <- ggplot(data = dados_plot, aes(x = ano, y = valor, colour = tipo, linetype = tipo, shape = tipo)) +\n  geom_line(size = 1.0) +\n  geom_point(size = 3) +\n  scale_colour_manual(values = c(\"Esforço\" = \"#35978f\", \"Abundância\" = \"#dfc27d\")) +\n  scale_linetype_manual(values = c(\"Esforço\" = \"solid\", \"Abundância\" = \"solid\")) +\n  scale_shape_manual(values = c(\"Esforço\" = 16, \"Abundância\" = 17)) +\n  scale_y_continuous(\n    \"Esforço Amostral e Abundância\",\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    limits = c(0, 25000)\n  ) +\n  scale_x_continuous(breaks = tabela_final_esfoco$ano) +\n  labs(\n    title = \"\",\n    x = \" \",\n    y = \"Esforço Amostral e Abundância\",\n    colour = \"\",\n    shape = \"\", # Isso ajuda a garantir que as formas correspondam na legenda\n    linetype = \"\" # Isso ajuda a garantir que os tipos de linha correspondam na legenda\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = -0.5, size = 18, lineheight = 1.5), # Ajuste o lineheight conforme necessário\n    legend.position = c(0.10, 0.93), # Define a posição da legenda no canto superior esquerdo\n    legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n    legend.box.just = \"left\", # Alinha a legenda à esquerda\n    legend.box.background = element_rect(fill = \"white\", color = \"white\"),\n    axis.ticks.y = element_line(color = \"black\"),\n    axis.text.y = element_text(margin = margin(r = 5)),\n    axis.text.x = element_text(margin = margin(r = 12)),\n    axis.title.y = element_text(size = 10, margin = margin(r = 10)),\n    axis.title.x = element_text(size = 10, margin = margin(t = 10)),\n    axis.text = element_text(size = 10),\n    axis.line = element_line(colour = \"gray40\"),\n    legend.text = element_text(size = 10),\n    axis.line.x = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\ngrafico\n\n\n#knitr::include_graphics(\"imagens/cap04/bo_esforco.JPG\")\n\n```\n\n</br>\n\n## Resultados\n\n</br>\n\nApós a correção, limpeza e verificação dos dados foram contabilizadas 85.386 borboletas frugívoras capturadas de 2014 a 2022. Desse total, 915 indivíduos (1%) foram registrados como ‘NA’ em sua tribo, sem a chance de verificação por falta de fotografias. Outras 604 borboletas (0.8%), registradas como recapturas, foram desconsideradas na contagem. Na Amazônia, foram capturados 76.309 indivíduos, no Cerrado 6.378 e na Mata Atlântica 2.700 indivíduos.  \n\n\n### Regiões climáticas\n\n</br>\n\n\nOs períodos de amostragem propostos no protocolo do Programa Monitora para borboletas frugívoras na Amazônia seguem a mesma lógica aplicada para as regiões Central e Sudeste do Brasil, onde há alta abundância populacional e maior diversidade de espécies de borboletas frugívoras no final do período de chuvas intensas (@Checa_2009). Os períodos de amostragem para as regiões amazônicas apresentados a seguir baseiam-se na caracterização climática associada ao padrão de chuvas em toda a Amazônia (@Marengo_2001; @Monitora_2021). Com base na identificação dos padrões de chuva em cada região, foram definidas seis regiões climáticas que englobam as Unidades de Conservação participantes do Programa Monitora (@fig-regioes-climaticas). As regiões climáticas são: Sudoeste, Central, Leste, Sudeste, Norte e Noroeste. Isso permite determinar o período mais adequado para a amostragem (@tbl-periodos-amostragem), considerando que o regime de chuvas é uma característica regional relevante para as borboletas frugívoras (@Barlow_2007; @Checa_2009).   \n\n\n</br>\n\n```{r tabela periodos de amostragem amazonia}\n#| label: tbl-periodos-amostragem\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| tab-cap: \"Unidades de conservação por região climática da Amazônia e períodos indicados para amostragens de borboletas (final das chuvas). UCs com * situam-se em duas ou mais regiões climáticas (q. = quinzena).\"\n\ntabela_periodos_amostragem <- read.csv2(\"dados/tabelas/borboletas/tab_periodos_amostragem.csv\", fileEncoding='UTF-8', check.names=F)\n\ntab_periodos_amostragem <- kbl(tabela_periodos_amostragem,\n             booktabs = TRUE,\n             longtable = TRUE,\n             caption = \"Unidades de conservação por região climática da Amazônia e períodos indicados para amostragens de borboletas (final das chuvas). UCs com * situam-se em duas ou mais regiões climáticas (q. = quinzena).\",\n            col.names = c(\"Unidade de Conservação\", \"Região\", \"Período de Amostragem\"), align = c(\"l\", \"c\", \"c\")) %>%\n    #column_spec(3, italic = TRUE) %>%\nkable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\")\n\n\ntab_periodos_amostragem\n\n```\n\n\n</br>\n\n\nO número de UCs e EAs amostradas varia bastante entre as regiões (@fig-regioes-climaticas). Atualmente, nenhuma UC da região Noroeste da Amazônia participa do Programa Monitora aplicando o protocolo de borboletas frugívoras. No entanto, seria de extrema importância implementar esse protocolo em pelo menos três UCs nessa região: ESEC Juami-Japurá, PARNA do Pico da Neblina e RESEX Auatí-Paraná. Outra região climática em que se faz necessária a inclusão de mais UCs para o protocolo de borboletas frugívoras é a sudeste amazônica. Esta região é de extrema importância por abrigar uma rica diversidade de espécies e estar constantemente ameaçada pelo agronegócio e mineração. Sugere-se a inclusão da ESEC Iquê, REBIO Nascentes da Serra do Cachimbo, FLONA Jamanxim, PARNA Rio Novo e FLONA de Carajás. Além dessas regiões, é importante também a inclusão de UCs mais ao norte da região climática sudoeste. Assim, sugere-se a inclusão de UCs no médio e baixo rio Juruá, como as RESEX Médio Juruá, Baixo Juruá e FLONA de Tefé. \n\n\n</br>\n\n\n```{r grafico ucs_ativas_taxa_acumulado}\n#| label: fig-regioes-climaticas\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '60%'\n#| fig-cap: \"Mapa mostrando a proposta de distribuição das UCs participantes do Programa Monitora nos polígonos das regiões climáticas da Amazônia definidos em função do regime de chuvas.\"\n\nknitr::include_graphics(\"imagens/cap04/bo_mapa_ucs.jpeg\")\n\n```\n\n\n</br>\n\n\nO sudoeste amazônico foi a região com o maior número de UCs aplicando o protocolo de borboletas no período de 2014 a 2022, com 14 UCs amostradas: ESEC Rio Acre, FLONA do Jamari, PARNA da Serra da Cutia, PARNA da Serra do Divisor, PARNA de Pacaás Novos, PARNA Mapinguari, RESEX Arapixi, RESEX Barreiro das Antas, RESEX Chico Mendes, RESEX do Alto Tarauacá, RESEX do Cazumbá-Iracema, RESEX do Rio do Cautário, RESEX Rio Ouro Preto e RESEX Riozinho da Liberdade. Nesta região, as coletas foram realizadas em 44 EAs (@fig-ucs-eas-combinado).  \n\n\nDe 2014 a 2022 as amostragens de borboletas frugívoras na região climática central amazônica foram realizadas em 41 EAs em 12 UCs (@fig-ucs-eas-combinado): ESEC da Terra do Meio, FLONA de Tapajós, PARNA da Amazônia, PARNA dos Campos Amazônicos, PARNA do Jaú, PARNA Nascentes do Lago Jari, REBIO do Jaru, REBIO do Uatumã, RESEX do Lago do Capanã Grande, RESEX Riozinho do Anfrísio, RESEX Tapajós-Arapiuns e RESEX Verde para Sempre.  \n\n\nNa região leste amazônica, as amostragens se iniciaram em 2016. Até 2022, seis UCs e 17 EAs foram amostradas (@fig-ucs-eas-combinado): ESEC do Jari, PARNA do Cabo Orange, PARNA Montanhas do Tumucumaque, REBIO do Gurupi, RESEX Ipaú-Anilzinho e RESEX Renascer.  \n\nNa região sudeste amazônica, as amostragens de borboletas frugívoras também se iniciaram em 2016 e ocorreram em seis EAs, contemplando apenas duas UCs: PARNA do Juruena e REBIO do Tapirapé.  \n\nFinalmente, na região norte da Amazônia, a aplicação do protocolo de borboletas frugívoras se iniciou em 2017, com cinco UCs e nove EAs amostradas até 2022 (@fig-ucs-eas-combinado): ESEC de Maracá, ESEC de Niquiá, PARNA da Serra da Mocidade, PARNA do Monte Roraima e PARNA do Viruá. \n\n\n</br>\n\n\n```{r numero-ucs-amostradas}\n#| label: fig-numero-ucs-amostradas\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '60%'\n\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(stringr)\n\n# Carregar os dados\ndados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\ndados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n\n# Converter o ano para fator\ndados_borboletas$ano <- factor(dados_borboletas$ano)\n\n# Filtrar os dados para incluir apenas regiões da Amazônia\ndados_amazonia <- dados_borboletas %>%\n  filter(regiao %in% c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n\n# Preparar os dados para o gráfico\ncontagem_uc_amazonia <- dados_amazonia %>%\n  group_by(ano, regiao) %>%\n  summarise(num_uc = n_distinct(uc))\n\n# Definir a ordem dos níveis da variável regiao\ncontagem_uc_amazonia$regiao <- factor(contagem_uc_amazonia$regiao, levels = c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n\n\n# Cores para cada região da Amazônia\ncores_amazonia <- c(\n  \"#003c30\",\n  \"#01665e\",\n  \"#35978f\",\n  \"#80cdc1\",\n  \"#c7eae5\"\n)\n\n# Gráfico\ngrafico_uc_amazonia <- ggplot(contagem_uc_amazonia, aes(x = ano, y = num_uc, fill = regiao)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_manual(values = cores_amazonia) + # Definindo as cores manualmente\n  labs(\n    x = \"\",\n    y = \"\",\n    fill = \"\",\n    title = \"\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 26, hjust = 0, lineheight = 1.3),\n    legend.position = c(0, 1.15), # Define a posição da legenda no canto superior esquerdo\n    legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n    legend.box.just = \"left\", # Alinha a legenda à esquerda\n    legend.title = element_text(size = 20),\n    legend.text = element_text(size = 20),\n    axis.title.x = element_text(size = 20), \n    axis.text.x = element_text(size = 18),  \n    #axis.line = element_line(colour = \"gray40\"),\n    axis.line.x = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid.minor = element_blank() \n  ) \n\n# Exibir o gráfico\nprint(grafico_uc_amazonia)\n\n##f1\ngrafico_uc_amazonia <- ggplot(contagem_uc_amazonia, aes(x = ano, y = num_uc, fill = regiao)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_text(aes(label = num_uc), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) + # Adicionando os valores\n  scale_fill_manual(values = cores_amazonia) + # Definindo as cores manualmente\n  labs(\n    x = \"\",\n    y = \"\",\n    fill = \"\",\n    title = \"Número de UCs\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, hjust = 0.3, lineheight = 1.3),\n    legend.position = c(0, 1.15), # Define a posição da legenda no canto superior esquerdo\n    legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n    legend.box.just = \"left\", # Alinha a legenda à esquerda\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 8),\n    axis.title.x = element_text(size = 12), \n    axis.text.x = element_text(size = 10),  \n    #axis.line = element_line(colour = \"gray40\"),\n    axis.line.x = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank() \n  ) \n\n# Exibir o gráfico\nprint(grafico_uc_amazonia)\n\n\n# Salvar a imagem usando ggsave()\n\n# ggsave(\n#   filename = \"grafico_numeros_de_uc_amazonia_f1.png\",\n#   plot = grafico_uc_amazonia,\n#   device = \"png\",\n#   path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\",\n#   dpi = 300,\n#   width = 12,\n#   height = 8,\n#   units = \"in\"\n# )\n\n\n```\n\n\n</br>\n\n```{r numero-eas-amostradas}\n#| label: fig-numero-eas-amostradas\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '60%'\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(stringr)\n\n# Carregar os dados\ndados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\ndados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n\n# Converter o ano para fator\ndados_borboletas$ano <- factor(dados_borboletas$ano)\n\n# Filtrar os dados para incluir apenas regiões da Amazônia\ndados_amazonia <- dados_borboletas %>%\n  filter(regiao %in% c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n\n# Preparar os dados para o gráfico\ncontagem_ea_amazonia <- dados_amazonia %>%\n  group_by(ano, regiao) %>%\n  summarise(num_ea = n_distinct(uc_ea))\n\n# Definir a ordem dos níveis da variável regiao\ncontagem_ea_amazonia$regiao <- factor(contagem_ea_amazonia$regiao, levels = c(\"central\", \"sudoeste\", \"leste\", \"sudeste\", \"norte\"))\n\n\n# Cores para cada região da Amazônia\ncores_amazonia <- c(\n  \"#543005\",\n  \"#8c510a\",\n  \"#bf812d\",\n  \"#dfc27d\",\n  \"#f6e8c3\"\n)\n\n\n# Gráfico\ngrafico_ea_amazonia<-ggplot(contagem_ea_amazonia, aes(x = ano, y = num_ea, fill = regiao)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_text(aes(label = num_ea), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) + # Adicionando os valores\n  scale_fill_manual(values = cores_amazonia) + # Definindo as cores manualmente\n  labs(\n    x = \"\",\n    y = \"\",\n    fill = \"\",\n    title = \"Número de EAs\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, hjust = 0.3, lineheight = 1.3),\n    legend.position = c(0, 1.15), # Define a posição da legenda no canto superior esquerdo\n    legend.justification = c(0, 1), # Define a justificação da legenda para o canto superior esquerdo\n    legend.box.just = \"left\", # Alinha a legenda à esquerda\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 8),\n    axis.title.x = element_text(size = 12), \n    axis.text.x = element_text(size = 10),  \n    #axis.line = element_line(colour = \"gray40\"),\n    axis.line.x = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank() \n  ) \n\n# Exibir o gráfico\nprint(grafico_ea_amazonia)\n\n\n# Salvar a imagem usando ggsave()\n\n# ggsave(\n#   filename = \"grafico_numeros_de_ea_amazonia_f1.png\",\n#   plot = grafico_ea_amazonia,\n#   device = \"png\",\n#   path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\",\n#   dpi = 300,\n#   width = 12,\n#   height = 8,\n#   units = \"in\"\n# )\n\n```\n</br>\n\n```{r ucs-eas-amostradas}\n#| label: fig-ucs-eas-amostradas\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Número de unidades de conservação (UCs) e estações amostrais (EAs) do Programa Monitora na região amazônica por região climática com amostragem de borboletas frugívoras implementadas de 2014 a 2022.\"\n\n\n\nlibrary(gridExtra)\ncombinado <- grid.arrange(grafico_uc_amazonia, grafico_ea_amazonia, ncol=1)\n\n# ggsave(\n#   filename = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/ucs_eas_combinados.png\",\n#   plot = combinado,\n#   device = \"png\",\n#   dpi = 300,\n#   width = 14,\n#   height = 12,\n#   units = \"in\"\n# )\n\n``` \n\n```{r grafico ucs-eas-combinado}\n#| label: fig-ucs-eas-combinado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Número de unidades de conservação (UCs) e estações amostrais (EAs) do Programa Monitora na região amazônica por região climática com amostragem de borboletas frugívoras implementadas de 2014 a 2022.\"\n\nknitr::include_graphics(\"imagens/cap04/bo-ucs-eas-combinados.png\")\n\n```\n\n\n\n</br>\n\n\nPara maior confiabilidade das informações apresentadas neste relatório, foi estabelecido um esforço amostral mínimo por ano para os biomas. Para cada região Amazônica foi considerada uma boa amostragem um esforço amostral de 1.728 armadilhas/dia, equivalendo a pelo menos 18 EAs amostradas no ano (9 por campanha). Dessa forma, uma mesma EA devidamente amostrada nas duas campanhas do ano foi contabilizada duas vezes. Por exemplo, a REBIO do Uatumã foi a única UC da região da Amazônia Central com amostragens em 2014, totalizando seis EAs amostradas (três por  campanha). Porém, houve casos em que o protocolo amostral não foi atendido, com uma ou mais EAs amostradas apenas uma vez no ano (uma campanha). \n\n\n</br>\n\n\n## Assinatura das tribos de borboletas ao longo dos anos  \n\n</br>\n\nA assinatura de tribos de borboletas é uma forma gráfica de representar as proporções das tribos de borboletas de uma determinada comunidade presente naquele ano ou local. Ela se torna efetiva quando comparada em longo prazo ou entre locais. Com a assinatura de borboletas, detectam-se tribos mais representativas naquela comunidade amostrada, sendo possível assim, realizar diagnósticos ambientais mais informativos para aquela região ou ano.  \n\nA abordagem que vem sendo utilizada no Programa Monitora considera a existência de um gradiente na associação entre as tribos de borboletas frugívoras e a estrutura das formações florestais, variando das florestas mais alteradas e/ou abertas até florestas mais adensadas e fechadas. O protocolo adotado pelo grupo de especialistas em borboletas considera que as tribos registradas estão relacionadas aos seguintes tipos de ambientes: \n\n- florestas fechadas/conservadas: Brassolini, Haeterini e Morphini. Em situações de perturbação da floresta a abundância relativa dessas tribos diminui consistentemente; \n\n- florestas abertas/alteradas (com abertura significativa no dossel): Ageroniini, Callicorini e Biblidini. As espécies dessas tribos são favorecidas por alterações na estrutura da floresta e suas abundâncias aumentam consistentemente com perturbações locais. \n\nAs tribos Preponini, Melanitini, Anaeini, Epicaliini, Epiphilini, Coeini e Satyrini não apresentam associação clara com ambientes florestais ou não demonstram tendência definida. A abundância dessas tribos pode aumentar ou diminuir em resposta a perturbações da floresta, como abertura de clareiras ou eventuais alterações no dossel. \n\nEmbora ainda pouco disseminada em trabalhos acadêmicos, a assinatura de tribos de borboletas tem um papel importante em relatórios técnicos de iniciativas de monitoramento de fauna. É uma maneira viável de analisar e apresentar dados de um grupo com grande riqueza de espécies de uma região megadiversa, amostrado em uma escala tão ampla como o Brasil. \n\n\n```{r preparação gráficos assinaturas}\n# #| label: prep-graficos-assinaturas\n# #| echo: false\n# #| include: false\n# #| message: false\n# #| warning: false\n# #| cache: true\n# \n# # Gráficos de dados Borboletas - Protocolo básico - Amazônia regional - individual\n# ### Tribos com asterisco estão ausentes nos dados\n# ## Script: Isabela Freitas Oliveira\n# \n# library(ggplot2)\n# library(dplyr)\n# library(scales)\n# library(tools)\n# \n# # Função auxiliar para ajustar o título\n# ajustar_titulo <- function(titulo) {\n#   palavras <- strsplit(titulo, \" \")[[1]]\n#   \n#   # Palavras que necessitam de correção de acentuação\n#   correcoes <- list(\n#     \"leste\" = \"Região climática Leste Amazônica\", \"sudoeste\" = \"Região climática Sudoeste Amazônica\", \"central\" = \"Região climática Central Amazônica\",\n#     \"norte\" = \"Região climática Norte Amazônica\", \"sudeste\" = \"Região climática Sudeste Amazônica\"\n#   )\n#   \n#   palavras <- sapply(palavras, function(palavra) {\n#     # Aplicar regras específicas para certas palavras\n#     if (tolower(palavra) %in% c(\"esec\", \"flona\", \"rebio\", \"resex\", \"parna\")) {\n#       return(toupper(palavra))\n#     } else if (tolower(palavra) %in% c(\"de\", \"da\", \"do\", \"dos\", \"das\")) {\n#       return(tolower(palavra))\n#     } else {\n#       # Corrigir acentuação, se necessário\n#       palavra_corrigida <- tolower(palavra)\n#       if (palavra_corrigida %in% names(correcoes)) {\n#         return(correcoes[[palavra_corrigida]])\n#       } else {\n#         return(tools::toTitleCase(palavra))\n#       }\n#     }\n#   })\n#   \n#   return(paste(palavras, collapse = \" \"))\n# }\n# \n# \n# # Função para gerar o gráfico para cada região\n# gerar_grafico_por_regiao <- function(dados, nome_regiao) {\n#   # Preparar o título\n#   titulo <- ajustar_titulo(nome_regiao)  # Utilizando a função de ajuste de título aqui\n#   \n#   # Filtrar os dados para a região atual\n#   dados_regiao <- subset(dados, regiao == nome_regiao & bioma == \"Amazonia\")\n#   dados_regiao <- dados_regiao[!is.na(dados_regiao$tribo), ] #tirar os dados 'NA' que estão na tribo\n#   \n#   # Calcular o total de indivíduos por ano para a região atual\n#   total_individuos_por_ano <- dados_regiao %>%\n#     group_by(ano) %>%\n#     summarise(total = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Agregar dados por ano e tribo\n#   dados_agregados <- dados_regiao %>%\n#     group_by(ano, tribo) %>%\n#     summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Calcular totais e proporções\n#   total_por_ano <- dados_agregados %>%\n#     group_by(ano) %>%\n#     summarize(total = sum(frequencia), .groups = 'drop')\n#   \n#   dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n#     mutate(proporcao = frequencia / total * 100)\n#   \n#   # Ajustar proporções\n#   dados_agregados <- dados_agregados %>%\n#     group_by(ano) %>%\n#     mutate(diferenca = 100 - sum(proporcao),\n#            proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n#     ungroup() %>%\n#     dplyr::select(-diferenca, -proporcao) %>%\n#     rename(proporcao = proporcao_ajustada)\n#   \n#   # Ordem específica das tribos\n#   ordem_tribos <- c(\n#     \"Brassolini\", \"Morphini\", \"Haeterini\", \n#     \"Preponini\", \"Melanitini\", \"Anaeini\", \n#     \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n#     \"Satyrini\",\n#     \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n#   )\n#   \n#   # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n#   cores_tribos <- c(\n#     \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n#     \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n#     \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n#     \"Satyrini\" = \"gray95\",\n#     \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n#   )\n#   \n#   # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n#   cores_tribos <- cores_tribos[ordem_tribos]\n#   \n#   # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n#   dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n#   \n#   # Criar um data frame com a frequência agregada por tribo\n#   frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n#   \n#   # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n#   adicionar_asterisco <- function(nome_tribo) {\n#     # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n#     if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n#       return(paste0(nome_tribo, \"*\"))\n#     } else {\n#       return(nome_tribo)\n#     }\n#   }\n#   \n#   # Aplicar a função a cada tribo para criar o vetor de rótulos\n#   labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n#   \n#   # Criar um data frame com o número único de 'uc_ea' por ano\n#   numero_ea_por_ano <- dados_regiao %>%\n#     distinct(ano, uc_ea) %>%\n#     group_by(ano) %>%\n#     summarize(num_ea = n_distinct(uc_ea))\n#   \n#   # Construir o gráfico\n#   gg <- ggplot() +\n#     geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n#     geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n#     geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n#     scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n#     scale_x_discrete(expand = c(0, 0)) +\n#     scale_fill_manual(values = cores_tribos, \n#                       labels = labels_tribos,\n#                       breaks = ordem_tribos) +\n#     labs(title = titulo,\n#          x = \" \",\n#          y = \"Frequência relativa de ocorrência (%)\",\n#          fill = \"Tribo\") +\n#     theme_minimal() +\n#     theme(legend.position = \"right\", \n#           legend.title = element_text(size = 12), \n#           legend.text = element_text(size = 10), \n#           plot.title = element_text(hjust = 0.5, size = 16), \n#           plot.subtitle = element_text(hjust = 0.5, size = 14),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           axis.text = element_text(size = 10), \n#           axis.title = element_text(size = 10),\n#           axis.line = element_line(colour = \"gray40\"),\n#           axis.line.x = element_blank()) +\n#     guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n#   \n#   # Exibir o gráfico\n#   print(gg)\n# }\n# \n# # Carregar e preparar os dados\n# resultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\n# resultado_final$ano <- factor(resultado_final$ano)\n# resultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n\n\n```\n\n\n\n```{r preparacao graficos assinaturas}\n#| label: prep-graficos-assinaturas\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n\n\n# Gráficos de dados Borboletas - Protocolo básico - Amazônia regional - individual\n### Tribos com asterisco estão ausentes nos dados\n## Script: Isabela Freitas Oliveira\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(tools)\n\n# Função auxiliar para ajustar o título\najustar_titulo <- function(titulo) {\n  palavras <- strsplit(titulo, \" \")[[1]]\n  \n  # Palavras que necessitam de correção de acentuação\n  correcoes <- list(\n    \"leste\" = \"Região climática Leste Amazônica\", \"sudoeste\" = \"Região climática Sudoeste Amazônica\", \"central\" = \"Região climática Central Amazônica\",\n    \"norte\" = \"Região climática Norte Amazônica\", \"sudeste\" = \"Região climática Sudeste Amazônica\"\n  )\n  \n  palavras <- sapply(palavras, function(palavra) {\n    # Aplicar regras específicas para certas palavras\n    if (tolower(palavra) %in% c(\"esec\", \"flona\", \"rebio\", \"resex\", \"parna\")) {\n      return(toupper(palavra))\n    } else if (tolower(palavra) %in% c(\"de\", \"da\", \"do\", \"dos\", \"das\")) {\n      return(tolower(palavra))\n    } else {\n      # Corrigir acentuação, se necessário\n      palavra_corrigida <- tolower(palavra)\n      if (palavra_corrigida %in% names(correcoes)) {\n        return(correcoes[[palavra_corrigida]])\n      } else {\n        return(tools::toTitleCase(palavra))\n      }\n    }\n  })\n  \n  return(paste(palavras, collapse = \" \"))\n}\n\n\n# Função para gerar o gráfico para cada região\ngerar_grafico_por_regiao <- function(dados, nome_regiao) {\n  # Preparar o título\n  titulo <- ajustar_titulo(nome_regiao)  # Utilizando a função de ajuste de título aqui\n  \n  # Filtrar os dados para a região atual\n  dados_regiao <- subset(dados, regiao == nome_regiao & bioma == \"Amazonia\")\n  dados_regiao <- dados_regiao[!is.na(dados_regiao$tribo), ] #tirar os dados 'NA' que estão na tribo\n  \n  # Calcular o total de indivíduos por ano para a região atual\n  total_individuos_por_ano <- dados_regiao %>%\n    group_by(ano) %>%\n    summarise(total = sum(soma_individuos), .groups = 'drop')\n  \n  # Agregar dados por ano e tribo\n  dados_agregados <- dados_regiao %>%\n    group_by(ano, tribo) %>%\n    summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n  \n  # Calcular totais e proporções\n  total_por_ano <- dados_agregados %>%\n    group_by(ano) %>%\n    summarize(total = sum(frequencia), .groups = 'drop')\n  \n  dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n    mutate(proporcao = frequencia / total * 100)\n  \n  # Ajustar proporções\n  dados_agregados <- dados_agregados %>%\n    group_by(ano) %>%\n    mutate(diferenca = 100 - sum(proporcao),\n           proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n    ungroup() %>%\n    dplyr::select(-diferenca, -proporcao) %>%\n    rename(proporcao = proporcao_ajustada)\n  \n  # Ordem específica das tribos\n  ordem_tribos <- c(\n    \"Brassolini\", \"Morphini\", \"Haeterini\", \n    \"Preponini\", \"Melanitini\", \"Anaeini\", \n    \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n    \"Satyrini\",\n    \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n  )\n  \n  # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n  cores_tribos <- c(\n    \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n    \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n    \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n    \"Satyrini\" = \"gray95\",\n    \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n  )\n  \n  # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n  cores_tribos <- cores_tribos[ordem_tribos]\n  \n  # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n  dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n  \n  # Criar um data frame com a frequência agregada por tribo\n  frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n  \n  # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n  adicionar_asterisco <- function(nome_tribo) {\n    # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n    if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n      return(paste0(nome_tribo, \"*\"))\n    } else {\n      return(nome_tribo)\n    }\n  }\n  \n  # Aplicar a função a cada tribo para criar o vetor de rótulos\n  labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n  \n  # Criar um data frame com o número único de 'uc_ea' por ano\n  numero_ea_por_ano <- dados_regiao %>%\n    distinct(ano, uc_ea) %>%\n    group_by(ano) %>%\n    summarize(num_ea = n_distinct(uc_ea))\n  \n  # Construir o gráfico\n  gg <- ggplot() +\n    geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n    geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n    geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n    scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n    scale_x_discrete(expand = c(0, 0)) +\n    scale_fill_manual(values = cores_tribos, \n                      labels = labels_tribos,\n                      breaks = ordem_tribos) +\n    labs(title = titulo,\n         x = \"\",\n         y = \"Frequência relativa de ocorrência (%)\",\n         fill = \"Tribo\") +\n    theme_minimal() +\n    theme(legend.position = \"right\", \n          legend.title = element_text(size = 12), \n          legend.text = element_text(size = 10), \n          plot.title = element_text(hjust = 0.5, size = 16), \n          plot.subtitle = element_text(hjust = 0.5, size = 14),\n          axis.ticks.y = element_line(color = \"black\"),\n          axis.text = element_text(size = 10), \n          axis.title = element_text(size = 10),\n          axis.line = element_line(colour = \"gray40\"),\n          axis.line.x = element_blank()) +\n    guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n  \n  # Exibir o gráfico\n  print(gg)\n}\n\n# Carregar e preparar os dados\nresultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\nresultado_final$ano <- factor(resultado_final$ano)\nresultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n\n```\n\n\n\n\n\n\n\n\n### Amazônia \n\n\n</br>\n\n\nNa região climática sudoeste amazônica, foram amostradaos 34.525 indivíduos de borboletas frugívoras, 354 delas não identificadas e desconsideradas nas análises. Assim, 34.171 indivíduos foram identificados em nível de tribo: 48% Satyrini, 11% Brassolini e 9% Ageroniiini. Apesar de não serem maioria, a região sudoeste apresentou a maior proporção de tribos indicadoras de florestas abertas/perturbadas dentre as regiões da Amazônia. No caso, a tribo Ageroniini foi responsável por esse padrão, especialmente em 2019 (@fig-regiao-climatica-sudoeste-amazonica). É importante salientar que, apesar de Ageroniini ser classificada como uma tribo indicadora de florestas abertas/perturbadas, diversas espécies do gênero *Hamadryas* (e.g., *Hamadryas alicia*, *Hamadryas belladonna*, *Hamadryas velutina*) e dos gêneros *Batesia* e *Panacea* estão geralmente presentes em florestas maduras e bem conservadas. Dessa forma, torna-se ainda mais necessária a aplicação do protocolo avançado nas UCs para que, com as fotografias dos indivíduos, seja possível separar espécies na tribo que utilizam regularmente florestas abertas/perturbadas, como por exemplo *Hamadryas februa*, *Hamadryas feronia*, *Hamadryas amphinome* e *Ectima iona*, das espécies anteriormente citadas, habitantes de florestas fechadas/preservadas (@Jenkins_1983).  \n\nSeguindo os padrões de diversidade da fauna e flora amazônicas (@Ribas_2019; @Luize_2024), a região sudoeste apresentou os maiores valores de números de indivíduos por esforço amostral. Apesar de tratar-se de contagem de indivíduos, é de se esperar que a riqueza e diversidade de espécies acompanhem este padrão (@DeVries_2016). Somente a partir de 2017 o esforço amostral foi adequado para representar a região (@fig-regiao-climatica-sudoeste-amazonica). \n\n</br>\n\n```{r grafico regiao-climatica-sudoeste-amazonica}\n#| label: fig-regiao-climatica-sudoeste-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática sudoeste. Os números acima das barras indicam indivíduos registrados e os números entre parêntesis abaixo das barras se referem ao número de estações amostrais inspecionadas naquele ano.\"\n\n# Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\nregiao_interesse <- \"sudoeste\"\n\n# Gerar o gráfico para a região de interesse\ngerar_grafico_por_regiao(resultado_final, regiao_interesse)\n\n```\n\n\n\n</br>\n\nNa região climática central amazônica 25.481 borboletas frugívoras foram amostradas de 2014 a 2022. Visto que 174 não foram identificadas em nível de tribo, 25.307 indivíduos foram considerados nas análises. Desses, 43% pertencem à tribo Satyrini, a mais abundante da região, seguidos por 16% de Brassolini e 9% de Coeini. Os anos 2014 e 2020 tiveram um esforço amostral inferior àquele definido como mínimo aceitável para a região. Assim, a interpretação dos resultados nesses anos deve ser feita com cautela.  \n\nAs tribos Satyrini e Brassolini foram predominantes em praticamente todos os anos amostrados na região climática central amazônica. No entanto, em 2017 houve um aumento no número de Coeini, que foi a segunda tribo mais abundante (Figura 4.5.1). As tribos indicadoras de áreas abertas/perturbadas tiveram baixíssima representação. Porém, essas tribos tiveram um aumento no número de indivíduos em 2021 (@fig-regiao-climatica-central-amazonica). \n\n\n\n</br>\n\n\n```{r grafico regiao-climatica-central-amazonica}\n#| label: fig-regiao-climatica-central-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 na região climática central amazônica. Os números acima das barras indicam indivíduos registrados e os números entre parêntesis abaixo das barras se referem ao número de estações amostrais inspecionadas naquele ano.\"\n\n# Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\nregiao_interesse <- \"central\"\n\n# Gerar o gráfico para a região de interesse\ngerar_grafico_por_regiao(resultado_final, regiao_interesse)\n\n\n# Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_regiao_climatica_central_amazonica.png\",  # Escolha um nome adequado para o arquivo\n#        plot = gg,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04/\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height =8, units = \"in\")  # Define o tamanho da imagem\n\n```\n\n</br>\n\n\n\nNa região climática leste amazônica foram amostradas 7.969 borboletas frugívoras, com 67 indivíduos não identificados em nível de tribo. Assim, dos 7.902 indivíduos de borboletas frugívoras identificados na região leste da Amazônia, 46% corresponderam à tribo Satyrini, a mais representativa, seguida por Brassolini (15%) e Morphini (11%). Os anos 2016, 2017 e 2020 tiveram amostragens abaixo do esforço adequado para representar a região.  \n\nO padrão da proporção da abundância das tribos foi bastante estável, com pouca variação entre anos ((@fig-regiao-climatica-leste-amazonica). \n\n\n\n```{r grafico regiao-climatica-leste-amazonica}\n#| label: fig-regiao-climatica-leste-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2016 a 2022 na região climática leste amazônica. Os números acima das barras indicam indivíduos registrados e os números entre parêntesis abaixo das barras se referem ao número de estações amostrais inspecionadas naquele ano. \"\n\n# Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\nregiao_interesse <- \"leste\"\n\n# Gerar o gráfico para a região de interesse\ngerar_grafico_por_regiao(resultado_final, regiao_interesse)\n\n```\n\n</br>\n\n\n\nNa região climática sudeste amazônica a amostragem não atingiu o valor mínimo do esforço amostral estabelecido para as análises. Esta é uma região com somente duas UCs aplicando o protocolo de borboletas frugívoras e se faz necessário o aumento no número de UCs participantes.  \n\n\nAo todo, foram amostrados 5.042 indivíduos de borboletas frugívoras na região sudeste amazônica. Desses, 48 indivíduos foram descartados na análise por não terem sido identificados. Assim, 4.994 borboletas frugívoras foram identificadas em nível de tribo. Dentre as mais abundantes destacaram-se Satyrini (58%), Epicaliini (11%) e Morphini (11%). O padrão da proporção das tribos ao longo dos anos variou pouco (@fig-regiao-climatica-sudeste-amazonica), provavelmente pelo baixo número de UCs, visto que amostragens em diferentes UCs tendem a capturar diferentes padrões, mesmo numa mesma região (e.g., região sudoeste).  \n\n\n</br>\n\n```{r grafico regiao-climatica-sudeste-amazonica}\n#| label: fig-regiao-climatica-sudeste-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2016 a 2022 na região climática sudeste amazônica. Não houve amostragem em 2020. Os números acima das barras indicam indivíduos registrados e os números entre parêntesis abaixo das barras se referem ao número de estações amostrais inspecionadas naquele ano.\"\n\n# Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\nregiao_interesse <- \"sudeste\"\n\n# Gerar o gráfico para a região de interesse\ngerar_grafico_por_regiao(resultado_final, regiao_interesse)\n\n```\n\n</br>\n\n\nNa região climática norte amazônica o esforço mínimo para a representação da comunidade de borboletas frugívoras não foi atingido em nenhum ano. Uma das razões é a complexidade logística para a amostragem em algumas UCs do norte da Amazônia. Por exemplo, as amostragens no PARNA do Monte Roraima precisam ser feitas na forma de expedições, devido às dificuldades de acesso através da Terra indígena Raposa Serra do Sol, levando dias por terra ou com um alto custo utilizando aviões monomotores. Outro fator que influenciou a diminuição do número de EAs amostradas foi a invasão da ESEC Maracá por garimpeiros em 2019, com ameaças e roubo de equipamentos da UC. A ESEC Maracá era a única UC consolidada nao região Norte. Assim, é necessário se reestabelecer a amostragem na ESEC Maracá e aumentar o número de EAs implementadas no PARNA da Serra da Mocidade, na ESEC de Niquiá e no PARNA do Viruá. \n\nAo todo, foram amostradas 3.303 borboletas frugívoras nessa região. Dessas, 190 não foram identificadas em nível de tribo, tendo sido descartadas, de forma que 3.113 indivíduos identificados foram considerados na análise. Dentre as tribos mais abundantes destacam-se Satyrini, Brassolini e Preponini, com 55%, 15% e 6%, respectivamente. \n\nO padrão da assinatura das tribos nos anos não variou drasticamente. Porém, o número de indivíduos foi bastante influenciado pelo número de estações amostrais (@fig-regiao-climatica-norte-amazonica). \n\n</br>\n\n```{r grafico regiao-climatica-norte-amazonica}\n#| label: fig-regiao-climatica-norte-amazonica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2017 a 2022 na região climática norte amazônica. Os números acima das barras indicam indivíduos registrados e os números entre parêntesis abaixo das barras se referem ao número de estações amostrais inspecionadas naquele ano. O asterisco indica tribo ausente na amostragem. \"\n\n# Definir a região de interesse - colocar as regiões 'norte', 'sudoeste', 'sudeste', 'leste', 'central'\nregiao_interesse <- \"norte\"\n\n# Gerar o gráfico para a região de interesse\ngerar_grafico_por_regiao(resultado_final, regiao_interesse)\n\n```\n\n</br>\n\n\n### Cerrado e Mata Atlântica  \n\n</br>\n\nAté o momento, poucas UCs dos biomas Cerrado e Mata Atlântica aplicaram o protocolo de amostragem de borboletas frugívoras. Dessa forma, os resultados apresentados aqui requerem cautela na interpretação. \n\nNo Cerrado foram amostrados 6.378 indivíduos (67 deles não identificados em nível de tribo), sendo 6.311 considerados nas análises. As tribos mais representativas no Cerrado foram Satyrini, Ageroniini e Biblidini com 40%, 14% e 8%, respectivamente. É importante ressaltar que as amostragens no Cerrado foram feitas em ambientes mésicos, ou seja, em ambientes florestais úmidos imersos no ambiente savânico. Estes ambientes podem ser capões de mata ou matas ripárias. Dessa forma, é de se esperar que tribos indicadoras tanto de florestas úmidas quanto de florestas abertas sejam representadas.\n\nOs padrões anuais apresentaram grandes variações na proporção das tribos indicadoras, especialmente de Brassolini, Morphini, Biblidini e Ageroniini (@fig-regiao-cerrado). \n\n \n\n</br>\n\n```{r assinatura cerrado}\n#| label: fig-regiao-cerrado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 no Cerrado. Não houve amostragem em 2020. Os números acima das barras indicam indivíduos registrados e os números entre parêntesis abaixo das barras se referem ao número de estações amostrais inspecionadas naquele ano. O asterisco indica tribo ausente na amostragem.\"\n\n# Gráficos de dados Borboletas - Protocolo básico - Cerrado -\n### Tribos com asterisco estão ausentes nos dados\n## Script: Isabela Freitas Oliveira\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(tools)\n\n\n# Função auxiliar para ajustar o título\najustar_titulo <- function(titulo) {\n  palavras <- strsplit(titulo, \" \")[[1]]\n  \n  # Palavras que necessitam de correção de acentuação\n  #correcoes <- list(\n   # \"Cerrado\" = \"Cerrado\")\n  \n}\n\n# Função para gerar o gráfico para cada unidade de conservação\ngerar_grafico_por_bioma <- function(dados, nome_bioma) {\n  # Preparar o título com as novas regras\n  titulo <- gsub(\"_\", \" \", nome_bioma)\n  titulo <- ajustar_titulo(titulo)  # Utilizando a função de ajuste de título aqui\n  \n  # Filtrar os dados para a unidade de conservação atual\n  dados_bioma <- subset(dados, bioma == nome_bioma & bioma == \"Cerrado\")\n  dados_bioma <- dados_bioma[!is.na(dados_bioma$tribo), ] #tirar os dados 'NA' que estão na tribo\n  \n  # Calcular o total de indivíduos por ano para a região atual\n  total_individuos_por_ano <- dados_bioma %>%\n    group_by(ano) %>%\n    summarise(total = sum(soma_individuos), .groups = 'drop')\n  \n  # Agregar dados por ano e tribo\n  dados_agregados <- dados_bioma %>%\n    group_by(ano, tribo) %>%\n    summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n  \n  # Calcular totais e proporções\n  total_por_ano <- dados_agregados %>%\n    group_by(ano) %>%\n    summarize(total = sum(frequencia), .groups = 'drop')\n  \n  dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n    mutate(proporcao = frequencia / total * 100)\n  \n  # Ajustar proporções\n  dados_agregados <- dados_agregados %>%\n    group_by(ano) %>%\n    mutate(diferenca = 100 - sum(proporcao),\n           proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n    ungroup() %>%\n    dplyr::select(-diferenca, -proporcao) %>%\n    rename(proporcao = proporcao_ajustada)\n  \n  # Ordem específica das tribos\n  ordem_tribos <- c(\n    \"Brassolini\", \"Morphini\", \"Haeterini\", \n    \"Preponini\", \"Melanitini\", \"Anaeini\", \n    \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n    \"Satyrini\",\n    \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n  )\n  \n  # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n  cores_tribos <- c(\n    \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n    \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n    \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n    \"Satyrini\" = \"gray95\",\n    \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n  )\n  \n  # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n  cores_tribos <- cores_tribos[ordem_tribos]\n  \n  # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n  dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n  \n  # Criar um data frame com a frequência agregada por tribo\n  frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n  \n  # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n  adicionar_asterisco <- function(nome_tribo) {\n    # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n    if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n      return(paste0(nome_tribo, \"*\"))\n    } else {\n      return(nome_tribo)\n    }\n  }\n  \n  # Aplicar a função a cada tribo para criar o vetor de rótulos\n  labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n  \n  # Criar um data frame com o número único de 'uc_ea' por ano\n  numero_ea_por_ano <- dados_bioma %>%\n    distinct(ano, uc_ea) %>%\n    group_by(ano) %>%\n    summarize(num_ea = n_distinct(uc_ea))\n  \n  # Construir o gráfico\n  gg <- ggplot() +\n    geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n    geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n    geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n    scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n    scale_x_discrete(expand = c(0, 0)) +\n    scale_fill_manual(values = cores_tribos, \n                      labels = labels_tribos,\n                      breaks = ordem_tribos) +\n    labs(title = titulo,\n         x = \" \",\n         y = \"Frequência relativa de ocorrência (%)\",\n         fill = \"Tribo\") +\n    theme_minimal() +\n    theme(legend.position = \"right\", \n          legend.title = element_text(size = 12), \n          legend.text = element_text(size = 10), \n          plot.title = element_text(hjust = 0.5, size = 16), \n          plot.subtitle = element_text(hjust = 0.5, size = 14),\n          axis.ticks.y = element_line(color = \"black\"),\n          axis.text = element_text(size = 10), \n          axis.title = element_text(size = 10),\n          axis.line = element_line(colour = \"gray40\"),\n          axis.line.x = element_blank()) +\n    guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n  \n  \n  # Exibir o gráfico\n  print(gg)\n  \n  # Retorna o gráfico para que possa ser salvo externamente\n  return(gg)\n  \n}\n\n# Carregar e preparar os dados\nresultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\nresultado_final$ano <- factor(resultado_final$ano)\nresultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n\n# Obter todas as UC's do bioma Cerrado\nbiomas <- unique(resultado_final$bioma[resultado_final$bioma == \"Cerrado\"])\n\n# Aplicar a função\ngraficos <- lapply(biomas, function(bioma) gerar_grafico_por_bioma(resultado_final, bioma))\n\n# Salvar a imagem usando ggsave()\n# ggsave(filename = \"bo_cerrado.png\",  # Escolha um nome adequado para o arquivo\n#        plot = graficos[[1]],  # Especifique qual gráfico da lista deseja salvar\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height = 8, units = \"in\")  # Define o tamanho da imagem\n\n\n```\n\n</br>\n\n```{r assinatura cerrado2}\n# #| label: fig-regiao-cerrado\n# #| echo: false\n# #| message: false\n# #| warning: false\n# #| cache: true\n# #| fig.pos: 'H'\n# #| out.width: '70%'\n# #| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2014 a 2022 no Cerrado. Não houve amostragem em 2020. Os números acima das barras indicam indivíduos registrados e os números entre parêntesis abaixo das barras se referem ao número de estações amostrais inspecionadas naquele ano. O asterisco indica tribo ausente na amostragem.\"\n# \n# # Gráficos de dados Borboletas - Protocolo básico - Cerrado -\n# ### Tribos com asterisco estão ausentes nos dados\n# ## Script: Isabela Freitas Oliveira\n# \n# library(ggplot2)\n# library(dplyr)\n# library(scales)\n# library(tools)\n# \n# \n# # Função auxiliar para ajustar o título\n# ajustar_titulo <- function(titulo) {\n#   palavras <- strsplit(titulo, \" \")[[1]]\n#   \n#   # Palavras que necessitam de correção de acentuação\n#   #correcoes <- list(\n#    # \"Cerrado\" = \"Cerrado\")\n#   \n# }\n# \n# # Função para gerar o gráfico para cada unidade de conservação\n# gerar_grafico_por_bioma <- function(dados, nome_bioma) {\n#   # Preparar o título com as novas regras\n#   titulo <- gsub(\"_\", \" \", nome_bioma)\n#   titulo <- ajustar_titulo(titulo)  # Utilizando a função de ajuste de título aqui\n#   \n#   # Filtrar os dados para a unidade de conservação atual\n#   dados_bioma <- subset(dados, bioma == nome_bioma & bioma == \"Cerrado\")\n#   dados_bioma <- dados_bioma[!is.na(dados_bioma$tribo), ] #tirar os dados 'NA' que estão na tribo\n#   \n#   # Calcular o total de indivíduos por ano para a região atual\n#   total_individuos_por_ano <- dados_bioma %>%\n#     group_by(ano) %>%\n#     summarise(total = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Agregar dados por ano e tribo\n#   dados_agregados <- dados_bioma %>%\n#     group_by(ano, tribo) %>%\n#     summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n#   \n#   # Calcular totais e proporções\n#   total_por_ano <- dados_agregados %>%\n#     group_by(ano) %>%\n#     summarize(total = sum(frequencia), .groups = 'drop')\n#   \n#   dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n#     mutate(proporcao = frequencia / total * 100)\n#   \n#   # Ajustar proporções\n#   dados_agregados <- dados_agregados %>%\n#     group_by(ano) %>%\n#     mutate(diferenca = 100 - sum(proporcao),\n#            proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n#     ungroup() %>%\n#     dplyr::select(-diferenca, -proporcao) %>%\n#     rename(proporcao = proporcao_ajustada)\n#   \n#   # Ordem específica das tribos\n#   ordem_tribos <- c(\n#     \"Brassolini\", \"Morphini\", \"Haeterini\", \n#     \"Preponini\", \"Melanitini\", \"Anaeini\", \n#     \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n#     \"Satyrini\",\n#     \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n#   )\n#   \n#   # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n#   cores_tribos <- c(\n#     \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n#     \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n#     \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n#     \"Satyrini\" = \"gray95\",\n#     \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n#   )\n#   \n#   # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n#   cores_tribos <- cores_tribos[ordem_tribos]\n#   \n#   # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n#   dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n#   \n#   # Criar um data frame com a frequência agregada por tribo\n#   frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n#   \n#   # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n#   adicionar_asterisco <- function(nome_tribo) {\n#     # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n#     if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n#       return(paste0(nome_tribo, \"*\"))\n#     } else {\n#       return(nome_tribo)\n#     }\n#   }\n#   \n#   # Aplicar a função a cada tribo para criar o vetor de rótulos\n#   labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n#   \n#   # Criar um data frame com o número único de 'uc_ea' por ano\n#   numero_ea_por_ano <- dados_bioma %>%\n#     distinct(ano, uc_ea) %>%\n#     group_by(ano) %>%\n#     summarize(num_ea = n_distinct(uc_ea))\n#   \n#   # Construir o gráfico\n#   gg <- ggplot() +\n#     geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n#     geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n#     geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n#     scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n#     scale_x_discrete(expand = c(0, 0)) +\n#     scale_fill_manual(values = cores_tribos, \n#                       labels = labels_tribos,\n#                       breaks = ordem_tribos) +\n#     labs(title = titulo,\n#          x = \"\",\n#          y = \"Frequência relativa de ocorrência (%)\",\n#          fill = \"Tribo\") +\n#     theme_minimal() +\n#     theme(legend.position = \"right\", \n#           legend.title = element_text(size = 12), \n#           legend.text = element_text(size = 10), \n#           plot.title = element_text(hjust = 0.5, size = 16), \n#           plot.subtitle = element_text(hjust = 0.5, size = 14),\n#           axis.ticks.y = element_line(color = \"black\"),\n#           axis.text = element_text(size = 10), \n#           axis.title = element_text(size = 10),\n#           axis.line = element_line(colour = \"gray40\"),\n#           axis.line.x = element_blank()) +\n#     guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n#   \n#   \n#   # Exibir o gráfico\n#   print(gg)\n#   \n#   # Retorna o gráfico para que possa ser salvo externamente\n#   return(gg)\n#   \n# }\n# \n# # Carregar e preparar os dados\n# resultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\n# resultado_final$ano <- factor(resultado_final$ano)\n# resultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n# \n# # Obter todas as UC's do bioma Cerrado\n# biomas <- unique(resultado_final$bioma[resultado_final$bioma == \"Cerrado\"])\n# \n# # Aplicar a função\n# graficos <- lapply(biomas, function(bioma) gerar_grafico_por_bioma(resultado_final, bioma))\n# \n# # Salvar a imagem usando ggsave()\n# ggsave(filename = \"CE.png\",  # Escolha um nome adequado para o arquivo\n#        plot = graficos[[1]],  # Especifique qual gráfico da lista deseja salvar\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height = 8, units = \"in\")  # Define o tamanho da imagem\n\n\n```\n\n</br>\n\n\n\n\nNa Mata Atlântica 2.700 borboletas frugívoras foram amostradas. Dessas, 16 não foram identificadaos no nível de tribo, de modo que 2.684 indivíduos amostrados foram considerados na análise. A tribo Satyrini foi a mais representativa, com 27% dos indivíduos, seguida por Anaeini, com 24% e Epicaliini, com 14%. \n\nHouve uma grande variação das tribos entre anos, especialmente de Brassolini, Anaeini, Coeini e Satyrini (@fig-regiao-mata-atlantica). Verificou-se também grande variação no número de indivíduos, mesmo quando com um mesmo esforço amostral, indicando haver de fato diferenças na abundância entre regiões no bioma. O padrão das tribos do bioma reflete, principalmente, o padrão registrado no Parque Nacional do Iguaçu. Assim, é de extrema importância que as amostragens sejam feitas continuamente nas mesmas UCs e que, com a adesão de novas unidades de conservação da região ao programa de monitoramento, as amostragens nas UCs com protocolo de borboletas frugívoras já implementado sejam mantidas. \n\n\n\n</br>\n\n\n```{r assinatura mata atlântica}\n#| label: fig-regiao-mata-atlantica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Abundância relativa de tribos de borboletas frugívoras de 2015 a 2022 na Mata Atlântica. Não houve amostragem em 2020. Os números acima das barras indicam indivíduos registrados e os números entre parêntesis abaixo das barras se referem ao número de estações amostrais inspecionadas naquele ano. O asterisco indica tribo ausente na amostragem.\"\n\n\n##### Gráficos de dados Borboletas - Protocolo básico - Mata Atlantica\n### Tribos com asterisco estão ausentes no gráfico\n## Script: Isabela Freitas Oliveira\n\n# Carregar bibliotecas\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(tools)\n\n\n\n# Função auxiliar para ajustar o título\najustar_titulo <- function(titulo) {\n  palavras <- strsplit(titulo, \" \")[[1]]\n  \n  # Palavras que necessitam de correção de acentuação\n  correcoes <- list(\n    \"Mata_Atlantica\" = \"Mata Atlântica\")\n  \n}\n\n# Função para gerar o gráfico para cada unidade de conservação\ngerar_grafico_por_bioma <- function(dados, nome_bioma) {\n  # Preparar o título com as novas regras\n  titulo <- gsub(\"_\", \" \", nome_bioma)\n  titulo <- ajustar_titulo(titulo)  # Utilizando a função de ajuste de título aqui\n  \n  # Filtrar os dados para a unidade de conservação atual\n  dados_bioma <- subset(dados, bioma == nome_bioma & bioma == \"Mata_Atlantica\")\n  dados_bioma <- dados_bioma[!is.na(dados_bioma$tribo), ] #tirar os dados 'NA' que estão na tribo\n  \n  # Calcular o total de indivíduos por ano para a região atual\n  total_individuos_por_ano <- dados_bioma %>%\n    group_by(ano) %>%\n    summarise(total = sum(soma_individuos), .groups = 'drop')\n  \n  # Agregar dados por ano e tribo\n  dados_agregados <- dados_bioma %>%\n    group_by(ano, tribo) %>%\n    summarize(frequencia = sum(soma_individuos), .groups = 'drop')\n  \n  # Calcular totais e proporções\n  total_por_ano <- dados_agregados %>%\n    group_by(ano) %>%\n    summarize(total = sum(frequencia), .groups = 'drop')\n  \n  dados_agregados <- left_join(dados_agregados, total_por_ano, by = \"ano\") %>%\n    mutate(proporcao = frequencia / total * 100)\n  \n  # Ajustar proporções\n  dados_agregados <- dados_agregados %>%\n    group_by(ano) %>%\n    mutate(diferenca = 100 - sum(proporcao),\n           proporcao_ajustada = ifelse(proporcao == max(proporcao), proporcao + diferenca, proporcao)) %>%\n    ungroup() %>%\n    dplyr::select(-diferenca, -proporcao) %>%\n    rename(proporcao = proporcao_ajustada)\n  \n  # Ordem específica das tribos\n  ordem_tribos <- c(\n    \"Brassolini\", \"Morphini\", \"Haeterini\", \n    \"Preponini\", \"Melanitini\", \"Anaeini\", \n    \"Epicaliini\",\"Epiphilini\", \"Coeini\",\n    \"Satyrini\",\n    \"Callicorini\", \"Biblidini\",\"Ageroniini\"\n  )\n  \n  # Cores correspondentes às tribos - BLINDSAFE colors (3 categorias de verde, 7 categorias de cinza e 3 categorias de marrom)\n  cores_tribos <- c(\n    \"Brassolini\" = \"#35978f\", \"Morphini\" = \"#80cdc1\", \"Haeterini\" = \"#c7eae5\", \n    \"Preponini\" = \"gray65\", \"Melanitini\" = \"gray70\", \"Anaeini\" = \"gray75\", \n    \"Epicaliini\" = \"gray80\", \"Epiphilini\" = \"gray85\", \"Coeini\" = \"gray90\",\n    \"Satyrini\" = \"gray95\",\n    \"Callicorini\" = \"#f6e8c3\", \"Biblidini\" = \"#dfc27d\",\"Ageroniini\" = \"#bf812d\"\n  )\n  \n  # Ajustar a ordem e as cores das tribos com base nas tribos presentes\n  cores_tribos <- cores_tribos[ordem_tribos]\n  \n  # Assegurar que a coluna 'tribo_clean' respeite a ordem definida\n  dados_agregados$tribo <- factor(dados_agregados$tribo, levels = ordem_tribos)\n  \n  # Criar um data frame com a frequência agregada por tribo\n  frequencias_por_tribo_ano <- aggregate(frequencia ~ tribo, dados_agregados, sum)\n  \n  # Criar uma função para determinar se um asterisco deve ser adicionado ao nome da tribo\n  adicionar_asterisco <- function(nome_tribo) {\n    # Verificar se existe alguma frequência igual a zero para essa tribo em qualquer ano\n    if (any(frequencias_por_tribo_ano$tribo == nome_tribo & frequencias_por_tribo_ano$frequencia == 0)) {\n      return(paste0(nome_tribo, \"*\"))\n    } else {\n      return(nome_tribo)\n    }\n  }\n  \n  # Aplicar a função a cada tribo para criar o vetor de rótulos\n  labels_tribos <- sapply(ordem_tribos, adicionar_asterisco)\n  \n  # Criar um data frame com o número único de 'uc_ea' por ano\n  numero_ea_por_ano <- dados_bioma %>%\n    distinct(ano, uc_ea) %>%\n    group_by(ano) %>%\n    summarize(num_ea = n_distinct(uc_ea))\n  \n  # Construir o gráfico\n  gg <- ggplot() +\n    geom_bar(data = dados_agregados, aes(x = ano, y = proporcao, fill = tribo), stat = \"identity\", position = position_stack(reverse = FALSE)) +\n    geom_text(data = total_individuos_por_ano, aes(x = ano, y = 100, label = total), vjust = -0.5, size = 3, hjust = 0.5)+\n    geom_text(data = numero_ea_por_ano, aes(x = ano, y = 0, label = paste0(\"(\", num_ea, \")\")), vjust = 1.5, size = 3, hjust = 0.5, color = \"gray40\") +\n    scale_y_continuous(labels = scales::number_format(scale = 1, accuracy = 1), limits = c(0, 100))+\n    scale_x_discrete(expand = c(0, 0)) +\n    scale_fill_manual(values = cores_tribos, \n                      labels = labels_tribos,\n                      breaks = ordem_tribos) +\n    labs(title = titulo,\n         x = \" \",\n         y = \"Frequência relativa de ocorrência (%)\",\n         fill = \"Tribo\") +\n    theme_minimal() +\n    theme(legend.position = \"right\", \n          legend.title = element_text(size = 12), \n          legend.text = element_text(size = 10), \n          plot.title = element_text(hjust = 0.5, size = 16), \n          plot.subtitle = element_text(hjust = 0.5, size = 14),\n          axis.ticks.y = element_line(color = \"black\"),\n          axis.text = element_text(size = 10), \n          axis.title = element_text(size = 10),\n          axis.line = element_line(colour = \"gray40\"),\n          axis.line.x = element_blank()) +\n    guides(fill = guide_legend(title = \"Tribos\", reverse = FALSE))\n  \n  # Exibir o gráfico\n  print(gg)\n}\n\n# Carregar e preparar os dados\nresultado_final <- read.csv(\"dados/borboletas/resultado_final.csv\", header = TRUE)\nresultado_final$ano <- factor(resultado_final$ano)\nresultado_final$tribo <- gsub(\"\\\\*\", \"\", resultado_final$tribo)\n\n# Obter todas as UC's do bioma Mata Atlântica\nbiomas <- unique(resultado_final$bioma[resultado_final$bioma == \"Mata_Atlantica\"])\n\n# Aplicar a função\ngraficos <- lapply(biomas, function(bioma) gerar_grafico_por_bioma(resultado_final, bioma))\n\n# Salvar a imagem usando ggsave()\n# ggsave(filename = \"mata_atlantica.png\",  # Escolha um nome adequado para o arquivo\n#        plot = graficos[[1]],  # Especifique qual gráfico da lista deseja salvar\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/imagens/cap04\",  # Especifique o diretório onde você deseja salvar o gráfico\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 10, height = 8, units = \"in\")  # Define o tamanho da imagem\n\n\n```\n\n</br>\n\n\n```{r assinatura mata atlântica2}\n\n```\n\n</br>\n\n\n\n### Índices de abundância de tribos  \n\n</br>\n\n\nPara avaliar flutuações na abundância das tribos de borboletas ao longo dos anos foi usado um índice considerando somente as tribos indicadoras de florestas preservadas e perturbadas. Para isso, os indivíduos das tribos Brassolini, Morphini e Haeterini registrados em cada ano foram somados, com os totais resultantes representando conjuntamente as borboletas de ambientes fechados/preservados. O mesmo foi feito para as borboletas de florestas abertas/perturbadas: Callicorini, Biblidini e Ageroniini. Os valores do índice de abundância de cada tribo por ano são apresentados no **Apêndice xx**.  \n\n\n</br>\n\n#### Cálculo do índice \n\n</br>\n\nNeste relatório, foram adotadas duas abordagens no cálculo do índice de abundância. Na primeira, o índice segue o princípio do Live Planet Index (LPI), no qual oscilações “populacionais” podem ser detectadas comparando-se o valor do índice de um dado ano ao valor do primeiro ano de ocorrência da “população” sob análise. Na segunda, o índice possibilita a detecção de flutuações de abundância de um ano em relação ao ano anterior.  \n\n\nO índice de abundância *(i)* tem como base o número acumulado de indivíduos de cada tribo em cada ano *(t)* numa dada área. A partir do número de indivíduos registrados por ano *(n)* para cada grupo de borboletas indicadoras, é feita uma correção, somando-se um valor muito pequeno para evitar a presença de zeros na matriz. Desta forma, é obtida a frequência absoluta corrigida *(f~t~)* = *n* + 0,00001. Em seguida, para obtenção de um valor padronizado *(fe)*, a frequência absoluta corrigida é dividida pelo esforço amostral (número de armadilhas * número de dias de amostragem). O índice de abundância *(i~t~)* é calculado por meio da divisão da fe do ano específico *(fe~t~)* pelo valor da *fe* do primeiro ano em que a \"população\" sob análise foi registrada ou primeira ocorrência *(fe~0~)*. Considerando que a frequência corrigida apresenta grandes variações de abundância e esforço amostral entre anos, aplicou-se uma transformação logarítmica (log~10~ + 1). Considerou-se primeira ocorrência quando a abundância da “população” no ano foi ≥ 20 indivíduos. O índice de abundância da primeira ocorrência *(i~0~)* é padronizado como 1,0. Dessa forma, valores acima de 1,0 indicam um aumento e abaixo de 1,0 uma redução \"populacional” em relação ao primeiro ano de ocorrência.  \n\nA seguir, um exemplo do cálculo do índice de abundância neste formato para o terceiro ano de amostragem: \n\n\n$$f_{3} = n + 0,00001$$ \n\n\n$$fe_{3} = f_{3} / \\text{esforço} \\, \\text{anual}$$ \n\n$$i_{3} = log_{10} (fe_{3} / fe_{0}) + 1$$  \n\n\nFlutuações \"populacionais\" detectadas por meio dessa abordagem são apresentadas na @fig-regioes-amazonia a @fig-ind-abund-cerrado. \n\n\n\nNa segunda abordagem, o índice de abundância de um dado ano *(i~t~)* é calculado por meio da divisão da *fe* do ano específico *(fe~t~)* pelo valor da *fe* do ano anterior *(fe~t-1~)*. Nesta abordagem, também se aplicou uma transformação logarítmica (log10 + 1) no índice.  \n\n\nExemplo dessa forma de cálculo do índice de abundância para o terceiro ano de amostragem: \n\n\n$$f_{3} = n + 0,00001$$ \n$$fe_{3} = f_{3} / \\text{esforço} \\, \\text{anual}$$ \n$$i_{3} = log_{10} (fe_{3} / fe_{2}) + 1$$ \n\n\nEsta abordagem pode revelar, por exemplo, o quanto uma \"população\" está se 'recuperando' de um declínio no ano anterior (@tbl-ind-abund-regiao-central a @tbl-ind_abund_mata_atlantica).  \n\n\n\n</br>\n\n\n#### Regional Amazônica \n\n</br>\n\nNa primeira abordagem utilizada, o índice de abundância é calculado em relação à primeira ocorrência do grupo indicador com número de capturas ≥ 20 indivíduos. Os resultados dessa abordagem são apresentados na @fig-regioes-amazonia e os valores dos índices para cada tribo encontram-se na **tabela X** do **Apêndice Y**. \n\nOs resultados obtidos para os grupos de borboletas indicadoras não foram uniformes nas diferentes regiões climáticas da Amazônia ao longo dos anos. Enquanto nas regiões central, sudoeste e norte o índice de abundância indicou um aumento ou estabilidade na abundância das borboletas de florestas fechadas/preservadas, uma diminuição \"populacional\" foi indicada nas regiões leste e sudeste. Este é um resultado interessante, visto que as regiões sudeste e leste da Amazônia fazem parte do chamado \"arco do desmatamento\" e sofrem com os avanços de intervenções humanas como a pecuária, plantações de soja, construções de barragens, hidrelétricas e estradas (@Fearnside_2022; @Nickerson_2022; @Jakimow_2023; @Levy_2023). Dessa forma, a diminuição de borboletas indicadoras de florestas fechadas/preservadas nessas regiões pode ser um indicativo da diminuição da cobertura florestal em  nível regional, visto que as amostragens são executadas em UCs que não sofrem diretamente com estas ameaças. Porém, para que esta hipótese seja avaliada adequadamente faz-se necessário obter e incluir em futuras análises dados ambientais e climáticos na escala da região.  \n\n\nAs tribos indicadoras de florestas abertas/perturbadas apresentaram, em sua maioria, redução \"populacional\", especialmente após de 2020. Os únicos picos de aumento \"populacional\" deste grupo ocorreram em 2019, na região sudoeste da Amazônia, e em 2021, na região central. As regiões norte, leste e sudoeste (a partir de 2020) se destacaram pelas reduções e na região sudeste não foi obtido o número mínimo de 20 indivíduos para o cálculo do índice. Para entender este resultado serão necessárias análises mais refinadas utilizando imagens de satélite, dados climáticos e ambientais. No entanto, a diminuição populacional desse grupo deve, idealmente, ser avaliada num nível taxonômico mais fino, preferencialmente de espécie, para que a interpretação seja mais adequada, especialmente em relação à tribo Ageroniini.  \n\n \n\n</br>\n\n\n```{r graficos IA-regiões_climaticas_amazonia_calculos}\n#| label: fig-regioes-amazonia\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n\n\n##### Índices de abundância de tribos ao longo dos anos - Cinco regiões Amazônicas \n##Script: Isabela Freitas Oliveira\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n#########################################################\n######### Região Central Amazônica\n#########################################################\n\n# # Definir o diretório de trabalho\n#setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\ndf_indice <-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\ndf_indice <- df_indice[!is.na(df_indice$tribo), ]\n\ndados_regiao_especifica <- df_indice %>%\n  filter(bioma == \"Amazonia\", regiao == \"central\")\n\n# Agregar soma_individuos por tribo e ano\nsoma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ano) %>%\n  summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Verificar o esforço individual por uc_ea e expedicao\nesforco_individual <- dados_regiao_especifica %>%\n  group_by(uc, uc_ea, ano, expedicao) %>%\n  summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n  ungroup()\n\n# Somar os esforços por expedicao\nesforco_por_expedicao <- esforco_individual %>%\n  group_by(uc, ano, expedicao) %>%\n  summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n  ungroup()\n\n# Calcular o esforço total anual para cada ano\nesforco_total_anual <- esforco_por_expedicao %>%\n  group_by(ano) %>%\n  summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n  ungroup()\n\n# Juntar com soma_individuos_por_tribo_ano\ndf_agregado <- soma_individuos_por_tribo_ano %>%\n  left_join(esforco_total_anual, by = \"ano\") %>%\n  ungroup()\n\n# Somando os grupos de borboletas_fechadas\nborboletas_fechadas <- df_agregado %>%\n  filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_fechadas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Somando os grupos de borboletas_abertas\nborboletas_abertas <- df_agregado %>%\n  filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_abertas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Adicionando as linhas de Borboletas_fechadas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n\n# Adicionando as linhas de Borboletas_abertas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_abertas)\n\n#################################\n# Calcular o índice de abundância referente ao ano anterior\ndf_agregado_1 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         # log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_1, \"df_completo_central_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_1 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_1 %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Tabela de índices de abundancia para o relatório\ntab_boneco_central <- df_agregado_1 %>%\n  filter(!(row_number() %in% 28:45))\n\ndf_tribo_ano_largo_tab <- tab_boneco_central %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\ndf_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Salvar\n#write.table(df_tribo_ano_largo_tab, \"indice_abundancia_central_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Filtrar as linhas desejadas - borboletas indicadoras\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n  filter(row_number() %in% c(4, 5))\n\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n  mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n                        ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n\n## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n#write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_central_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n##################################\n# Calcular o índice de abundância referente ao ano de primeira ocorrencia\ndf_agregado_2 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         #log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\nungroup() %>%\nselect(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_2, \"df_completo_central_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_2 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_2 %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n# Salvar\n#write.table(df_tribo_ano_largo, \"indice_abundancia_central_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n########################\n####### Gráfico #######\n\n# Definir as cores e tipos de linha para cada tribo\ncores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\ntipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n\ndados_longos <- df_agregado_2 %>%\n  filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n\n# Criar uma sequência completa de anos\nanos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n\n# Grafico - referente ao primeiro ano de ocorrencia\ngg_grafico_primeira_ocorrencia_central <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n  geom_line(aes(group = tribo), size = 1) +\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n  scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                       \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                          \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  theme_minimal() +\n  labs(title = \"Região Climática Central Amazônica\",\n       x = \"\",\n       y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n       color = NULL,\n       linetype = NULL) +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.title = element_text(size = 18),\n        axis.text = element_text(size = 14),\n        legend.title = element_text(size = 16),\n        legend.text = element_text(size = 12),\n        axis.line = element_line(color = \"black\"),\n        axis.line.x = element_blank(),\n        legend.position = \"bottom\",\n        axis.text.x = element_text(hjust = 0.5)) +\n  scale_x_discrete(labels = as.character(anos_completos))+\n  coord_cartesian(ylim = c(0, 2))\n\n# Exibir o gráfico\nprint(gg_grafico_primeira_ocorrencia_central)\n\n# Salvar o gráfico em formato PNG\n#ggsave(\"indice_abundancia_central.png\",\n #      gg_grafico_primeira_ocorrencia_central,\n  #     width = 12,\n   #    height = 10,\n    #   units = \"in\")\n\n\n#########################################################\n######### Região Sudoeste Amazônica\n#########################################################\n\n# Definir o diretório de trabalho\n# setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\ndf_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\ndf_indice <- df_indice[!is.na(df_indice$tribo), ]\n\ndados_regiao_especifica <- df_indice %>%\n  filter(bioma == \"Amazonia\", regiao == \"sudoeste\")\n\n# Agregar soma_individuos por tribo e ano\nsoma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ano) %>%\n  summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Verificar o esforço individual por uc_ea e expedicao\nesforco_individual <- dados_regiao_especifica %>%\n  group_by(uc, uc_ea, ano, expedicao) %>%\n  summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n  ungroup()\n\n# Somar os esforços por expedicao\nesforco_por_expedicao <- esforco_individual %>%\n  group_by(uc, ano, expedicao) %>%\n  summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n  ungroup()\n\n# Calcular o esforço total anual para cada ano\nesforco_total_anual <- esforco_por_expedicao %>%\n  group_by(ano) %>%\n  summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n  ungroup()\n\n# Juntar com soma_individuos_por_tribo_ano\ndf_agregado <- soma_individuos_por_tribo_ano %>%\n  left_join(esforco_total_anual, by = \"ano\") %>%\n  ungroup()\n\n# Somando os grupos de borboletas_fechadas\nborboletas_fechadas <- df_agregado %>%\n  filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_fechadas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Somando os grupos de borboletas_abertas\nborboletas_abertas <- df_agregado %>%\n  filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_abertas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Adicionando as linhas de Borboletas_fechadas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n\n# Adicionando as linhas de Borboletas_abertas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_abertas)\n\n#################################\n# Calcular o índice de abundância referente ao ano anterior\ndf_agregado_3 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         # log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_3, \"df_completo_sudoeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_3 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo # tabela geral dos índices\ndf_tribo_ano_largo <- df_agregado_3 %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Tabela de índices de abundancia para o relatório\ntab_boneco_sudoeste <- df_agregado_3 %>%\n  filter(!(row_number() %in% 28:45))\n\ndf_tribo_ano_largo_tab <- tab_boneco_sudoeste %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\ndf_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Salvar\n#write.table(df_tribo_ano_largo_tab, \"indice_abundancia_sudoeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Filtrar as linhas desejadas - borboletas indicadoras\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n  filter(row_number() %in% c(4, 5))\n\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n  mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n                        ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n\n# Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n#write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_sudoeste_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n#################################\n# Calcular o índice de abundância referente ao ano de primeira ocorrencia\ndf_agregado_4 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         #log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_4, \"df_completo_sudoeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_4 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_4 %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n# Salvar\n#write.table(df_tribo_ano_largo, \"indice_abundancia_sudoeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n########################\n####### Gráfico #######\n\n# Definir as cores e tipos de linha para cada tribo\ncores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\ntipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n\ndados_longos <- df_agregado_4 %>%\n  filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n\n# Criar uma sequência completa de anos\nanos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n\n# Criar o gráfico com duas linhas\ngg_grafico_primeira_ocorrencia_sudoeste <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n  geom_line(aes(group = tribo), size = 1) +\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n  scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                       \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                          \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  theme_minimal() +\n  labs(title = \"Região Climática Sudoeste Amazônica\",\n       x = \"\",\n       y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n       color = NULL,\n       linetype = NULL) +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.title = element_text(size = 18),\n        axis.text = element_text(size = 14),\n        legend.title = element_text(size = 16),\n        legend.text = element_text(size = 12),\n        axis.line = element_line(color = \"black\"),\n        axis.line.x = element_blank(),\n        legend.position = \"bottom\",\n        axis.text.x = element_text(hjust = 0.5)) +\n  scale_x_discrete(labels = as.character(anos_completos))+\n  coord_cartesian(ylim = c(0, 2))\n\n# Exibir o gráfico\nprint(gg_grafico_primeira_ocorrencia_sudoeste)\n\n# Salvar o gráfico em formato PNG\n#ggsave(\"indice_abundancia_sudoeste.png\",\n #      gg_grafico_primeira_ocorrencia_sudoeste,\n  #     width = 12,\n   #    height = 10,\n    #   units = \"in\")\n\n#########################################################\n######### Região Leste Amazônica\n#########################################################\n\n# Definir o diretório de trabalho\n#setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\ndf_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\ndf_indice <- df_indice[!is.na(df_indice$tribo), ]\n\ndados_regiao_especifica <- df_indice %>%\n  filter(bioma == \"Amazonia\", regiao == \"leste\")\n\n# Agregar soma_individuos por tribo e ano\nsoma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ano) %>%\n  summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Verificar o esforço individual por uc_ea e expedicao\nesforco_individual <- dados_regiao_especifica %>%\n  group_by(uc, uc_ea, ano, expedicao) %>%\n  summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n  ungroup()\n\n# Somar os esforços por expedicao\nesforco_por_expedicao <- esforco_individual %>%\n  group_by(uc, ano, expedicao) %>%\n  summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n  ungroup()\n\n# Calcular o esforço total anual para cada ano\nesforco_total_anual <- esforco_por_expedicao %>%\n  group_by(ano) %>%\n  summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n  ungroup()\n\n# Juntar com soma_individuos_por_tribo_ano\ndf_agregado <- soma_individuos_por_tribo_ano %>%\n  left_join(esforco_total_anual, by = \"ano\") %>%\n  ungroup()\n\n# Somando os grupos de borboletas_fechadas\nborboletas_fechadas <- df_agregado %>%\n  filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_fechadas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Somando os grupos de borboletas_abertas\nborboletas_abertas <- df_agregado %>%\n  filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_abertas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Adicionando as linhas de Borboletas_fechadas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n\n# Adicionando as linhas de Borboletas_abertas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_abertas)\n\n#################################\n# Calcular o índice de abundância referente ao ano anterior\ndf_agregado_5 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         # log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_5, \"df_completo_leste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_5 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo # tabela geral dos índices\ndf_tribo_ano_largo <- df_agregado_5 %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Tabela de índices de abundancia para o relatório\ntab_boneco_leste <- df_agregado_5 %>%\n  filter(!(row_number() %in% 28:45))\n\ndf_tribo_ano_largo_tab <- tab_boneco_leste %>%\n  select(tribo, ano, indice_abundancia) %>% # Selecionar as colunas relevantes\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\ndf_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Salvar\n#write.table(df_tribo_ano_largo_tab, \"indice_abundancia_leste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Filtrar as linhas desejadas\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n  filter(row_number() %in% c(4, 5))\n\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n  mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n                        ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n\n## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n#write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_leste_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n#################################\n# Calcular o índice de abundância referente ao ano de primeira ocorrencia\ndf_agregado_6 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         #log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_6, \"df_completo_leste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_6 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_6 %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n# Salvar\n#write.table(df_tribo_ano_largo, \"indice_abundancia_leste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n########################\n####### Gráfico #######\n\n# Definir as cores e tipos de linha para cada tribo\ncores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\ntipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n\ndados_longos <- df_agregado_6 %>%\n  filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n\n# Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\nanos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n\ndados_longos <- dados_longos %>%\n  bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 2),\n                       ano = rep(c(2014, 2015), each = length(unique(dados_longos$tribo))),\n                       indice_abundancia = NA))\n\n# Grafico - referente ao primeiro ano de ocorrencia\ngg_grafico_primeira_ocorrencia_leste <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n  geom_line(aes(group = tribo), size = 1) +\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n  scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                       \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                          \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  theme_minimal() +\n  labs(title = \"Região Climática Leste Amazônica\",\n       x = \"\",\n       y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n       color = NULL,\n       linetype = NULL) +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.title = element_text(size = 18),\n        axis.text = element_text(size = 14),\n        legend.title = element_text(size = 16),\n        legend.text = element_text(size = 12),\n        axis.line = element_line(color = \"black\"),\n        axis.line.x = element_blank(),\n        legend.position = \"bottom\",\n        axis.text.x = element_text(hjust = 0.5)) +\n  scale_x_discrete(labels = as.character(anos_completos))+\n  coord_cartesian(ylim = c(0, 2))\n\nprint(gg_grafico_primeira_ocorrencia_leste)\n\n# Salvar o gráfico em formato PNG\n#ggsave(\"indice_abundancia_leste.png\",\n #      gg_grafico_primeira_ocorrencia_leste,\n  #     width = 12,\n   #    height = 10,\n    #   units = \"in\")\n\n#########################################################\n######### Região Sudeste Amazônica\n#########################################################\n\n#setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\ndf_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\ndf_indice <- df_indice[!is.na(df_indice$tribo), ]\n\ndados_regiao_especifica <- df_indice %>%\n  filter(bioma == \"Amazonia\", regiao == \"sudeste\")\n\n# Agregar soma_individuos por tribo e ano\nsoma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ano) %>%\n  summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Verificar o esforço individual por uc_ea e expedicao\nesforco_individual <- dados_regiao_especifica %>%\n  group_by(uc, uc_ea, ano, expedicao) %>%\n  summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n  ungroup()\n\n# Somar os esforços por expedicao\nesforco_por_expedicao <- esforco_individual %>%\n  group_by(uc, ano, expedicao) %>%\n  summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n  ungroup()\n\n# Calcular o esforço total anual para cada ano\nesforco_total_anual <- esforco_por_expedicao %>%\n  group_by(ano) %>%\n  summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n  ungroup()\n\n# Juntar com soma_individuos_por_tribo_ano\ndf_agregado <- soma_individuos_por_tribo_ano %>%\n  left_join(esforco_total_anual, by = \"ano\") %>%\n  ungroup()\n\n# Somando os grupos de borboletas_fechadas\nborboletas_fechadas <- df_agregado %>%\n  filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_fechadas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Somando os grupos de borboletas_abertas\nborboletas_abertas <- df_agregado %>%\n  filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_abertas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Adicionando as linhas de Borboletas_fechadas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n\n# Adicionando as linhas de Borboletas_abertas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_abertas)\n\n#####################\n# Calcular o índice de abundância referente ao ano anterior\ndf_agregado_7 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         # log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_7, \"df_completo_sudeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_7 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_7 %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Tabela de índices de abundancia para o relatório\ntab_boneco_sudeste <- df_agregado_7 %>%\n  filter(!(row_number() %in% 28:45))\n\ndf_tribo_ano_largo_tab <- tab_boneco_sudeste %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\ndf_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Salvar\n#write.table(df_tribo_ano_largo_tab, \"indice_abundancia_sudeste_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Filtrar as linhas desejadas\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n  filter(row_number() %in% c(4, 5))\n\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n  mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n                        ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n\n## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n#write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_sudeste_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n################################\n# Calcular o índice de abundância referente ao ano de primeira ocorrencia\ndf_agregado_8 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         #log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_8, \"df_completo_sudeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_8 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_8 %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n# Salvar\n#write.table(df_tribo_ano_largo, \"indice_abundancia_sudeste_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n########################\n####### Gráfico #######\n\n# Definir as cores e tipos de linha para cada tribo\ncores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\ntipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n\ndados_longos <- df_agregado_8 %>%\n  filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n\n# Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\nanos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n\ndados_longos <- dados_longos %>%\n  bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 3),\n                       ano = rep(c(2014, 2015, 2020), each = length(unique(dados_longos$tribo))),\n                       indice_abundancia = NA))\n\n# Grafico - referente ao primeiro ano de ocorrencia\ngg_grafico_primeira_ocorrencia_sudeste <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n  geom_line(aes(group = tribo), size = 1) +\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n  geom_point(data = filter(dados_longos, tribo == \"Borboletas_abertas\" & ano == 2019), aes(x = as.factor(ano), y = indice_abundancia), color = \"#CFA154\", size = 3) +\n  scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                       \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                          \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  theme_minimal() +\n  labs(title = \"Região Climática Sudeste Amazônica\",\n       x = \"\",\n       y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n       color = NULL,\n       linetype = NULL) +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.title = element_text(size = 18),\n        axis.text = element_text(size = 14),\n        legend.title = element_text(size = 16),\n        legend.text = element_text(size = 12),\n        axis.line = element_line(color = \"black\"),\n        axis.line.x = element_blank(),\n        legend.position = \"bottom\",\n        axis.text.x = element_text(hjust = 0.5)) +\n  scale_x_discrete(labels = as.character(anos_completos))+\n  coord_cartesian(ylim = c(0, 2))\n\n# Exibir o gráfico\nprint(gg_grafico_primeira_ocorrencia_sudeste)\n\n# Salvar o gráfico em formato PNG\n#ggsave(\"indice_abundancia_sudeste.png\",\n #      gg_grafico_primeira_ocorrencia_sudeste,\n  #     width = 12,\n   #    height = 10,\n    #   units = \"in\")\n\n#########################################################\n######### Região Norte Amazônica\n#########################################################\n\n# Definir o diretório de trabalho\n#setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\ndf_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';')\ndf_indice <- df_indice[!is.na(df_indice$tribo), ]\n\ndados_regiao_especifica <- df_indice %>%\n  filter(bioma == \"Amazonia\", regiao == \"norte\")\n\n# Agregar soma_individuos por tribo e ano\nsoma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ano) %>%\n  summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Verificar o esforço individual por uc_ea e expedicao\nesforco_individual <- dados_regiao_especifica %>%\n  group_by(uc, uc_ea, ano, expedicao) %>%\n  summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n  ungroup()\n\n# Somar os esforços por expedicao\nesforco_por_expedicao <- esforco_individual %>%\n  group_by(uc, ano, expedicao) %>%\n  summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n  ungroup()\n\n# Calcular o esforço total anual para cada ano\nesforco_total_anual <- esforco_por_expedicao %>%\n  group_by(ano) %>%\n  summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n  ungroup()\n\n# Juntar com soma_individuos_por_tribo_ano\ndf_agregado <- soma_individuos_por_tribo_ano %>%\n  left_join(esforco_total_anual, by = \"ano\") %>%\n  ungroup()\n\n# Somando os grupos de borboletas_fechadas\nborboletas_fechadas <- df_agregado %>%\n  filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_fechadas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Somando os grupos de borboletas_abertas\nborboletas_abertas <- df_agregado %>%\n  filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_abertas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Adicionando as linhas de Borboletas_fechadas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n\n# Adicionando as linhas de Borboletas_abertas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_abertas)\n\n#################################\n# Calcular o índice de abundância referente ao ano anterior\ndf_agregado_9 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         # log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_9, \"df_completo_norte_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_9 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo # tabela geral dos índices\ndf_tribo_ano_largo <- df_agregado_9 %>%\n  select(tribo, ano, indice_abundancia) %>% # Selecionar as colunas relevantes\n  pivot_wider(names_from = ano, values_from = indice_abundancia) # Transformar para o formato largo\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Tabela de índices de abundancia para o relatório\ntab_boneco_norte <- df_agregado_9 %>%\n  filter(!(row_number() %in% 28:45))\n\ndf_tribo_ano_largo_tab <- tab_boneco_norte %>%\n  select(tribo, ano, indice_abundancia) %>% # Selecionar as colunas relevantes\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\ndf_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Salvar\n#write.table(df_tribo_ano_largo_tab, \"indice_abundancia_norte_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Filtrar as linhas desejadas\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n  filter(row_number() %in% c(4, 5))\n\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n  mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\",\n                        ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n\n## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n#write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_norte_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n#################################\n# Calcular o índice de abundância referente ao ano de primeira ocorrencia\ndf_agregado_10 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         #log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1,\n                                     if_else(row_number() < primeira_ocorrencia, NA_real_,\n                                             log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_10, \"df_completo_norte_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_10 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_10 %>%\n  select(tribo, ano, indice_abundancia) %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n# Salvar o dataframe em um arquivo de texto\n#write.table(df_tribo_ano_largo, \"indice_abundancia_norte_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n########################\n####### Gráfico #######\n\n# Definir as cores e tipos de linha para cada tribo\ncores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\ntipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n\ndados_longos <- df_agregado_10 %>%\n  filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n\n# Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015)\nanos_completos <- factor(c(2014:2022))\n\ndados_longos <- dados_longos %>%\n  bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 2),\n                       ano = rep(c(2014, 2015), each = length(unique(dados_longos$tribo))),\n                       indice_abundancia = NA))\n\n# Grafico - referente ao primeiro ano de ocorrencia\ngg_grafico_primeira_ocorrencia_norte <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n  geom_line(data = subset(dados_longos, ano >= 2018), aes(group = tribo), size = 1) +  #tava dando erro, pois os dados tavam comecando em 2017,mas é para começar em 2018\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n  scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                       \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                          \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  theme_minimal() +\n  labs(title = \"Região Climática Norte Amazônica\",\n       x = \"\",\n       y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n       color = NULL,\n       linetype = NULL) +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.title = element_text(size = 18),\n        axis.text = element_text(size = 14),\n        legend.title = element_text(size = 16),\n        legend.text = element_text(size = 12),\n        axis.line = element_line(color = \"black\"),\n        axis.line.x = element_blank(),\n        legend.position = \"bottom\",\n        axis.text.x = element_text(hjust = 0.5),\n        panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n        panel.grid.minor = element_blank()) +\n  scale_x_discrete(limits = as.character(2014:2022)) +\n  coord_cartesian(ylim = c(0, 2))\n\n# print(gg_grafico_primeira_ocorrencia_norte)\n\n# Salvar o gráfico em formato PNG\n#ggsave(\"indice_abundancia_norte.png\",\n #      gg_grafico_primeira_ocorrencia_norte,\n  #     width = 12,\n   #    height = 10,\n    #   units = \"in\")\n\n##############################################\n#### Gráficos combinados\n#############################################\n\nlibrary(gridExtra)\nindice_abu_amazonia <- grid.arrange(\n  gg_grafico_primeira_ocorrencia_central + theme(legend.position = \"none\",\n                                                 axis.text.x = element_blank(),\n                                                 axis.title = element_text(size = 14),\n                                                 plot.title = element_text(size = 18),\n                                                 panel.spacing = unit(0.5, \"lines\"),\n                                                 panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n                                                 axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n  gg_grafico_primeira_ocorrencia_sudoeste + theme(legend.position = \"none\",\n                                                  axis.text.x = element_blank(),\n                                                  axis.title = element_text(size = 14),\n                                                  plot.title = element_text(size = 18),\n                                                  panel.spacing = unit(0.5, \"lines\"),\n                                                  panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n                                                  axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n  gg_grafico_primeira_ocorrencia_leste + theme(legend.position = \"none\",\n                                               axis.text.x = element_blank(),\n                                               axis.title = element_text(size = 14),\n                                               plot.title = element_text(size = 18),\n                                               panel.spacing = unit(0.5, \"lines\"),\n                                               panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n                                               axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n  gg_grafico_primeira_ocorrencia_sudeste + theme(legend.position = \"none\",\n                                                 axis.text.x = element_blank(),\n                                                 axis.title = element_text(size = 14),\n                                                 plot.title = element_text(size = 18),\n                                                 panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n                                                 axis.ticks.y = element_line(color = \"black\", size = 0.4)),\n  gg_grafico_primeira_ocorrencia_norte + theme(legend.position = \"bottom\",\n                                               axis.text.x = element_text(size = 20),\n                                               axis.title = element_text(size = 14),\n                                               plot.title = element_text(size = 18),\n                                               panel.spacing = unit(0.5, \"lines\"),\n                                               panel.grid.major = element_line(color = \"gray80\", size = 0.4),\n                                               axis.ticks.y = element_line(color = \"black\", size = 0.4),\n                                               legend.text = element_text(size = 20)),\n  nrow = 5,  heights = c(10, 10, 10, 10, 13)\n)\n\n# Remover os painéis menores\nindice_abu_amazonia$grobs[[1]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\nindice_abu_amazonia$grobs[[2]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\nindice_abu_amazonia$grobs[[3]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\nindice_abu_amazonia$grobs[[4]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\nindice_abu_amazonia$grobs[[5]]$grobs[[1]]$children[[2]]$children[[2]] <- NULL\n\n# Exibir a imagem\nprint(indice_abu_amazonia)\n\n# Salvar o gráfico em formato PNG\n\nggsave(\"imagens/cap04/indice_abundancia_combinado_amazonia.png\",\n       indice_abu_amazonia,\n       width = 16,\n       height = 16,\n       units = \"in\")\n```\n\n</br>\n\n\n```{r grafico IA-regiões_climaticas_amazonia}\n#| label: fig-ind-abund-regioes-climaticas-combinado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no índice de abundância das tribos de borboletas frugívoras do bioma Amazônico em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada marrom.\"\n\n\nknitr::include_graphics(\"imagens/cap04/indice_abundancia_combinado_amazonia.png\")\n\n```\n</br>\n\n```{r grafico IA-cerrado-calculos}\n#| label: ind-abund-cerrado-calculos\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n##### Índices de abundância de tribos ao longo dos anos - Cerrado\n##Script: Isabela Freitas Oliveira\n\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Definir o diretório de trabalho\n# setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\ndf_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';') \ndf_indice <- df_indice[!is.na(df_indice$tribo), ]\n\ndados_regiao_especifica <- df_indice %>%\n  filter(bioma == \"Cerrado\")\n\n# Agregar soma_individuos por tribo e ano\nsoma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ano) %>%\n  summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Verificar o esforço individual por uc_ea e expedicao\nesforco_individual <- dados_regiao_especifica %>%\n  group_by(uc, uc_ea, ano, expedicao) %>%\n  summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n  ungroup()\n\n# Somar os esforços por expedicao\nesforco_por_expedicao <- esforco_individual %>%\n  group_by(uc, ano, expedicao) %>%\n  summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n  ungroup()\n\n# Calcular o esforço total anual para cada ano\nesforco_total_anual <- esforco_por_expedicao %>%\n  group_by(ano) %>%\n  summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n  ungroup()\n\n# Juntar com soma_individuos_por_tribo_ano\ndf_agregado <- soma_individuos_por_tribo_ano %>%\n  left_join(esforco_total_anual, by = \"ano\") %>%\n  ungroup()\n\n# Somando os grupos de borboletas_fechadas\nborboletas_fechadas <- df_agregado %>%\n  filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_fechadas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Somando os grupos de borboletas_abertas\nborboletas_abertas <- df_agregado %>%\n  filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_abertas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Adicionando as linhas de Borboletas_fechadas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n\n# Adicionando as linhas de Borboletas_abertas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_abertas)\n\n#######################\n# Calcular o índice de abundância referente ao ano anterior\ndf_agregado_1 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         # log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n                                     if_else(row_number() < primeira_ocorrencia, NA_real_, \n                                             log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_1, \"df_completo_cerrado_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_1 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_1 %>%\n  select(tribo, ano, indice_abundancia) %>% \n  pivot_wider(names_from = ano, values_from = indice_abundancia) \n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Tabela de índices de abundancia para o relatório\ntab_boneco_cerrado <- df_agregado_1 %>%\n  filter(!(row_number() %in% 28:45))\n\ndf_tribo_ano_largo_tab <- tab_boneco_cerrado %>%\n  select(tribo, ano, indice_abundancia) %>% \n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\ndf_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Salvar\n#write.table(df_tribo_ano_largo_tab, \"indice_abundancia_cerrado_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Filtrar as linhas desejadas\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n  filter(row_number() %in% c(4, 5))\n\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n  mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\", \n                        ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n\n## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n#write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_cerrado_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n######################\n# Calcular o índice de abundância referente ao ano de primeira ocorrencia\ndf_agregado_2 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         #log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n                                     if_else(row_number() < primeira_ocorrencia, NA_real_, \n                                             log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_2, \"df_completo_cerrado_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_2 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_2 %>%\n  select(tribo, ano, indice_abundancia) %>% \n  pivot_wider(names_from = ano, values_from = indice_abundancia) \n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n# Salvar\n#write.table(df_tribo_ano_largo, \"indice_abundancia_cerrado_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n############\n#Gráfico\nlibrary(ggplot2)\n\n# Definir as cores e tipos de linha para cada tribo\ncores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\ntipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n\ndados_longos <- df_agregado_2 %>%\n  filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n\n# Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\nanos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n\ndados_longos <- dados_longos %>%\n  bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 1),\n                       ano = 2020, each = length(unique(dados_longos$tribo)),\n                       indice_abundancia = NA))\n\n# Criar uma sequência completa de anos\nanos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n\n# Grafico - referente ao primeiro ano de ocorrencia\ngg_grafico_primeira_ocorrencia_cerrado <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n  geom_line(aes(group = tribo), size = 1) +\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n  scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                       \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                          \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  theme_minimal() +\n  labs(title = \"Cerrado\",\n       x = \"\",\n       y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n       color = NULL,\n       linetype = NULL) +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.title = element_text(size = 18),\n        axis.text = element_text(size = 16),\n        legend.title = element_text(size = 16),\n        legend.text = element_text(size = 12),\n        axis.line = element_line(color = \"black\"),\n        axis.line.x = element_blank(),\n        legend.position = \"bottom\",\n        axis.text.x = element_text(hjust = 0.5)) +\n  scale_x_discrete(labels = as.character(anos_completos))+\n  coord_cartesian(ylim = c(0, 2)) \n\n# Exibir o gráfico\nprint(gg_grafico_primeira_ocorrencia_cerrado)\n\n# Salvar o gráfico em formato PNG\nggsave(\"imagens/cap04/bo-indice-abundancia-cerrado.png\",\n      gg_grafico_primeira_ocorrencia_cerrado,\n     width = 10,\n    height = 5, \n   units = \"in\") \n\n\n```\n\n</br>\n\n\n```{r grafico IA-cerrado}\n#| label: fig-ind-abund-cerrado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no índice de abundância das tribos de borboletas frugívoras do bioma Cerrado em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada marrom.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-indice-abundancia-cerrado.png\")\n\n```\n</br>\n\n```{r IA-mata-atlantica-calculos}\n#| label: ind-abund-mata-atlantica-calculos\n#| echo: false\n#| message: false\n#| warning: false\n#| include: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n##### Índices de abundância de tribos ao longo dos anos - Mata Atlântica\n##Script: Isabela Freitas Oliveira\n\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Definir o diretório de trabalho\n#setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\ndf_indice<-read.csv(\"dados/borboletas/resultado_final_com_esforco.csv\", header=T, sep = ';') \ndf_indice <- df_indice[!is.na(df_indice$tribo), ]\n\ndados_regiao_especifica <- df_indice %>%\n  filter(bioma == \"Mata_Atlantica\")\n\n# Agregar soma_individuos por tribo e ano\nsoma_individuos_por_tribo_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ano) %>%\n  summarize(soma_individuos = sum(soma_individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Verificar o esforço individual por uc_ea e expedicao\nesforco_individual <- dados_regiao_especifica %>%\n  group_by(uc, uc_ea, ano, expedicao) %>%\n  summarize(esforco_individual = unique(esforco_amostral), na.rm = TRUE) %>%\n  ungroup()\n\n# Somar os esforços por expedicao\nesforco_por_expedicao <- esforco_individual %>%\n  group_by(uc, ano, expedicao) %>%\n  summarize(esforco_total_expedicao = sum(esforco_individual, na.rm = TRUE)) %>%\n  ungroup()\n\n# Calcular o esforço total anual para cada ano\nesforco_total_anual <- esforco_por_expedicao %>%\n  group_by(ano) %>%\n  summarize(esforco_total_anual = sum(esforco_total_expedicao, na.rm = TRUE)) %>%\n  ungroup()\n\n# Juntar com soma_individuos_por_tribo_ano\ndf_agregado <- soma_individuos_por_tribo_ano %>%\n  left_join(esforco_total_anual, by = \"ano\") %>%\n  ungroup()\n\n# Somando os grupos de borboletas_fechadas\nborboletas_fechadas <- df_agregado %>%\n  filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_fechadas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Brassolini', 'Morphini', 'Haeterini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Somando os grupos de borboletas_abertas\nborboletas_abertas <- df_agregado %>%\n  filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>%\n  group_by(ano) %>%\n  summarise(soma_individuos = sum(soma_individuos)) %>%\n  ungroup() %>%\n  mutate(tribo = 'Borboletas_abertas') %>%\n  left_join(df_agregado %>% filter(tribo %in% c('Ageroniini', 'Callicorini', 'Biblidini')) %>% select(ano, esforco_total_anual) %>% distinct(), by = \"ano\")\n\n# Adicionando as linhas de Borboletas_fechadas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_fechadas)\n\n# Adicionando as linhas de Borboletas_abertas ao dataframe original\ndf_agregado <- bind_rows(df_agregado, borboletas_abertas)\n\n#######################\n# Calcular o índice de abundância referente ao ano anterior\ndf_agregado_1 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         # log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n                                     if_else(row_number() < primeira_ocorrencia, NA_real_, \n                                             log10(frequencia_corrigida /lag(frequencia_corrigida))+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_1, \"df_completo_mata_atlantica_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_1 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_1 %>%\n  select(tribo, ano, indice_abundancia) %>% \n  pivot_wider(names_from = ano, values_from = indice_abundancia) \n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Tabela de índices de abundancia para o relatório\ntab_boneco_mata_atlantica <- df_agregado_1 %>%\n  filter(!(row_number() %in% 28:45))\n\ndf_tribo_ano_largo_tab <- tab_boneco_mata_atlantica %>%\n  select(tribo, ano, indice_abundancia) %>% \n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\ndf_tribo_ano_largo_tab <- df_tribo_ano_largo_tab %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n#Salvar\n#write.table(df_tribo_ano_largo_tab, \"indice_abundancia_mata_atlantica_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Filtrar as linhas desejadas\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo %>%\n  filter(row_number() %in% c(4, 5))\n\ndf_tribo_ano_largo_filtrado <- df_tribo_ano_largo_filtrado %>%\n  mutate(tribo = ifelse(row_number() == 1, \"Borboletas de florestas abertas/perturbadas\", \n                        ifelse(row_number() == 2, \"Borboletas de florestas fechadas/preservadas\", tribo)))\n\n## Tabela para colocar no relatório (índice referente aos valores do ano anterior)\n#write.table(df_tribo_ano_largo_filtrado, \"indice_abundancia_mata_atlantica_tab_indicadoras_ano_anterior.txt\", sep = \"\\t\", row.names = FALSE)\n\n######################\n# Calcular o índice de abundância referente ao ano de primeira ocorrencia\ndf_agregado_2 <- df_agregado %>%\n  group_by(tribo) %>%\n  arrange(tribo, ano) %>%\n  mutate(frequencia_corrigida = (soma_individuos + 0.00001) / esforco_total_anual,\n         #log_frequencia_corrigida = log10(frequencia_corrigida),\n         primeira_ocorrencia = which(soma_individuos >= 20)[1],\n         indice_abundancia = if_else(row_number() == primeira_ocorrencia, 1, \n                                     if_else(row_number() < primeira_ocorrencia, NA_real_, \n                                             log10(frequencia_corrigida / frequencia_corrigida[primeira_ocorrencia])+1))) %>%\n  ungroup() %>%\n  select(-primeira_ocorrencia)\n\n#Tabela completa\n#write.table(df_agregado_2, \"df_completo_mata_atlantica_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n# Reestruturar para visualização\ndf_tribo_ano_largo <- df_agregado_2 %>%\n  pivot_wider(names_from = ano, values_from = indice_abundancia)\n\n# Reestruturar o dataframe para o formato largo\ndf_tribo_ano_largo <- df_agregado_2 %>%\n  select(tribo, ano, indice_abundancia) %>% \n  pivot_wider(names_from = ano, values_from = indice_abundancia) \n\n# Limitar os valores a 3 casas decimais\ndf_tribo_ano_largo <- df_tribo_ano_largo %>%\n  mutate_if(is.numeric, ~ round(., 3))\n\n# Salvar\n#write.table(df_tribo_ano_largo, \"indice_abundancia_mata_atlantica_primeiro_ano.txt\", sep = \"\\t\", row.names = FALSE)\n\n############\n#Gráfico\nlibrary(ggplot2)\n\n# Definir as cores e tipos de linha para cada tribo\ncores_linhas <- c(\"Borboletas_fechadas\" = \"#23867E\", \"Borboletas_abertas\" = \"#CFA154\")\ntipos_linhas <- c(\"Borboletas_fechadas\" = \"solid\",\"Borboletas_abertas\" = \"dashed\")\n\ndados_longos <- df_agregado_2 %>%\n  filter(tribo %in% c('Borboletas_fechadas', 'Borboletas_abertas'))\n\n# Criar uma sequência completa de anos, incluindo os anos sem dados (2014, 2015, 2020)\nanos_completos <- factor(c(2014:2022, max(dados_longos$ano)))\n\ndados_longos <- dados_longos %>%\n  bind_rows(data.frame(tribo = rep(unique(dados_longos$tribo), 1),\n                       ano = 2020, each = length(unique(dados_longos$tribo)),\n                       indice_abundancia = NA))\n\n# Criar uma sequência completa de anos\nanos_completos <- factor(seq(min(dados_longos$ano), max(dados_longos$ano)))\n\n# Grafico - referente ao primeiro ano de ocorrencia\ngg_grafico_primeira_ocorrencia_mata_atlantica <- ggplot(dados_longos, aes(x = as.factor(ano), y = indice_abundancia, color = tribo, linetype = tribo)) +\n  geom_line(aes(group = tribo), size = 1) +\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"black\", size = 0.5) +\n  scale_color_manual(values = cores_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                       \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  scale_linetype_manual(values = tipos_linhas, labels = c(\"Borboletas_fechadas\" = \"Borboletas de áreas florestais fechadas/preservadas\",\n                                                          \"Borboletas_abertas\" = \"Borboletas de áreas florestais abertas/perturbadas\")) +\n  theme_minimal() +\n  labs(title = \"Mata Atlântica\",\n       x = \"\",\n       y = expression(\"Índice de Abundância (\" * italic(\"i\") * \")\"),\n       color = NULL,\n       linetype = NULL) +\n  theme(plot.title = element_text(hjust = 0.5, size = 20),\n        axis.title = element_text(size = 18),\n        axis.text = element_text(size = 16),\n        legend.title = element_text(size = 16),\n        legend.text = element_text(size = 12),\n        axis.line = element_line(color = \"black\"),\n        axis.line.x = element_blank(),\n        legend.position = \"bottom\",\n        axis.text.x = element_text(hjust = 0.5)) +\n  scale_x_discrete(labels = as.character(anos_completos))+\n  coord_cartesian(ylim = c(-0.5, 2)) \n\n# Exibir o gráfico\nprint(gg_grafico_primeira_ocorrencia_mata_atlantica)\n\n# Salvar o gráfico em formato PNG\nggsave(\"imagens/cap04/bo-indice-abundancia-mata-atlantica.png\",\n       gg_grafico_primeira_ocorrencia_mata_atlantica,\n       width = 10,\n       height = 5, \n       units = \"in\") \n\n\n```\n\n</br>\n\n```{r grafico IA-mata-atlantica}\n#| label: fig-ind-abund-mata-atlantica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n#| fig-cap: \"Variação no índice de abundância das tribos de borboletas frugívoras do bioma Mata Atlântica em relação ao primeiro ano de ocorrência. Tribos de borboletas indicadoras de florestas fechadas/preservadas (Brassolini, Morphini e Haeterini) estão somadas e representadas pela linha contínua verde. As tribos de borboletas indicadoras de florestas abertas/perturbadas (Callicorini, Biblidini e Ageroniini) estão somadas e representadas pela linha pontilhada marrom.\"\n\n\nknitr::include_graphics(\"imagens/cap04/bo-indice-abundancia-mata-atlantica.png\")\n\n```\n\n\n\n\nNa segunda abordagem utilizada para o índice de abundância, os valores de cada ano foram comparados ao valor do ano anterior. Na região climática sudoeste amazônica foi observada uma redução de Ageroniini (a única tribo representante das borboletas indicadoras de florestas abertas/perturbadas na região) nos anos de 2017 e 2018, mas um aumento considerável da tribo em 2019. Devido a este grande crescimento populacional de Ageroniini e do esforço amostral na região em 2019 (2.122 indivíduos amostrados em 76 EAs)o ano de 2020 apresentou uma redução drástica no índice, tanto devido ao baixo número de indivíduos de Ageroniini (n = 42), quanto à redução do esforço amostral para 26 EAs. No ano de 2021 houve um aumento do índice em relação ao ano anterior, e uma pequena redução em 2022 (Tabela 1).  \n\nAs borboletas indicadoras de florestas fechadas/preservadas, por outro lado, seguiram o padrão inverso apresentado pelas borboletas indicadoras de florestas abertas/perturbadas, exceto em 2018, quando também sofreu uma redução do índice (Tabela 1). Esta é uma dinâmica \"populacional\" esperada, visto que as borboletas indicadoras de florestas fechadas e florestas abertas possuem requerimentos ambientais e climáticos contrastantes. \n\n</br>\n\n\n```{r tab_ind_abund_regiao_sudoeste}\n#| label: tbl-ind_abund_regiao_sudoeste\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| fig.align: \"center\"\n#| out.width: '70%'\n#| tbl-cap: \"Índice de abundância das tribos indicadoras na Região Climática Sudoeste Amazônica.\"\n\n\n# tab_ind_abund_regiao_sudoeste <- read_csv2(\"dados/tabelas/borboletas/tab_ind_abund_regiao_sudoeste.csv\")\n# \n# tabela_indice_abund_regiao_sudoeste <- kbl(tab_ind_abund_regiao_sudoeste,\n#              booktabs = TRUE,\n#              longtable = TRUE, \n#              caption = \"Índice de abundância das tribos indicadoras de cada ano da Região Climática Sudoeste Amazônica. Os valores dos índices estão em referência ao ano anterior. Nos anos em negrito, o esforço amostral foi menor que 1.728 armadilhas/dia e os dados devem ser interpretados com cautela. 'NA' indica que a primeira ocorrência teve uma abundância < 20 indivíduos no ano e não foi considerada na análise.\",\n#              col.names = c(\" \", \"[2014]\", \"[2015]\", \"[2016]\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\"), align = c(\"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\")) %>%\n#   #row_spec(0, bold = F) |> \n#     # column_spec(3, italic = TRUE) %>%\n# kable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\") \n# \n# \n# tabela_indice_abund_regiao_sudoeste\n\n\nknitr::include_graphics(\"imagens/cap04/tbl-IA-regiao-climatica-sudoeste-amazonica.JPG\")\n\n```\n\n</br>\n\nNa região climática central amazônica, as tribos indicadoras de florestas abertas/perturbadas, representadas somente por Ageroniini, tiveram  um aumento “populacional” em 2017 em relação a 2016, com uma subsequente redução nos anos de 2018 e 2019 (Tabela 2). A partir de 2020, houve um pequeno aumento em relação ao ano anterior e em 2021 esta tribo apresentou um grande aumento “populacional”. Porém, no ano seguinte, houve uma grande redução “populacional” desse grupo de borboletas (Tabela 2). No caso das borboletas de florestas fechadas/preservadas, notou-se uma oscilação de crescimento e redução “populacional” ao longo dos anos, com crescimento nos anos de 2020 e 2021 (Tabela 2). Os grupos indicadores tiveram o mesmo padrão de crescimento \"populacional\" em relação ao ano anterior em 2019, 2020 e 2021, ambos com diminuição \"populacional \" em 2022 (Tabela 2). \n\n</br>\n\n```{r tab_ind_abund_regiao_central}\n#| label: tbl-ind-abund-regiao-central\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| fig.align: \"center\"\n#| out.width: '70%'\n#| tbl-cap: \"Índice de abundância das tribos indicadoras na Região Climática Central Amazônica.\"\n\n\n# tab_ind_abund_regiao_central <- read_csv2(\"dados/tabelas/borboletas/tab_ind_abund_regiao_central.csv\")\n# \n# tabela_indice_abund_regiao_central <- kbl(tab_ind_abund_regiao_central,\n#              booktabs = TRUE,\n#              longtable = TRUE, \n#              caption = \"Índice de abundância das tribos indicadoras de cada ano da Região Climática Central Amazônica. Os valores dos índices estão em referência ao ano anterior. Nos anos em negrito, o esforço amostral foi menor que 1.728 armadilhas/dia e os dados devem ser interpretados com cautela. 'NA' indica que a primeira ocorrência apresentou uma abundância < 20 indivíduos no ano e assim não foi considerada na análise.\",\n#              col.names = c(\" \", \"[2014]\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"[2020]\", \"2021\", \"2022\"), align = c(\"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\")) %>%\n#   #row_spec(0, bold = F) |> \n#     # column_spec(3, italic = TRUE) %>%\n# kable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\") \n# \n# \n# tabela_indice_abund_regiao_central\n\n\nknitr::include_graphics(\"imagens/cap04/tbl-IA-regiao-climatica-central-amazonica.JPG\")\n\n\n```\n\n</br>\n\nNa região climática leste amazônica as tribos indicadoras de florestas fechadas e abertas apresentaram padrões de crescimento e diminuição \"populacional\" similares ao longo dos anos, com exceção de 2022, quando borboletas indicadoras de florestas abertas tiveram um aumento \"populacional” em relação ao ano anterior, enquanto as borboletas indicadoras de florestas fechadas apresentaram uma redução (Tabela 3). Apesar dos mesmos padrões, as proporções das mudanças \"populacionais\" de um ano para o outro entre os dois grupos indicadores foram diferentes. \n\n</br>\n\n\n```{r tab_ind_abund_regiao_leste}\n#| label: tbl-ind_abund_regiao_leste\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| fig.align: \"center\"\n#| out.width: '70%'\n#| tbl-cap: \"Índice de abundância das tribos indicadoras na Região Climática Leste Amazônica.\"\n\n\n# tab_ind_abund_regiao_leste <- read_csv2(\"dados/tabelas/borboletas/tab_ind_abund_regiao_leste.csv\")\n# \n# tabela_indice_abund_regiao_leste <- kbl(tab_ind_abund_regiao_leste,\n#              booktabs = TRUE,\n#              longtable = TRUE, \n#              caption = \"Índice de abundância das tribos indicadoras de cada ano da Região Climática Leste Amazônica. Os valores dos índices estão em referência ao ano anterior. Nos anos em negrito, o esforço amostral foi menor que 1.728 armadilhas/dia e os dados devem ser interpretados com cautela. Nos anos sublinhados, nenhuma UC da região foi amostrada. 'NA' indica que a primeira ocorrência teve uma abundância < 20 indivíduos no ano e não foi considerada na análise.\",\n#              col.names = c(\" \", \"(2014)\", \"(2015)\", \"[2016]\", \"[2017]\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\"), align = c(\"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\")) %>%\n#   #row_spec(0, bold = F) |> \n#     # column_spec(3, italic = TRUE) %>%\n# kable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\") \n# \n# \n# tabela_indice_abund_regiao_leste\n\nknitr::include_graphics(\"imagens/cap04/tbl-IA-regiao-climatica-leste-amazonica.JPG\")\n\n\n```\n\n\n</br>\n\nA região climática sudeste amazônica não apresentou, em nenhum ano amostrado, o número mínimo de borboletas indicadoras de florestas abertas/perturbadas para que o índice fosse calculado (Tabela 4). No entanto, as borboletas indicadoras de florestas fechadas/preservadas mostraram uma oscilação \"populacional\" entre os anos (Tabela 4).  \n\n</br>\n\n```{r tab_ind_abund_regiao_sudeste}\n#| label: tbl-ind_abund_regiao_sudeste\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| fig.align: \"center\"\n#| out.width: '70%'\n#| tbl-cap: \"Índice de abundância das tribos indicadoras na Região Climática Sudeste Amazônica.\"\n\n\n# tab_ind_abund_regiao_sudeste <- read_csv2(\"dados/tabelas/borboletas/tab_ind_abund_regiao_sudeste.csv\")\n# \n# tabela_indice_abund_regiao_sudeste <- kbl(tab_ind_abund_regiao_sudeste,\n#              booktabs = TRUE,\n#              longtable = TRUE, \n#              caption = \"Índice de abundância das tribos indicadoras de cada ano da Região Climática Sudeste Amazônica. Os valores dos índices estão em referência ao ano anterior. Nos anos em negrito, o esforço amostral foi menor que 1.728 armadilhas/dia e os dados devem ser interpretados com cautela. Nos anos sublinhados nenhuma UC da região foi amostrada. 'NA' indica que a primeira ocorrência apresentou uma abundância < 20 indivíduos no ano e não foi considerada na análise.\",\n#              col.names = c(\" \", \"(2014)\", \"(2015)\", \"[2016]\", \"[2017]\", \"[2018]\", \"2019\", \"(2020)\", \"[2021]\", \"[2022]\"), align = c(\"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\")) %>%\n#   #row_spec(0, bold = F) |> \n#     # column_spec(3, italic = TRUE) %>%\n# kable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\") \n# \n# \n# tabela_indice_abund_regiao_sudeste\n\nknitr::include_graphics(\"imagens/cap04/tbl-IA-regiao-climatica-sudeste-amazonica.JPG\")\n\n\n```\n\n\n</br>\n\nNa região climática norte amazônica os grupos indicadores apresentaram um número mínimo de indivíduos para o cálculo do índice apenas a partir de 2018. Os padrões dos dois grupos foram congruentes em todos os anos, exceto em 2022, quando a abundância de borboletas indicadoras de florestas abertas/perturbadas aumentou em relação ao ano anterior e as borboletas indicadoras de florestas fechadas/preservadas mostraram uma pequena redução (Tabela 5). \n\n</br>\n\n```{r tab_ind_abund_regiao_norte}\n#| label: tbl-ind_abund_regiao_norte\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| fig.align: \"center\"\n#| out.width: '70%'\n#| tbl-cap: \"Índice de abundância das tribos indicadoras na Região Climática Norte Amazônica.\"\n\n\n# tab_ind_abund_regiao_norte <- read_csv2(\"dados/tabelas/borboletas/tab_ind_abund_regiao_norte.csv\")\n# \n# tabela_indice_abund_regiao_norte <- kbl(tab_ind_abund_regiao_norte,\n#              booktabs = TRUE,\n#              longtable = TRUE, \n#              caption = \" Índice de abundância das tribos indicadoras de cada ano da Região Climática Norte Amazônica. Os valores dos índices estão em referência ao ano anterior. Nos anos em negrito, o esforço amostral foi menor que 1.728 armadilhas/dia e os dados devem ser interpretados com cautela. Nos anos sublinhados nenhuma UC da região foi amostrada. 'NA' indica que a primeira ocorrência apresentou uma abundância < 20 indivíduos no ano e não foi considerada na análise.\",\n#              col.names = c(\" \", \"(2014)\", \"(2015)\", \"(2016)\", \"[2017]\", \"[2018]\", \"[2019]\", \"[2020]\", \"[2021]\", \"[2022]\"), align = c(\"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\")) %>%\n#   #row_spec(0, bold = F) |> \n#     # column_spec(3, italic = TRUE) %>%\n# kable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\") \n# \n# \n# tabela_indice_abund_regiao_norte\n\n\nknitr::include_graphics(\"imagens/cap04/tbl-IA-regiao-climatica-norte-amazonica.JPG\")\n\n```\n\n\n</br>\n</br>\n</br>\n\nNo cerrado.... \n\n</br>\n\n```{r tab_ind_abund_cerrado}\n#| label: tbl-ind_abund_cerrado\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| fig.align: \"center\"\n#| out.width: '70%'\n#| tbl-cap: \"Índice de abundância das tribos indicadoras no Cerrado.\"\n\n\n# tab_ind_abund_cerrado <- read_csv2(\"dados/tabelas/borboletas/tab_ind_abund_cerrado.csv\")\n# \n# tabela_indice_abund_cerrado <- kbl(tab_ind_abund_cerrado,\n#              booktabs = TRUE,\n#              longtable = TRUE, \n#              caption = \"Índice de abundância das tribos indicadoras de cada ano do Cerrado. Os valores dos índices estão em referência ao ano anterior. Nos anos em negrito, o esforço amostral foi menor que 1.728 armadilhas/dia e os dados devem ser interpretados com cautela. Nos anos sublinhados, nenhuma UC da região foi amostrada. 'NA' indica que a primeira ocorrência apresentou uma abundância < 20 indivíduos e não foi considerada na análise.\",\n#              col.names = c(\" \", \"[2014]\", \"[2015]\", \"[2016]\", \"[2017]\", \"[2018]\", \"[2019]\", \"(2020)\", \"[2021]\", \"[2022]\"), align = c(\"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\")) %>%\n#   #row_spec(0, bold = F) |> \n#     # column_spec(3, italic = TRUE) %>%\n# kable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\") \n# \n# \n# tabela_indice_abund_cerrado\n\nknitr::include_graphics(\"imagens/cap04/tbl-IA-cerrado.JPG\")\n\n\n```\n\n\n</br>\n</br>\n</br>\n\nNa Mata Atlântica.... \n\n</br>\n\n```{r tab_ind_abund_mata_atlantica}\n#| label: tbl-ind_abund_mata_atlantica\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| fig.align: \"center\"\n#| out.width: '70%'\n#| tbl-cap: \"Índice de abundância das tribos indicadoras na Mata Atlântica.\"\n\n\n# tab_ind_abund_mata_atlantica <- read_csv2(\"dados/tabelas/borboletas/tab_ind_abund_mata_atlantica.csv\")\n# \n# tabela_indice_abund_mata_atlantica <- kbl(tab_ind_abund_mata_atlantica,\n#              booktabs = TRUE,\n#              longtable = TRUE, \n#              caption = \"Índice de abundância das tribos indicadoras de cada ano da Mata Atlântica. Os valores dos índices estão em referência ao ano anterior. Nos anos em negrito, o esforço amostral foi menor que 1.728 armadilhas/dia e os dados devem ser interpretados com cautela. Nos anos sublinhados nenhuma UC da região foi amostrada. 'NA' indica que a primeira ocorrência apresentou uma abundância < 20 indivíduos e não foi considerada na análise.\",\n#              col.names = c(\" \", \"(2014)\", \"[2015]\", \"[2016]\", \"[2017]\", \"[2018]\", \"[2019]\", \"(2020)\", \"[2021]\", \"[2022]\"), align = c(\"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\", \"l\")) %>%\n#   #row_spec(0, bold = F) |> \n#     # column_spec(3, italic = TRUE) %>%\n# kable_styling(full_width = F, bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), latex_options = c(\"repeat_header\"), repeat_header_text = \"\\\\textit{(continuação)}\") \n# \n# \n# tabela_indice_abund_mata_atlantica\n\nknitr::include_graphics(\"imagens/cap04/tbl-IA-mata-atlantica.JPG\")\n\n\n```\n\n\n\n\n\n\n</br>\n\n### Destaques\n\n</br>\n\n\n#### Efeito da queda dos tabocais na abundância das tribos de borboletas frugívoras no sudoeste da Amazônia  \n\n</br>\n\nNa região sudoeste da Amazônia, especialmente no estado do Acre, encontra-se uma vasta área de florestas de bambuzais do gênero *Guadua*, chamadas localmente de 'tabocal'. Estas florestas se estendem por uma superfície de aproximadamente 162.000 km^2^, na qual uma única população de bambu pode ocupar uma área de 330 km^2^ (@Carvalho_2013). Essas populações de taboca têm um ciclo de vida que varia de 27-28 anos (@Carvalho_2013). A população entra em senescência após sua reprodução sexuada, inicialmente com a perda de folhas dos indivíduos e, no fim, com sua sua morte e queda. As manchas de bambu são densas e altas e, ao morrerem, deixam uma grande porção de floresta aberta. \n\nAlgumas UCs do Acre possuem extensas manchas florestas de tabocal e,  nos últimos anos, foram relatadas mortes de diversas dessas populações (**Silveira, comunicação pessoal**). Porém, essa mortalidade não é imediata e a senescência dessas manchas pode levar mais de um ano. Há relatos da mortalidade de extensas áreas de tabocal de 2017 a 2021 nas seguintes UCs do Programa Monitora: RESEX do Cazumbá-Iracema (2017 e 2018), RESEX do Alto Tarauacá e RESEX Chico Mendes (2018) e RESEX Riozinho da Liberdade (2021). \n\nPara avaliar se a mortalidade das manchas de tabocal influenciou a abundância das tribos de borboletas frugívoras em cada UC, foi feito uma comparação entre anos para cada tribo, por meio do teste de Wilcoxon (ou teste U de Mann-Whitney). Este teste compara as medianas das abundâncias padronizadas pelo esforço amostral dos anos específicos com a mediana geral (a soma das medianas dos anos específicos dividida pelo número de anos). Um valor de *p* ≤ 0.01 indica que houve diferença significativa entre a mediana do ano específico e a mediana geral. Admitindo-se  que um evento de distúrbio na floresta pode influenciar a comunidade de borboletas tanto no mesmo ano quanto no ano seguinte, essas duas possibilidades foram consideradas na interpretação dos resultados. O valor de *p* considerado foi de 0.01, para que apenas efeitos mais fortes fossem detectados nos testes. As análises também foram aplicadas às tribos de borboletas do PARNA Serra do Divisor, local considerado \"controle\", por não apresentar florestas de taboca. \n\nNa RESEX do Cazumbá-Iracema, as tribos Brassolini e Morphini, indicadoras de florestas fechadas/preservadas, mostraram um aumento significativo na mediana da abundância no ano seguinte à mortalidade dos tabocais (@fig-abundancia-resex-cazumba-iracema-combinada). Este resultado é oposto ao esperado, pois com a morte dos tabocais a floresta fica mais aberta e menos propícia às espécies das tribos de floresta fechada. No entanto, a tribo Ageroniini, indicadora de florestas abertas/perturbadas, parece ter respondido à esta perturbação ambiental, visto que o aumento da mediana da abundância foi expressivo, resultando num valor quase 20 vezes maior do que o da mediana geral (@fig-abundancia-resex-cazumba-iracema-combinada). Outra tribo que também pode ter respondido à queda dos tabocais foi Coeini (@fig-abundancia-resex-cazumba-iracema-combinada) que, apesar de não ser uma tribo indicadora, têm espécies que são comuns no dossel e florestas abertas. \n\n</br>\n\n\n```{r grafico abundancia-resex-cazumba-iracema}\n#| label: fig-abundancia-resex-cazumba-iracema\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX do Cazumbá-Iracema\n# Script: Isabela Freitas Oliveira\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(car)\n\n#setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n\ndados_borboletas <- read.table(\"dados/borboletas/dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\ndados_borboletas$ano <- as.factor(dados_borboletas$ano)\ndados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\ndados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n\n\ndados_regiao_especifica <- dados_borboletas %>%\n  filter(uc == 'Resex_do_Cazumba-Iracema')\n\n# Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\nesforco_por_expedicao <- dados_regiao_especifica %>%\n  group_by(uc_ea, uc, expedicao, ano) %>%\n  summarize(\n    max_dia_amostragem = max(dia_amostragem) - 1,\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    esforco_amostral = 16 * max_dia_amostragem\n  )\n\n# Agregar o esforço de amostragem para cada uc_ea e ano\nesforco_total_por_ea_ano <- esforco_por_expedicao %>%\n  group_by(uc_ea, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregar o esforço de amostragem para cada uc e ano\nesforco_total_por_uc_ano <- esforco_por_expedicao %>%\n  group_by(uc, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o esforço total por ano\nesforco_por_ano <- esforco_total_por_uc_ano %>%\n  group_by(ano,uc) %>%\n  summarize(\n    esforco = sum(esforco_total_ano),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o número total de indivíduos por ano\nnum_ind_por_ano <- dados_regiao_especifica %>%\n  group_by(ano) %>%\n  summarize(\n    num_ind = sum(individuos, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n#criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\ndados_regiao_especifica <- dados_regiao_especifica %>%\n  mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n\n#combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\ndf_abu_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ua, uc_ea,uc, ano) %>%\n  summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Transforma o df para colocar os zeros\ndf_tabocal <- df_abu_ano %>%\n  spread(key = tribo, value = abundancia, fill = 0)\n\n# Retorna ao formato longo para as análises\ndf_long <- df_tabocal %>%\n  pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n\n# Agregação para obter a abundância total de cada tribo por ano\nabundancia_por_ano <- df_long %>%\n  group_by(tribo, ano) %>%\n  summarize(\n    abundancia_total = sum(individuos)\n  )\n\n# Juntar as tabelas pela coluna 'ano' e 'uc'\ndf_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n\n\n# Calcular a abundância padronizada pelo esforço amostral\ndf_long <- df_long_com_esforco %>%\n  mutate(abundancia_padronizada = (individuos / esforco) * 100)\n#\n\nlibrary(tidyverse)\n\n# Realizar análise e gerar gráficos para cada tribo\n\ntribos <- unique(df_long$tribo)\n\nfor (tribo_atual in tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n}\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Adicione o ano de 2020, mesmo que não haja dados\n  medianas_anuais <- c(medianas_anuais, NA)\n  names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- c(erros_padrao, NA)\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup)*1.1\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = .7) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"Ano\",\n         y = \"Mediana da Abundância / Esforço Amostral\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5.5),\n          axis.text = element_text(size = 6),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Exiba o gráfico ajustado\n  print(p_tribo)\n  \n  # Salvar a imagem usando ggsave()\n#   ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n#          plot = p_tribo,  # O objeto ggplot\n#          device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#          path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Cazumba-Iracema\",  # Especifique o diretório onde você deseja salvar o gráfico\n#          dpi = 300,  # Define a resolução (DPI)\n#          width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n# }\n\n\nlibrary(gridExtra)\n\n# Definir uma lista para armazenar os gráficos\nlista_graficos <- list()\n\n# Defina a ordem das tribos\nordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n                  \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n\nfor (tribo_atual in ordem_tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Adicione o ano de 2020, mesmo que não haja dados\n  medianas_anuais <- c(medianas_anuais, NA)\n  names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- c(erros_padrao, NA)\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.1\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = 1) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"\",\n         y = \"Mediana da Abundância \n / Esforço Amostral\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5.5),\n          axis.text = element_text(size = 6),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Adicionar o gráfico atual à lista\n  lista_graficos[[tribo_atual]] <- p_tribo\n}\n\n\n\n```\n\n\n```{r grafico abundancia-resex-cazumba-iracema-combinada}\n#| label: fig-abundancia-resex-cazumba-iracema-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '90%'\n#| fig-cap: \"Variação na abundância das tribos de borboletas frugívoras na RESEX do Cazumbá-Iracema no período de 2020 a 2022. A linha pontilhada vermelha indica a mediana total (e.g., mediana de todos os anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# Combine todos os gráficos em uma única imagem\nimagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_cazumba_iracema.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Cazumba-Iracema\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\n\n```\n\n\n</br>\n\n\n\n```{r grafico abundancia-resex-alto-tarauaca}\n#| label: fig-abundancia-resex-alto-tarauaca\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX do Alto Taraucá\n# Script: Isabela Freitas Oliveira\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(car)\n\n#setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n\n# dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n\n\ndados_regiao_especifica <- dados_borboletas %>%\n  filter(uc == 'Resex_do_Alto_Tarauaca')\n\n# Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\nesforco_por_expedicao <- dados_regiao_especifica %>%\n  group_by(uc_ea, uc, expedicao, ano) %>%\n  summarize(\n    max_dia_amostragem = max(dia_amostragem) - 1,\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    esforco_amostral = 16 * max_dia_amostragem\n  )\n\n# Agregar o esforço de amostragem para cada uc_ea e ano\nesforco_total_por_ea_ano <- esforco_por_expedicao %>%\n  group_by(uc_ea, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregar o esforço de amostragem para cada uc e ano\nesforco_total_por_uc_ano <- esforco_por_expedicao %>%\n  group_by(uc, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o esforço total por ano\nesforco_por_ano <- esforco_total_por_uc_ano %>%\n  group_by(ano,uc) %>%\n  summarize(\n    esforco = sum(esforco_total_ano),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o número total de indivíduos por ano\nnum_ind_por_ano <- dados_regiao_especifica %>%\n  group_by(ano) %>%\n  summarize(\n    num_ind = sum(individuos, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n#criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\ndados_regiao_especifica <- dados_regiao_especifica %>%\n  mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n\n#combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\ndf_abu_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ua, uc_ea,uc, ano) %>%\n  summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Transforma o df para colocar os zeros\ndf_tabocal <- df_abu_ano %>%\n  spread(key = tribo, value = abundancia, fill = 0)\n\n# Retorna ao formato longo para as análises\ndf_long <- df_tabocal %>%\n  pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n\n# Agregação para obter a abundância total de cada tribo por ano\nabundancia_por_ano <- df_long %>%\n  group_by(tribo, ano) %>%\n  summarize(\n    abundancia_total = sum(individuos)\n  )\n\n# Juntar as tabelas pela coluna 'ano' e 'uc'\ndf_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n\n\n# Calcular a abundância padronizada pelo esforço amostral\ndf_long <- df_long_com_esforco %>%\n  mutate(abundancia_padronizada = (individuos / esforco) * 100)\n#\n\nlibrary(tidyverse)\n\n# Realizar análise e gerar gráficos para cada tribo\n\ntribos <- unique(df_long$tribo)\n\nfor (tribo_atual in tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Adicione o ano de 2020, mesmo que não haja dados\n  medianas_anuais <- c(medianas_anuais, NA)\n  names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- c(erros_padrao, NA)\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup)*1.2\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = 1) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"Ano\",\n         y = \"Mediana da Abundância / Esforço Amostral\") +\n    theme_minimal() +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5),\n          axis.text = element_text(size = 5),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Exiba o gráfico ajustado\n  print(p_tribo)\n  \n  # Salvar a imagem usando ggsave()\n  ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n         plot = p_tribo,  # O objeto ggplot\n         device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n         path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Alto Tarauaca\",  # Especifique o diretório onde você deseja salvar o gráfico\n         dpi = 300,  # Define a resolução (DPI)\n         width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n}\n\n\nlibrary(gridExtra)\n\n# Definir uma lista para armazenar os gráficos\nlista_graficos <- list()\n\n# Defina a ordem das tribos\nordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n                  \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n\nfor (tribo_atual in ordem_tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Adicione o ano de 2020, mesmo que não haja dados\n  medianas_anuais <- c(medianas_anuais, NA)\n  names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- c(erros_padrao, NA)\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.2\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = 1) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"\",\n         y = \"Mediana da Abundância \n / Esforço Amostral\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5),\n          axis.text = element_text(size = 5),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Adicionar o gráfico atual à lista\n  lista_graficos[[tribo_atual]] <- p_tribo\n}\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-alto-tarauca-combinada}\n#| label: fig-abundancia-resex-alto-tarauaca-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Variação na abundância das tribos de borboletas frugívoras na RESEX do Alto Tarauacá no período de 2020 a 2022. A linha pontilhada vermelha indica a mediana total (e.g., mediana de todos os anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# Combine todos os gráficos em uma única imagem\nimagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_alto_tarauaca.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Alto Tarauaca\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-riozinho-da-liberdade}\n#| label: fig-abundancia-resex-riozinho-da-liberdade\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX Riozinho da Liberdade\n# Script: Isabela Freitas Oliveira\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(car)\n\n# setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# \n# dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n\n\ndados_regiao_especifica <- dados_borboletas %>%\n  filter(uc == 'Resex_Riozinho_da_Liberdade')\n\n# Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\nesforco_por_expedicao <- dados_regiao_especifica %>%\n  group_by(uc_ea, uc, expedicao, ano) %>%\n  summarize(\n    max_dia_amostragem = max(dia_amostragem) - 1,\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    esforco_amostral = 16 * max_dia_amostragem\n  )\n\n# Agregar o esforço de amostragem para cada uc_ea e ano\nesforco_total_por_ea_ano <- esforco_por_expedicao %>%\n  group_by(uc_ea, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregar o esforço de amostragem para cada uc e ano\nesforco_total_por_uc_ano <- esforco_por_expedicao %>%\n  group_by(uc, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o esforço total por ano\nesforco_por_ano <- esforco_total_por_uc_ano %>%\n  group_by(ano,uc) %>%\n  summarize(\n    esforco = sum(esforco_total_ano),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o número total de indivíduos por ano\nnum_ind_por_ano <- dados_regiao_especifica %>%\n  group_by(ano) %>%\n  summarize(\n    num_ind = sum(individuos, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n#criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\ndados_regiao_especifica <- dados_regiao_especifica %>%\n  mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n\n#combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\ndf_abu_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ua, uc_ea,uc, ano) %>%\n  summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Transforma o df para colocar os zeros\ndf_tabocal <- df_abu_ano %>%\n  spread(key = tribo, value = abundancia, fill = 0)\n\n# Retorna ao formato longo para as análises\ndf_long <- df_tabocal %>%\n  pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n\n# Agregação para obter a abundância total de cada tribo por ano\nabundancia_por_ano <- df_long %>%\n  group_by(tribo, ano) %>%\n  summarize(\n    abundancia_total = sum(individuos)\n  )\n\n# Juntar as tabelas pela coluna 'ano' e 'uc'\ndf_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n\n\n# Calcular a abundância padronizada pelo esforço amostral\ndf_long <- df_long_com_esforco %>%\n  mutate(abundancia_padronizada = (individuos / esforco) * 100)\n#\n\nlibrary(tidyverse)\n\n# Realizar análise e gerar gráficos para cada tribo\n\ntribos <- unique(df_long$tribo)\n\nfor (tribo_atual in tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- erros_padrao\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup)*1.1\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = 1) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"Ano\",\n         y = \"Mediana da Abundância / Esforço Amostral\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5),\n          axis.text = element_text(size = 5),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Exiba o gráfico ajustado\n  print(p_tribo)\n  \n  # Salvar a imagem usando ggsave()\n  ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n         plot = p_tribo,  # O objeto ggplot\n         device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n         path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Riozinho da Liberdade\",  # Especifique o diretório onde você deseja salvar o gráfico\n         dpi = 300,  # Define a resolução (DPI)\n         width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n}\n\n\nlibrary(gridExtra)\n\n# Definir uma lista para armazenar os gráficos\nlista_graficos <- list()\n\n# Defina a ordem das tribos\nordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n                  \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n\nfor (tribo_atual in ordem_tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- erros_padrao\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.1\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = 1) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"\",\n         y = \"Mediana da Abundância \n / Esforço Amostral\") +\n    theme_minimal() +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5),\n          axis.text = element_text(size = 5),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Adicionar o gráfico atual à lista\n  lista_graficos[[tribo_atual]] <- p_tribo\n}\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-riozinho-da-liberdade-combinada}\n#| label: fig-abundancia-resex-riozinho-da-liberdade-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Variação na abundância das tribos de borboletas frugívoras na RESEX do Riozinho da Liberdade no período de 2020 a 2022. A linha pontilhada vermelha indica a mediana total (e.g., mediana de todos os anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# Combine todos os gráficos em uma única imagem\nimagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_riozinho_da_liberdade.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Riozinho da Liberdade\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-chico-mendes}\n#| label: fig-abundancia-resex-chico-mendes\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# RESEX Chico Mendes\n# Script: Isabela Freitas Oliveira\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(car)\n\n# setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# \n# dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n\n\ndados_regiao_especifica <- dados_borboletas %>%\n  filter(uc == 'Resex_Chico_Mendes')\n\n# Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\nesforco_por_expedicao <- dados_regiao_especifica %>%\n  group_by(uc_ea, uc, expedicao, ano) %>%\n  summarize(\n    max_dia_amostragem = max(dia_amostragem) - 1,\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    esforco_amostral = 16 * max_dia_amostragem\n  )\n\n# Agregar o esforço de amostragem para cada uc_ea e ano\nesforco_total_por_ea_ano <- esforco_por_expedicao %>%\n  group_by(uc_ea, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregar o esforço de amostragem para cada uc e ano\nesforco_total_por_uc_ano <- esforco_por_expedicao %>%\n  group_by(uc, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o esforço total por ano\nesforco_por_ano <- esforco_total_por_uc_ano %>%\n  group_by(ano,uc) %>%\n  summarize(\n    esforco = sum(esforco_total_ano),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o número total de indivíduos por ano\nnum_ind_por_ano <- dados_regiao_especifica %>%\n  group_by(ano) %>%\n  summarize(\n    num_ind = sum(individuos, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n#criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\ndados_regiao_especifica <- dados_regiao_especifica %>%\n  mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n\n#combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\ndf_abu_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ua, uc_ea,uc, ano) %>%\n  summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Transforma o df para colocar os zeros\ndf_tabocal <- df_abu_ano %>%\n  spread(key = tribo, value = abundancia, fill = 0)\n\n# Retorna ao formato longo para as análises\ndf_long <- df_tabocal %>%\n  pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n\n# Agregação para obter a abundância total de cada tribo por ano\nabundancia_por_ano <- df_long %>%\n  group_by(tribo, ano) %>%\n  summarize(\n    abundancia_total = sum(individuos)\n  )\n\n# Juntar as tabelas pela coluna 'ano' e 'uc'\ndf_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n\n\n# Calcular a abundância padronizada pelo esforço amostral\ndf_long <- df_long_com_esforco %>%\n  mutate(abundancia_padronizada = (individuos / esforco) * 100)\n#\n\nlibrary(tidyverse)\n\n# Realizar análise e gerar gráficos para cada tribo\n\ntribos <- unique(df_long$tribo)\n\nfor (tribo_atual in tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- erros_padrao\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup)*1.1\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = 1) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"Ano\",\n         y = \"Mediana da Abundância / Esforço Amostral\") +\n    theme_minimal() +\n     theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5),\n          axis.text = element_text(size = 5),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Exiba o gráfico ajustado\n  print(p_tribo)\n  \n  # Salvar a imagem usando ggsave()\n  ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n         plot = p_tribo,  # O objeto ggplot\n         device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n         path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Chico Mendes\",  # Especifique o diretório onde você deseja salvar o gráfico\n         dpi = 300,  # Define a resolução (DPI)\n         width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n}\n\n\nlibrary(gridExtra)\n\n# Definir uma lista para armazenar os gráficos\nlista_graficos <- list()\n\n# Defina a ordem das tribos\nordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n                  \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n\nfor (tribo_atual in ordem_tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = names(medianas_anuais), MedianaAnual = medianas_anuais)\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- erros_padrao\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.1\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = 1) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"\",\n         y = \"Mediana da Abundância \n / Esforço Amostral\") +\n    theme_minimal() +\n     theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5),\n          axis.text = element_text(size = 5),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Adicionar o gráfico atual à lista\n  lista_graficos[[tribo_atual]] <- p_tribo\n}\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-resex-chico-mendes-combinada}\n#| label: fig-abundancia-resex-chico-mendes-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Variação na abundância das tribos de borboletas frugívoras na RESEX Chico Mendes no período de 2020 a 2022. A linha pontilhada vermelha indica a mediana total (e.g., mediana de todos os anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# Combine todos os gráficos em uma única imagem\nimagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_chico_mendes.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Chico Mendes\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n```\n\n</br>\n\n```{r grafico abundancia-parna-serra-divisor}\n#| label: fig-abundancia-parna-serra-divisor\n#| echo: false\n#| include: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '70%'\n\n\n\n# Análise  de efeito da queda do tabocal nas tribos de borboletas frugívoras - AUTOMATIZADO\n# PARANA Serra do Divisor\n# Script: Isabela Freitas Oliveira\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(car)\n\n# setwd(\"~/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela\")\n# \n# dados_borboletas <- read.table(\"dados_analise_borboletas_Isabela_V2.txt\", header = TRUE)\n# dados_borboletas$ano <- as.factor(dados_borboletas$ano)\n# dados_borboletas <- dados_borboletas[dados_borboletas$ano != \"2023\", ]\n# dados_borboletas <- dados_borboletas[!is.na(dados_borboletas$tribo), ]\n\n\ndados_regiao_especifica <- dados_borboletas %>%\n  filter(uc == 'Parna_da_Serra_do_Divisor')\n\n# Calcular o esforço amostral para cada combinação de uc_ea, expedicao e ano\nesforco_por_expedicao <- dados_regiao_especifica %>%\n  group_by(uc_ea, uc, expedicao, ano) %>%\n  summarize(\n    max_dia_amostragem = max(dia_amostragem) - 1,\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    esforco_amostral = 16 * max_dia_amostragem\n  )\n\n# Agregar o esforço de amostragem para cada uc_ea e ano\nesforco_total_por_ea_ano <- esforco_por_expedicao %>%\n  group_by(uc_ea, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregar o esforço de amostragem para cada uc e ano\nesforco_total_por_uc_ano <- esforco_por_expedicao %>%\n  group_by(uc, ano) %>%\n  summarize(\n    esforco_total_ano = sum(esforco_amostral),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o esforço total por ano\nesforco_por_ano <- esforco_total_por_uc_ano %>%\n  group_by(ano,uc) %>%\n  summarize(\n    esforco = sum(esforco_total_ano),\n    .groups = 'drop'\n  )\n\n# Agregação para obter o número total de indivíduos por ano\nnum_ind_por_ano <- dados_regiao_especifica %>%\n  group_by(ano) %>%\n  summarize(\n    num_ind = sum(individuos, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n#criando uma coluna de UA e selecionando somente as colunas interessadas pra analise\ndados_regiao_especifica <- dados_regiao_especifica %>%\n  mutate(ua = paste(uc_ea, transeccao, sep = \"_\"))\n\n#combinando os dados por UA por ano = 12 (3 ea x 4 parcelas)\ndf_abu_ano <- dados_regiao_especifica %>%\n  group_by(tribo, ua, uc_ea,uc, ano) %>%\n  summarise(abundancia = sum(individuos, na.rm = TRUE)) %>%\n  ungroup()\n\n# Transforma o df para colocar os zeros\ndf_tabocal <- df_abu_ano %>%\n  spread(key = tribo, value = abundancia, fill = 0)\n\n# Retorna ao formato longo para as análises\ndf_long <- df_tabocal %>%\n  pivot_longer(cols = Ageroniini:Satyrini, names_to = \"tribo\", values_to = \"individuos\")\n\n# Agregação para obter a abundância total de cada tribo por ano\nabundancia_por_ano <- df_long %>%\n  group_by(tribo, ano) %>%\n  summarize(\n    abundancia_total = sum(individuos)\n  )\n\n# Juntar as tabelas pela coluna 'ano' e 'uc'\ndf_long_com_esforco <- left_join(df_long, esforco_por_ano, by = c(\"ano\", \"uc\"))\n\n\n# Calcular a abundância padronizada pelo esforço amostral\ndf_long <- df_long_com_esforco %>%\n  mutate(abundancia_padronizada = (individuos / esforco) * 100)\n#\n\nlibrary(tidyverse)\n\n# Realizar análise e gerar gráficos para cada tribo\n\ntribos <- unique(df_long$tribo)\n\nfor (tribo_atual in tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Adicione o ano de 2020, mesmo que não haja dados\n  medianas_anuais <- c(medianas_anuais, NA)\n  names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- c(erros_padrao, NA)\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup)*1.2\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = 1) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"Ano\",\n         y = \"Mediana da Abundância / Esforço Amostral\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5),\n          axis.text = element_text(size = 5),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Exiba o gráfico ajustado\n  print(p_tribo)\n  \n  # Salvar a imagem usando ggsave()\n  ggsave(filename = paste(\"mediana_\", gsub(\" \", \"_\", tolower(tribo_atual)), \"_ajustado_pontos_linha_2020.png\", sep = \"\"),  # Escolha um nome adequado para o arquivo\n         plot = p_tribo,  # O objeto ggplot\n         device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n         path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Serra do Divisor\",  # Especifique o diretório onde você deseja salvar o gráfico\n         dpi = 300,  # Define a resolução (DPI)\n         width = 6, height = 5, units = \"in\")  # Define o tamanho da imagem\n}\n\n\nlibrary(gridExtra)\n\n# Definir uma lista para armazenar os gráficos\nlista_graficos <- list()\n\n# Defina a ordem das tribos\nordem_tribos <- c(\"Brassolini\", \"Morphini\", \"Haeterini\", \"Preponini\", \"Melanitini\", \"Anaeini\", \n                  \"Epicaliini\", \"Epiphilini\", \"Coeini\", \"Satyrini\", \"Callicorini\", \"Biblidini\", \"Ageroniini\")\n\nfor (tribo_atual in ordem_tribos) {\n  cat(\"Realizando análise e gerando gráfico para a tribo:\", tribo_atual, \"\\n\")\n  \n  # Filtrar os dados para a tribo atual\n  df_tribo <- df_long %>%\n    filter(tribo == tribo_atual)\n  \n  # Verificar se há dados para a tribo atual\n  if (nrow(df_tribo) == 0) {\n    cat(\"Não há dados para a tribo:\", tribo_atual, \"\\n\")\n    cat(\"Nenhuma análise ou gráfico gerado para a tribo:\", tribo_atual, \"\\n\")\n    next\n  }\n  \n  # Calcular a mediana anual para cada ano\n  medianas_anuais <- tapply(df_tribo$abundancia_padronizada, df_tribo$ano, median)\n  \n  # Adicione o ano de 2020, mesmo que não haja dados\n  medianas_anuais <- c(medianas_anuais, NA)\n  names(medianas_anuais)[length(medianas_anuais)] <- \"2020\"\n  \n  # Calcular a mediana geral das medianas anuais\n  mediana_geral_anual <- median(medianas_anuais, na.rm = TRUE)\n  \n  # Remover os anos com NA das medianas anuais\n  medianas_anuais <- medianas_anuais[!is.na(medianas_anuais)]\n  \n  # Crie um vetor para armazenar os resultados dos testes\n  resultados_teste_anual <- numeric(length(medianas_anuais))\n  \n  # Faça um loop pelos anos e realize o teste de Wilcoxon para cada ano\n  for (ano_atual in names(medianas_anuais)) {\n    # Realiza o teste de Wilcoxon comparando as medianas do ano atual com a mediana geral\n    wilcox_test_resultado <- wilcox.test(df_tribo$abundancia_padronizada[df_tribo$ano == ano_atual], mu = mediana_geral_anual, exact = FALSE)\n    \n    # Armazena o valor p do teste no vetor de resultados\n    resultados_teste_anual[ano_atual] <- wilcox_test_resultado$p.value\n  }\n  \n  # Crie um data frame com as medianas anuais, a mediana geral anual e os valores-p\n  df_plot <- data.frame(Ano = as.character(unique(c(names(medianas_anuais), \"2020\"))), MedianaAnual = c(medianas_anuais, NA))\n  df_plot$MedianaGeral <- mediana_geral_anual\n  df_plot$ValorP <- resultados_teste_anual[match(df_plot$Ano, names(resultados_teste_anual))]\n  \n  # Calcule os erros padrão para cada ano\n  erros_padrao <- sapply(names(medianas_anuais), function(ano) {\n    dados_ano <- df_tribo$abundancia_padronizada[df_tribo$ano == ano]\n    desvio_padrao_ano <- sd(dados_ano, na.rm = TRUE)\n    erro_padrao_ano <- desvio_padrao_ano / sqrt(length(dados_ano))\n    return(erro_padrao_ano)\n  })\n  \n  # Adicione os intervalos de confiança ao data frame\n  df_plot$ErroPadrao <- c(erros_padrao, NA)\n  df_plot$IntervaloConfiancaInf <- pmax(df_plot$MedianaAnual - 1.96 * df_plot$ErroPadrao, 0)\n  df_plot$IntervaloConfiancaSup <- df_plot$MedianaAnual + 1.96 * df_plot$ErroPadrao\n  \n  # Definir os limites do eixo y de acordo com os valores das medianas\n  y_limit <- max(df_plot$IntervaloConfiancaSup) * 1.2\n  \n  # Definir a cor de acordo com a tribo\n  cor_tribo <- if (tribo_atual %in% c(\"Brassolini\", \"Haeterini\", \"Morphini\")) {\n    \"#35978f\"\n  } else if (tribo_atual %in% c(\"Satyrini\", \"Coeini\", \"Epiphilini\", \"Epicaliini\", \"Anaeini\", \"Melanitini\", \"Preponini\")) {\n    \"gray40\"\n  } else {\n    \"#bf812d\"\n  }\n  \n  # Crie o gráfico ajustado com pontos e linhas\n  p_tribo <- ggplot(df_plot, aes(x = Ano, y = MedianaAnual)) +\n    geom_point(color = cor_tribo, size = 1) +\n    geom_line(size = 0.5, group = 1, color = cor_tribo) +  # Use group = 1 para conectar todos os pontos\n    geom_errorbar(aes(ymin = IntervaloConfiancaInf, ymax = IntervaloConfiancaSup), width = 0.2, color = cor_tribo) +\n    geom_hline(yintercept = mediana_geral_anual, linetype = \"dashed\", color = \"red\") +\n    labs(title = paste(\"\", tribo_atual),\n         x = \"\",\n         y = \"Mediana da Abundância \n / Esforço Amostral\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5, size = 8),\n          axis.title = element_text(size = 5),\n          axis.text = element_text(size = 5),\n          axis.line = element_line(color = \"black\"),\n          axis.ticks.y = element_line(color = \"black\"),\n          panel.grid.minor = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\") +  # Remover a legenda\n    ylim(0, y_limit) +  # Ajuste os limites conforme necessário\n    geom_text(data = df_plot[df_plot$ValorP < 0.05, ], \n              aes(x = Ano, y = IntervaloConfiancaSup, label = \"*\"), \n              vjust = -0.5,  \n              size = 3)\n  \n  # Adicionar o gráfico atual à lista\n  lista_graficos[[tribo_atual]] <- p_tribo\n}\n\n\n```\n\n</br>\n\n\n```{r grafico abundancia-parna-serra-divisor-combinada}\n#| label: fig-abundancia-parana-serra-divisor-combinada\n#| echo: false\n#| message: false\n#| warning: false\n#| cache: true\n#| fig.pos: 'H'\n#| out.width: '75%'\n#| fig-cap: \"Variação na abundância das tribos de borboletas frugívoras no PARNA Serra do Divisor no período de 2020 a 2022. A linha pontilhada vermelha indica a mediana total (e.g., mediana de todos os anos). O asterisco indica que a mediana anual foi significativamente diferente da mediana total, considerando p ≤ 0.01.\"\n\n# Combine todos os gráficos em uma única imagem\nimagem_combinada <- grid.arrange(grobs = lista_graficos, ncol = 3)\n\n# Salvar a imagem combinada usando ggsave()\n# ggsave(filename = \"todos_graficos_serra_do_divisor.png\",  # Escolha um nome adequado para o arquivo\n#        plot = imagem_combinada,  # O objeto ggplot\n#        device = \"png\",  # Pode ser \"jpeg\", \"tiff\", etc.\n#        path = \"/Users/isabelafreitasoliveira/Documents/ICMBIO-COMOB/Dados_Monitora/Análise de dados/Monitora_Borboletas_Isabela/Destaque/Serra do Divisor\",  # Especifique o diretório onde você deseja salvar a imagem\n#        dpi = 300,  # Define a resolução (DPI)\n#        width = 14, height = 12, units = \"in\")  # Define o tamanho da imagem\n\n```\n\n\n\n## Discussão\n\n</br>\n\nO Programa Monitora vem se estabelecendo como um dos maiores programas de monitoramento da biodiversidade do mundo. O Brasil, por sua extensão continental e diversos biomas ainda carentes em estudos a longo prazo, necessita, cada vez mais, do apoio federal (ARPA, FUNBIO, CNPq,...) e de ONGs nacionais (IPE, ECOPORÉ, FEST....)  e internacionais (PNUD, Gordon and Betty MOORE Foundation....), para a sua continuidade. Somente dessa forma é possível acumular esforços para que a biodiversidade brasileira seja conhecida e protegida.  \n\nAs amostragens de borboletas frugívoras do Protocolo Básico do Programa Monitora foram, em sua maioria, bem executadas, cumprindo com o Protocolo e amostrando importantes dados para o país. Especialmente na Amazônia, pela sua dificuldade logística, novas áreas têm sido inventariadas, proporcionando, mesmo que inicialmente, um panorama da diversidade neste bioma. No entanto, também se faz necessário a continuidade e compromisso das UCs participantes e a adesão de novas áreas, como relatado ao longo do capítulo. Em 2022, o último ano de dados analisados, apresentou a maior participação de UCs, destacando não somente a recuperação causada pela baixa amostragem nos anos da pandemia de COVID-19, mas também a superação dos números. É de se esperar que o número de UCs consolidadas tendem a crescer, não somente na Amazônia, mas também nos outros biomas participantes, Cerrado e Mata Atlântica. Este aumento espacial do esforço amostral se faz necessário devido à grande relação entre esforço e número de capturas. Sendo assim, quanto maior o número de locais amostrados, maior a abundância, riqueza e diversidade conhecidas (ref).  \n\nOutro fator indispensável para um programa de monitoramento é a sua amostragem temporal (ref). As amostragens ao longo do tempo (anos) possibilitam detectar mudanças ou manutenções de padrões de abundância e composição em uma determinado local ou região (ref). \n\n\n## Recomendações\n\n</br>\n\n::: callout-tip\n\n## Boas práticas para aprimorar o Programa\n\n</br>\n\n- Ampliar o número de unidades de conservação com aplicação do protocolo de borboletas frugívoras (Básico e Avançado) nos biomas Mata Atlântica e Cerrado, dado que esses biomas não chegaram a atingir a suficiência amostral em nenhum ano desde o início do Programa; \n\n- Na Região Climática Noroeste da Amazônia, implementar o protocolo de borboletas frugívoras em pelo menos três UCs (9 EAs), preferencialmente na ESEC Juami-Japurá, no PARNA do Pico da Neblina e na RESEX Auatí-Paraná;  \n\n- Ampliar o número de UCs com aplicação do protocolo de borboletas frugívoras nas regiões do médio e baixo rio Juruá, regiões carentes de amostragem de borboletas e de extrema importância biológica. É sugerida a implementação nas RESEX Médio e Baixo Juruá e na FLONA de Tefé;  \n\n- Ampliar o número de UCs com aplicação do protocolo de borboletas frugívoras na Região Climática Sudeste Amazônica de forma que seja alcançada a suficiência amostral de 18 EAs no ano. Sugere-se a implementação na FLONA de Carajás, na REBIO Nascentes da Serra do Cachimbo e na ESEC Iquê;  \n\n- Consolidar a implantação do protocolo de borboletas frugívoras naquelas unidades de conservação ainda não consolidadas, de forma que as UCs contem com pelo menos três estações amostrais implantadas e em operação; \n\n- Assegurar que durante as campanhas de campo as amostragens sejam realizadas de acordo com as diretrizes estabelecidas no protocolo amostral, em especial quanto ao respeito aos períodos de coleta definidos para cada região e em relação ao esforço amostral (número de dias de amostragens em cada EA); \n\n- Assegurar que os dados coletados sejam repassados à Coordenação de acordo com as orientações definidas e num prazo razoável após a realização da campanha de campo;  \n\n- Divulgar novamente às UCs os períodos indicados para amostragem nas diferentes regiões, dado que ainda há várias unidades amostrando fora desse período. \n\n::: ","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"freese":"auto","engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"cap04.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Caderno de Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Baixar código-fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Modified","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjectura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","bibliography":["referencias.bib"],"csl":"plos.csl","opts_chunk":{"fig.align":"center"},"theme":["cosmo","custom.scss"],"callout-appearance":"simple"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"freese":"auto","engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","include-in-header":["preamble.tex"],"output-file":"cap04.pdf"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Caderno de Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Baixar código-fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Modified","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjectura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"block-headings":true,"bibliography":["referencias.bib"],"csl":"plos.csl","opts_chunk":{"fig.align":"center"},"documentclass":"scrbook","fontfamily":"libertinus"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}